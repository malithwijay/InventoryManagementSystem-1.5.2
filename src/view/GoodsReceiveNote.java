/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Database;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;
import model.GRNote;
import model.StockAdjustment;

/**
 *
 * @author malith
 */
public class GoodsReceiveNote extends javax.swing.JFrame {

    /**
     * Creates new form GoodsReceiveNote
     */
    public GoodsReceiveNote() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }
    private String itemNO = "";
    public void loadGRN(String ino)
    {
        DefaultTableModel tmode = (DefaultTableModel)tableGRN.getModel();
        tmode.setRowCount(0);
        itemNO=ino;
        GRNote g = new GRNote();
        ResultSet rs = g.viewGRN(ino);
        if(rs !=null)
        {
            try {
                while(rs.next())
                {
                    String grnNo = String.valueOf(rs.getInt("GRNNO"));
                    String date = String.valueOf(rs.getDate("Date"));
                    String remark = rs.getString("Remark");
                    String qty = String.valueOf(rs.getInt("Qty"));
                    
                    String tbData[] = {grnNo,date,remark,qty};
                    tmode.addRow(tbData);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Cannot Load Goods Receive Notes Try to Reopen the menu", "Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Goods Receive Notes not found for this item", "No Data",JOptionPane.WARNING_MESSAGE);
        }
    }
    public void loadStockAdjustment()
    {
        DefaultTableModel tmode = (DefaultTableModel)tableSA.getModel();
        tmode.setRowCount(0);
        StockAdjustment g = new StockAdjustment();
        ResultSet rs = g.viewStockAdjustment(itemNO);
        if(rs !=null)
        {
            try {
                while(rs.next())
                {
                    String stno = String.valueOf(rs.getInt("StNO"));
                    String date = String.valueOf(rs.getDate("Date"));
                    String remark = rs.getString("Remark");
                    String oldQty = String.valueOf(rs.getInt("Oldqty"));
                    String newQty = String.valueOf(rs.getInt("adjustqty"));
                    
                    String tbData[] = {stno,date,remark,oldQty,newQty};
                    tmode.addRow(tbData);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Cannot Load Stock Adjustments Try to Reopen the menu", "Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Stock Adjustments not found for this item", "No Data",JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelGRNSA = new javax.swing.JPanel();
        PanelGRNSAContent = new javax.swing.JPanel();
        btnBackGRN = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbGRNFilterSearch = new javax.swing.JComboBox<>();
        txtGRNFilterSearch = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmbSAFilterSearch = new javax.swing.JComboBox<>();
        txtSAFilterSearch = new javax.swing.JTextField();
        btnGRNFilterSearch = new javax.swing.JButton();
        btnGRNFilterSearchClear = new javax.swing.JButton();
        btnSAFilterSearchCancel = new javax.swing.JButton();
        btnSAFilterSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableGRN = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableSA = new javax.swing.JTable();
        btnStockAdjusmentPrint = new javax.swing.JButton();
        btnGrnPrint1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        PanelGRNSA.setBackground(new java.awt.Color(0, 102, 102));

        btnBackGRN.setBackground(new java.awt.Color(0, 102, 102));
        btnBackGRN.setForeground(new java.awt.Color(255, 255, 255));
        btnBackGRN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.png"))); // NOI18N
        btnBackGRN.setText("Back");
        btnBackGRN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBackGRNMouseClicked(evt);
            }
        });
        btnBackGRN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackGRNActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Stock Adjusments");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Good receive Notes");

        jLabel4.setText("Filter By");

        cmbGRNFilterSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Date", "Remark", "All" }));

        jLabel5.setText("Filter By");

        cmbSAFilterSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Date", "Remark", "All" }));

        btnGRNFilterSearch.setBackground(new java.awt.Color(51, 153, 255));
        btnGRNFilterSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnGRNFilterSearch.setText("Filter");
        btnGRNFilterSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGRNFilterSearchActionPerformed(evt);
            }
        });

        btnGRNFilterSearchClear.setBackground(new java.awt.Color(255, 0, 0));
        btnGRNFilterSearchClear.setForeground(new java.awt.Color(255, 255, 255));
        btnGRNFilterSearchClear.setText("Clear");
        btnGRNFilterSearchClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGRNFilterSearchClearActionPerformed(evt);
            }
        });

        btnSAFilterSearchCancel.setBackground(new java.awt.Color(255, 0, 0));
        btnSAFilterSearchCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnSAFilterSearchCancel.setText("Clear");
        btnSAFilterSearchCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSAFilterSearchCancelActionPerformed(evt);
            }
        });

        btnSAFilterSearch.setBackground(new java.awt.Color(51, 153, 255));
        btnSAFilterSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSAFilterSearch.setText("Filter");
        btnSAFilterSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSAFilterSearchActionPerformed(evt);
            }
        });

        tableGRN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Number", "Date", "Remark", "Qty"
            }
        ));
        tableGRN.setGridColor(new java.awt.Color(255, 255, 255));
        tableGRN.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tableGRN.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tableGRN);
        if (tableGRN.getColumnModel().getColumnCount() > 0) {
            tableGRN.getColumnModel().getColumn(3).setResizable(false);
        }

        tableSA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Number", "Date", "Remark", "Old Qty", "New Qty"
            }
        ));
        tableSA.setGridColor(new java.awt.Color(255, 255, 255));
        tableSA.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tableSA.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setViewportView(tableSA);

        btnStockAdjusmentPrint.setBackground(new java.awt.Color(51, 51, 255));
        btnStockAdjusmentPrint.setForeground(new java.awt.Color(255, 255, 255));
        btnStockAdjusmentPrint.setText("Print");
        btnStockAdjusmentPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStockAdjusmentPrintActionPerformed(evt);
            }
        });

        btnGrnPrint1.setBackground(new java.awt.Color(51, 51, 255));
        btnGrnPrint1.setForeground(new java.awt.Color(255, 255, 255));
        btnGrnPrint1.setText("Print");
        btnGrnPrint1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrnPrint1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelGRNSAContentLayout = new javax.swing.GroupLayout(PanelGRNSAContent);
        PanelGRNSAContent.setLayout(PanelGRNSAContentLayout);
        PanelGRNSAContentLayout.setHorizontalGroup(
            PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelGRNSAContentLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelGRNSAContentLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmbGRNFilterSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnGRNFilterSearch))
                .addGap(18, 18, 18)
                .addGroup(PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtGRNFilterSearch)
                    .addComponent(btnGRNFilterSearchClear))
                .addGap(151, 151, 151)
                .addGroup(PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelGRNSAContentLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmbSAFilterSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSAFilterSearch))
                .addGap(18, 18, 18)
                .addGroup(PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelGRNSAContentLayout.createSequentialGroup()
                        .addComponent(txtSAFilterSearch)
                        .addGap(81, 81, 81))
                    .addGroup(PanelGRNSAContentLayout.createSequentialGroup()
                        .addComponent(btnSAFilterSearchCancel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelGRNSAContentLayout.createSequentialGroup()
                .addGroup(PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelGRNSAContentLayout.createSequentialGroup()
                        .addGroup(PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelGRNSAContentLayout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelGRNSAContentLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelGRNSAContentLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGrnPrint1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelGRNSAContentLayout.createSequentialGroup()
                        .addComponent(btnStockAdjusmentPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBackGRN, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        PanelGRNSAContentLayout.setVerticalGroup(
            PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelGRNSAContentLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbGRNFilterSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGRNFilterSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cmbSAFilterSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSAFilterSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGRNFilterSearch)
                    .addComponent(btnGRNFilterSearchClear)
                    .addComponent(btnSAFilterSearchCancel)
                    .addComponent(btnSAFilterSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane3))
                .addGap(18, 18, 18)
                .addGroup(PanelGRNSAContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGrnPrint1)
                    .addComponent(btnBackGRN)
                    .addComponent(btnStockAdjusmentPrint))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Good Receive Notes And Stock Ajusments");

        javax.swing.GroupLayout PanelGRNSALayout = new javax.swing.GroupLayout(PanelGRNSA);
        PanelGRNSA.setLayout(PanelGRNSALayout);
        PanelGRNSALayout.setHorizontalGroup(
            PanelGRNSALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelGRNSAContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PanelGRNSALayout.setVerticalGroup(
            PanelGRNSALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelGRNSALayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelGRNSAContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelGRNSA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelGRNSA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackGRNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackGRNMouseClicked
        this.dispose();
    }//GEN-LAST:event_btnBackGRNMouseClicked

    private void btnGRNFilterSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGRNFilterSearchActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel)tableGRN.getModel();
        tmodel.setRowCount(0);
        String filter=null;
        if(cmbGRNFilterSearch.getSelectedIndex()==0)
        {
            filter = "Date";
        }
        if(cmbGRNFilterSearch.getSelectedIndex()==1)
        {
            filter = "Remark";
        }
        if(cmbGRNFilterSearch.getSelectedIndex()==2)
        {
            loadGRN(itemNO);
        }
        GRNote g = new GRNote();
        ResultSet rs = g.viewGRN(itemNO,filter,txtGRNFilterSearch.getText());
        if(rs !=null)
        {
            try {
                while(rs.next())
                {
                    String grnNo = String.valueOf(rs.getInt("GRNNO"));
                    String date = String.valueOf(rs.getDate("Date"));
                    String remark = rs.getString("Remark");
                    String qty = String.valueOf(rs.getInt("Qty"));
                    
                    String tbData[] = {grnNo,date,remark,qty};
                    tmodel.addRow(tbData);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Cannot Load Goods Receive Notes Try to Reopen the menu", "Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Goods Receive Notes not found for this filter", "No Data",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnGRNFilterSearchActionPerformed

    private void btnGRNFilterSearchClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGRNFilterSearchClearActionPerformed
        // TODO add your handling code here:
        cmbGRNFilterSearch.setSelectedIndex(0);
        txtGRNFilterSearch.setText("");
        DefaultTableModel tmodel = (DefaultTableModel)tableGRN.getModel();
        tmodel.setRowCount(0);
    }//GEN-LAST:event_btnGRNFilterSearchClearActionPerformed

    private void btnSAFilterSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSAFilterSearchActionPerformed
        // TODO add your handling code here:
        String filter=null;
        if(cmbSAFilterSearch.getSelectedIndex()==0)
        {
            filter = "Date";
        }
        if(cmbSAFilterSearch.getSelectedIndex()==1)
        {
            filter = "Remark";
        }
        if(cmbSAFilterSearch.getSelectedIndex()==2)
        {
            loadStockAdjustment();
        }
        DefaultTableModel tmode = (DefaultTableModel)tableSA.getModel();
        tmode.setRowCount(0);
        StockAdjustment g = new StockAdjustment();
        ResultSet rs = g.viewStockAdjustment(itemNO,filter,txtSAFilterSearch.getText());
        if(rs !=null)
        {
            try {
                while(rs.next())
                {
                    String stno = String.valueOf(rs.getInt("StNO"));
                    String date = String.valueOf(rs.getDate("Date"));
                    String remark = rs.getString("Remark");
                    String oldQty = String.valueOf(rs.getInt("Oldqty"));
                    String newQty = String.valueOf(rs.getInt("adjustqty"));
                    
                    String tbData[] = {stno,date,remark,oldQty,newQty};
                    tmode.addRow(tbData);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Cannot Load Stock Adjustments Try to Reopen the menu", "Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Stock Adjustments not found for this item", "No Data",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSAFilterSearchActionPerformed

    private void btnSAFilterSearchCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSAFilterSearchCancelActionPerformed
        // TODO add your handling code here:
        txtSAFilterSearch.setText("");
        cmbSAFilterSearch.setSelectedIndex(0);
        DefaultTableModel tmodel = (DefaultTableModel)tableSA.getModel();
        tmodel.setRowCount(0);
    }//GEN-LAST:event_btnSAFilterSearchCancelActionPerformed

    private void btnBackGRNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackGRNActionPerformed
        // TODO add your handling code here:
        cmbGRNFilterSearch.setSelectedIndex(0);
        txtGRNFilterSearch.setText("");
        DefaultTableModel tmodel = (DefaultTableModel)tableGRN.getModel();
        tmodel.setRowCount(0);
        
        txtSAFilterSearch.setText("");
        cmbSAFilterSearch.setSelectedIndex(0);
        DefaultTableModel tmodel1 = (DefaultTableModel)tableSA.getModel();
        tmodel1.setRowCount(0);
    }//GEN-LAST:event_btnBackGRNActionPerformed

    private void btnGrnPrint1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrnPrint1ActionPerformed
        // TODO add your handling code here:
        Database db = new Database();
        ResultSet rs = db.selectData("select * from tb_item where INO = "+itemNO+"");
        String iName = "";
        try {
            while(rs.next())
            {
                iName = rs.getString("IName");
            }
            
            if(tableGRN.getRowCount()<=0)
            {
                JOptionPane.showMessageDialog(this, "Report Data Seems Empty Printing not Available","Error",JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                String aboutText="<tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p>Item Number : </p></td> <td><p>"+itemNO+"</p></td> <td><p>Item Name : </p></td> <td><p>"+iName+"</p></td> </tr>\n";
                printGRNReport(aboutText);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Unable to Load Item Name","Error",JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(this, "Report Data Seems Empty Printing not Available","Error",JOptionPane.ERROR_MESSAGE);
        }
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(this, "Unable To Print Data","Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnGrnPrint1ActionPerformed

    private void btnStockAdjusmentPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStockAdjusmentPrintActionPerformed
        // TODO add your handling code here:
        Database db = new Database();
        ResultSet rs = db.selectData("select * from tb_item where INO = "+itemNO+"");
        String iName = "";
        try {
            while(rs.next())
            {
                iName = rs.getString("IName");
            }
            
            if(tableGRN.getRowCount()<=0)
            {
                JOptionPane.showMessageDialog(this, "Report Data Seems Empty Printing not Available","Error",JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                String aboutText="<tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p>Item Number : </p></td> <td><p>"+itemNO+"</p></td> <td><p>Item Name : </p></td> <td><p>"+iName+"</p></td> </tr>\n";
                printSAReport(aboutText);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Unable to Load Item Name","Error",JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(this, "Report Data Seems Empty Printing not Available","Error",JOptionPane.ERROR_MESSAGE);
        }
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(this, "Unable To Print Data","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnStockAdjusmentPrintActionPerformed

    private String username="";
    public void setusername(String uname)
    {
        username = uname;
    }
    
    private void printGRNReport(String about)
    {
        Date now = new Date();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String itemData = "";
        for(int c=0; c<tableGRN.getRowCount();c++)
        {
            if(itemData.equals(""))
            {
                itemData = "<tr><td><p>"+tableGRN.getValueAt(c, 0).toString()+"</p></td><td><p>"+tableGRN.getValueAt(c, 1).toString()+"</p></td><td><p>"+tableGRN.getValueAt(c, 2).toString()+"</p></td><td><p>"+tableGRN.getValueAt(c, 3).toString()+"</p></td>\n";
            }  
            else
            {
                itemData = itemData + "<tr><td><p>"+tableGRN.getValueAt(c, 0).toString()+"</p></td><td><p>"+tableGRN.getValueAt(c, 1).toString()+"</p></td><td><p>"+tableGRN.getValueAt(c, 2).toString()+"</p></td><td><p>"+tableGRN.getValueAt(c, 3).toString()+"</p></td>\n";
            }
        }
        String reportText = "<html>\n" +
                            "    <head>\n" +
                            "        <style>\n" +
                            "            p{font-family: 'Times New Roman', Times, serif;font-size: 11pt; text-align: left;}\n" +
                            //"            td {border : solid 1pt #000000; border-collapse: collapse;}\n" +
                            "            table{border : solid 1pt #000000; border-collapse: collapse;}\n" +
                            "        </style>\n" +
                            "    </head>\n" +
                            "    <body>\n" +
                            "        <table style=\"width: 100%;\">\n" +
                            "            <tr><td><h1 style=\"font-family: 'Times New Roman', Times, serif; font-size: 18pt; text-align: center;\">GRN Report</h1></td></tr>\n" +
                            "            <tr aria-rowspan=\"3\">\n" +
                            "                <td><p>Multi Engineering Services Lanka Private Limited<br>No.466/7A Thapowanaya Road, Aggona<br>Sri Lanka.<br>Tel : 0112 794 959, 0114 558 559</p></td>\n" +
                            "            </tr>\n" +
                            //"            <tr><td><p style=\"text-align: left;\">Good Receive Note Report</p></td></tr>\n" +
                            "\n" +
                            "            <!--report header details starts here-->\n" +
                            "            <tr>\n" +
                            "                <td>\n" +
                            "                    <table style=\"width: 100%;\">\n" +
                            "                        <tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p>Generated By,</p></td> <td><p>"+username+"</p></td> <td><p>Date : </p></td> <td><p>"+df.format(now)+"</p></td> </tr>\n" +
                            "                        "+about+"" +
                            "                    </table>\n" +
                            "                </td>\n" +
                            "            </tr>\n" +
                            "            <tr><td style=\"height: 12pt;\"><p></p></td></tr>\n" +
                            "\n" +
                            "            <!--data table starts here-->\n" +
                            "            <tr>\n" +
                            "                <td>\n" +
                            "                    <table style=\"width: 100%;\">\n" +
                            "                        <tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"><td ><p>GRN No</p></td><td><p>Date</p></td><td><p>Remark</p></td><td><p>Qty</p></td>\n" +
                            "                        <!--item data comes here!-->\n" +
                            "                       "+itemData+" " +
                            "\n" +
                            "                        <!--finishes here-->\n" +
                          //"                        " +
                            "                    </table>\n" +
                            "                </td>\n" +
                            "            </tr>\n" +
                            "\n" +
                            "            <tr><td><br><p style=\"text-align: right;\">Certified by,<br><br>-----------------------</p><br></tr></td>\n" +
                            "        </table>\n" +
                            "        \n" +
                            "    </body>\n" +
                            "\n" +
                            "</html>";
        
        JTextPane jtp = new JTextPane();
        jtp.setContentType("text/html");
        jtp.setText(reportText);
        try {
            jtp.print();
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(this, "Unable to Print Report Try Again","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void printSAReport(String about)
    {
        Date now = new Date();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String itemData = "";
        for(int c=0; c<tableSA.getRowCount();c++)
        {
            if(itemData.equals(""))
            {
                itemData = "<tr><td><p>"+tableSA.getValueAt(c, 0).toString()+"</p></td><td><p>"+tableSA.getValueAt(c, 1).toString()+"</p></td><td><p>"+tableSA.getValueAt(c, 2).toString()+"</p></td><td><p>"+tableSA.getValueAt(c, 3).toString()+"</p></td><td><p>"+tableSA.getValueAt(c, 4).toString()+"</p></td>\n";
            }  
            else
            {
                itemData = itemData + "<tr><td><p>"+tableSA.getValueAt(c, 0).toString()+"</p></td><td><p>"+tableSA.getValueAt(c, 1).toString()+"</p></td><td><p>"+tableSA.getValueAt(c, 2).toString()+"</p></td><td><p>"+tableSA.getValueAt(c, 3).toString()+"</p></td><td><p>"+tableSA.getValueAt(c, 4).toString()+"</p></td>\n";
            }
        }
        String reportText = "<html>\n" +
                            "    <head>\n" +
                            "        <style>\n" +
                            "            p{font-family: 'Times New Roman', Times, serif;font-size: 11pt; text-align: left;}\n" +
                            //"            td {border : solid 1pt #000000; border-collapse: collapse;}\n" +
                            "            table{border : solid 1pt #000000; border-collapse: collapse;}\n" +
                            "        </style>\n" +
                            "    </head>\n" +
                            "    <body>\n" +
                            "        <table style=\"width: 100%;\">\n" +
                            "            <tr><td><h1 style=\"font-family: 'Times New Roman', Times, serif; font-size: 18pt; text-align: center;\">Stock Adjustment Report</h1></td></tr>\n" +
                            "            <tr aria-rowspan=\"3\">\n" +
                            "                <td><p>Multi Engineering Services Lanka Private Limited<br>No.466/7A Thapowanaya Road, Aggona<br>Sri Lanka.<br>Tel : 0112 794 959, 0114 558 559</p></td>\n" +
                            "            </tr>\n" +
                            //"            <tr><td><p style=\"text-align: left;\">Stock Adjustment Report</p></td></tr>\n" +
                            "\n" +
                            "            <!--report header details starts here-->\n" +
                            "            <tr>\n" +
                            "                <td>\n" +
                            "                    <table style=\"width: 100%;\">\n" +
                            "                        <tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p>Generated By,</p></td> <td><p>"+username+"</p></td> <td><p>Date : </p></td> <td><p>"+df.format(now)+"</p></td> </tr>\n" +
                            "                        "+about+"" +
                            "                    </table>\n" +
                            "                </td>\n" +
                            "            </tr>\n" +
                            "            <tr><td style=\"height: 12pt;\"><p></p></td></tr>\n" +
                            "\n" +
                            "            <!--data table starts here-->\n" +
                            "            <tr>\n" +
                            "                <td>\n" +
                            "                    <table style=\"width: 100%;\">\n" +
                            "                        <tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"><td ><p>SA No</p></td><td><p>Date</p></td><td><p>Remark</p></td><td><p>Old Qty</p></td><td><p>New Qty</p></td>\n" +
                            "                        <!--item data comes here!-->\n" +
                            "                       "+itemData+" " +
                            "\n" +
                            "                        <!--finishes here-->\n" +
                          //"                        " +
                            "                    </table>\n" +
                            "                </td>\n" +
                            "            </tr>\n" +
                            "\n" +
                            "            <tr><td><br><p style=\"text-align: right;\">Certified by,<br><br>-----------------------</p><br></tr></td>\n" +
                            "        </table>\n" +
                            "        \n" +
                            "    </body>\n" +
                            "\n" +
                            "</html>";
        
        JTextPane jtp = new JTextPane();
        jtp.setContentType("text/html");
        jtp.setText(reportText);
        try {
            jtp.print();
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(this, "Unable to Print Report Try Again","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GoodsReceiveNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GoodsReceiveNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GoodsReceiveNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GoodsReceiveNote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GoodsReceiveNote().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelGRNSA;
    private javax.swing.JPanel PanelGRNSAContent;
    private javax.swing.JButton btnBackGRN;
    private javax.swing.JButton btnGRNFilterSearch;
    private javax.swing.JButton btnGRNFilterSearchClear;
    private javax.swing.JButton btnGrnPrint1;
    private javax.swing.JButton btnSAFilterSearch;
    private javax.swing.JButton btnSAFilterSearchCancel;
    private javax.swing.JButton btnStockAdjusmentPrint;
    private javax.swing.JComboBox<String> cmbGRNFilterSearch;
    private javax.swing.JComboBox<String> cmbSAFilterSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tableGRN;
    private javax.swing.JTable tableSA;
    private javax.swing.JTextField txtGRNFilterSearch;
    private javax.swing.JTextField txtSAFilterSearch;
    // End of variables declaration//GEN-END:variables
}
