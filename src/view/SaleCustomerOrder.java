/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Database;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;
import model.Customer;
import model.Invoice;
import model.Item;
import model.Payment;

/**
 *
 * @author malith
 */
public class SaleCustomerOrder extends javax.swing.JFrame {

    /**
     * Creates new form SaleCustomerOrder
     */
    public SaleCustomerOrder() {
        initComponents();
        
        PanelBank.setVisible(true);
        PanelCredit.setVisible(false);
        PanelCash.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel169 = new javax.swing.JLabel();
        jLabel177 = new javax.swing.JLabel();
        jLabel167 = new javax.swing.JLabel();
        btnSaleCustomerOrderCustomerSearch = new javax.swing.JButton();
        NetAmountPanel = new javax.swing.JPanel();
        jLabel159 = new javax.swing.JLabel();
        jLabel160 = new javax.swing.JLabel();
        jLabel161 = new javax.swing.JLabel();
        jLabel171 = new javax.swing.JLabel();
        jLabel170 = new javax.swing.JLabel();
        jLabel172 = new javax.swing.JLabel();
        txtSaleCustomerOrderItemPrice = new javax.swing.JLabel();
        txtSaleCustomerOrderItemFinalDiscount = new javax.swing.JLabel();
        txtSaleCustomerOrderItemDiscountedPrice = new javax.swing.JLabel();
        btnSaleCustomerOrderItemAdd = new javax.swing.JButton();
        btnSaleCustomerOrderItemClear = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnSaleCustomerOrderCustomerSearchClear = new javax.swing.JButton();
        jLabel149 = new javax.swing.JLabel();
        jLabel176 = new javax.swing.JLabel();
        txtSaleCustomerOrderCustomerSearch = new javax.swing.JTextField();
        btnSaleCustomerSale = new javax.swing.JButton();
        jLabel147 = new javax.swing.JLabel();
        txtSaleCustomerInvoiceNo = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        tblSaleCustomerOrderItem = new javax.swing.JTable();
        PanelTotal = new javax.swing.JPanel();
        jLabel184 = new javax.swing.JLabel();
        jLabel185 = new javax.swing.JLabel();
        jLabel186 = new javax.swing.JLabel();
        txtSaleDealerOrderFinalAmount = new javax.swing.JLabel();
        txtSaleDealerOrderFinalDiscount = new javax.swing.JLabel();
        txtSaleDealerOrderFinalNetTotal = new javax.swing.JLabel();
        jLabel173 = new javax.swing.JLabel();
        txtSaleCustomerInvoiceDate = new javax.swing.JLabel();
        jLabel178 = new javax.swing.JLabel();
        jLabel166 = new javax.swing.JLabel();
        btnSaleCustomerOrderCustomerSearchAll = new javax.swing.JButton();
        jLabel174 = new javax.swing.JLabel();
        btnSaleCustomerCancel = new javax.swing.JButton();
        jLabel162 = new javax.swing.JLabel();
        btnSaleCustomerOrderAddtoInvoice = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tblSaleCustomerOrderCustomerDetails = new javax.swing.JTable();
        txtSaleCustomerInvoiceBillTo = new javax.swing.JLabel();
        AddItemPanel = new javax.swing.JPanel();
        jLabel151 = new javax.swing.JLabel();
        jLabel152 = new javax.swing.JLabel();
        jLabel154 = new javax.swing.JLabel();
        jLabel155 = new javax.swing.JLabel();
        txtSaleCustomerOrderItemDiscount = new javax.swing.JTextField();
        txtSaleCustomerOrderItemPurchasingQty = new javax.swing.JTextField();
        txtSaleCustomerOrderItemQtyInWarehouse = new javax.swing.JLabel();
        txtSaleCustomerOrderItemNo = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        tblSaleCustomerInvoiceItem = new javax.swing.JTable();
        CmbSaleCustomerPaymentType = new javax.swing.JComboBox<>();
        cmbSaleCustomerOrderCustomerSearch = new javax.swing.JComboBox<>();
        PanelPayment = new javax.swing.JPanel();
        PanelCash = new javax.swing.JPanel();
        PanelBank = new javax.swing.JPanel();
        jLabel179 = new javax.swing.JLabel();
        jLabel180 = new javax.swing.JLabel();
        jLabel181 = new javax.swing.JLabel();
        jLabel182 = new javax.swing.JLabel();
        txtSaleCustomerPaymentBankName = new javax.swing.JTextField();
        txtSaleCustomerPaymentBankAccountNo = new javax.swing.JTextField();
        txtSaleCustomerPaymentBankChequeNo = new javax.swing.JTextField();
        txtSaleCustomerPaymentBankChequeDate = new javax.swing.JTextField();
        jLabel183 = new javax.swing.JLabel();
        txtSaleCustomerPaymentBankRemark = new javax.swing.JTextField();
        jLabel165 = new javax.swing.JLabel();
        jLabel168 = new javax.swing.JLabel();
        jLabel175 = new javax.swing.JLabel();
        jLabel187 = new javax.swing.JLabel();
        PanelCredit = new javax.swing.JPanel();
        jLabel190 = new javax.swing.JLabel();
        txtSaleCustomerPaymentCreditPeriod = new javax.swing.JTextField();
        jLabel191 = new javax.swing.JLabel();
        txtSaleCustomerPaymentCreditEndDate = new javax.swing.JLabel();
        jLabel148 = new javax.swing.JLabel();
        cmbSaleCustomerOrderItemSearch = new javax.swing.JComboBox<>();
        txtSaleCustomerOrderItemSearch = new javax.swing.JTextField();
        btnSaleCustomerOrderItemSearch = new javax.swing.JButton();
        btnSaleCustomerOrderItemSearchAll = new javax.swing.JButton();
        btnSaleCustomerPrint = new javax.swing.JButton();

        jLabel169.setBackground(new java.awt.Color(204, 0, 0));
        jLabel169.setForeground(new java.awt.Color(204, 0, 0));
        jLabel169.setText("*");

        jLabel177.setBackground(new java.awt.Color(204, 0, 0));
        jLabel177.setForeground(new java.awt.Color(204, 0, 0));
        jLabel177.setText("*");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel167.setBackground(new java.awt.Color(0, 0, 0));
        jLabel167.setForeground(new java.awt.Color(0, 0, 0));
        jLabel167.setText("     Bill To");

        btnSaleCustomerOrderCustomerSearch.setBackground(new java.awt.Color(51, 153, 255));
        btnSaleCustomerOrderCustomerSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleCustomerOrderCustomerSearch.setText("Search");
        btnSaleCustomerOrderCustomerSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleCustomerOrderCustomerSearchActionPerformed(evt);
            }
        });

        NetAmountPanel.setBackground(new java.awt.Color(204, 204, 255));

        jLabel159.setBackground(new java.awt.Color(0, 0, 0));
        jLabel159.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel159.setForeground(new java.awt.Color(0, 0, 0));
        jLabel159.setText("Price");

        jLabel160.setBackground(new java.awt.Color(0, 0, 0));
        jLabel160.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel160.setForeground(new java.awt.Color(0, 0, 0));
        jLabel160.setText("Discount    ");

        jLabel161.setBackground(new java.awt.Color(204, 0, 0));
        jLabel161.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel161.setForeground(new java.awt.Color(204, 0, 0));
        jLabel161.setText("Net Amount");

        jLabel171.setBackground(new java.awt.Color(0, 0, 0));
        jLabel171.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel171.setForeground(new java.awt.Color(0, 0, 0));
        jLabel171.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel171.setText("  :  ");

        jLabel170.setBackground(new java.awt.Color(0, 0, 0));
        jLabel170.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel170.setForeground(new java.awt.Color(0, 0, 0));
        jLabel170.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel170.setText("  :  ");

        jLabel172.setBackground(new java.awt.Color(204, 0, 0));
        jLabel172.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel172.setForeground(new java.awt.Color(204, 0, 0));
        jLabel172.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel172.setText(" :  Rs");

        txtSaleCustomerOrderItemPrice.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerOrderItemPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSaleCustomerOrderItemPrice.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerOrderItemPrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleCustomerOrderItemPrice.setText("0.00");

        txtSaleCustomerOrderItemFinalDiscount.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerOrderItemFinalDiscount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSaleCustomerOrderItemFinalDiscount.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerOrderItemFinalDiscount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleCustomerOrderItemFinalDiscount.setText("0%");

        txtSaleCustomerOrderItemDiscountedPrice.setBackground(new java.awt.Color(204, 0, 0));
        txtSaleCustomerOrderItemDiscountedPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSaleCustomerOrderItemDiscountedPrice.setForeground(new java.awt.Color(204, 0, 0));
        txtSaleCustomerOrderItemDiscountedPrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleCustomerOrderItemDiscountedPrice.setText("0.00");

        btnSaleCustomerOrderItemAdd.setBackground(new java.awt.Color(0, 102, 102));
        btnSaleCustomerOrderItemAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleCustomerOrderItemAdd.setText("Add");
        btnSaleCustomerOrderItemAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleCustomerOrderItemAddActionPerformed(evt);
            }
        });

        btnSaleCustomerOrderItemClear.setBackground(new java.awt.Color(255, 0, 0));
        btnSaleCustomerOrderItemClear.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleCustomerOrderItemClear.setText("Clear");
        btnSaleCustomerOrderItemClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleCustomerOrderItemClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NetAmountPanelLayout = new javax.swing.GroupLayout(NetAmountPanel);
        NetAmountPanel.setLayout(NetAmountPanelLayout);
        NetAmountPanelLayout.setHorizontalGroup(
            NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NetAmountPanelLayout.createSequentialGroup()
                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(NetAmountPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSaleCustomerOrderItemAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaleCustomerOrderItemClear))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, NetAmountPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(NetAmountPanelLayout.createSequentialGroup()
                                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel160, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                                        .addComponent(jLabel159, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel161, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(NetAmountPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel172, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtSaleCustomerOrderItemDiscountedPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(NetAmountPanelLayout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel170, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel171, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                                        .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtSaleCustomerOrderItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtSaleCustomerOrderItemFinalDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addGap(12, 12, 12))
        );
        NetAmountPanelLayout.setVerticalGroup(
            NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NetAmountPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel159)
                    .addComponent(jLabel171)
                    .addComponent(txtSaleCustomerOrderItemPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel160)
                    .addComponent(jLabel170)
                    .addComponent(txtSaleCustomerOrderItemFinalDiscount))
                .addGap(12, 12, 12)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel161)
                    .addComponent(jLabel172)
                    .addComponent(txtSaleCustomerOrderItemDiscountedPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaleCustomerOrderItemAdd)
                    .addComponent(btnSaleCustomerOrderItemClear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSaleCustomerOrderCustomerSearchClear.setBackground(new java.awt.Color(255, 0, 0));
        btnSaleCustomerOrderCustomerSearchClear.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleCustomerOrderCustomerSearchClear.setText("Clear");
        btnSaleCustomerOrderCustomerSearchClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleCustomerOrderCustomerSearchClearActionPerformed(evt);
            }
        });

        jLabel149.setBackground(new java.awt.Color(0, 102, 102));
        jLabel149.setForeground(new java.awt.Color(255, 255, 255));
        jLabel149.setText("     Item ");
        jLabel149.setOpaque(true);

        jLabel176.setBackground(new java.awt.Color(0, 0, 0));
        jLabel176.setForeground(new java.awt.Color(0, 0, 0));
        jLabel176.setText("Date");

        txtSaleCustomerOrderCustomerSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSaleCustomerOrderCustomerSearchKeyReleased(evt);
            }
        });

        btnSaleCustomerSale.setBackground(new java.awt.Color(0, 102, 102));
        btnSaleCustomerSale.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleCustomerSale.setText("Sale");
        btnSaleCustomerSale.setFocusable(false);
        btnSaleCustomerSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleCustomerSaleActionPerformed(evt);
            }
        });

        jLabel147.setBackground(new java.awt.Color(0, 0, 0));
        jLabel147.setForeground(new java.awt.Color(0, 0, 0));
        jLabel147.setText("     Search Customer");

        txtSaleCustomerInvoiceNo.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerInvoiceNo.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerInvoiceNo.setText("------------------");

        tblSaleCustomerOrderItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item No", "Item Name", "Quantity", "Discount Margin", "Price"
            }
        ));
        tblSaleCustomerOrderItem.setGridColor(new java.awt.Color(255, 255, 255));
        tblSaleCustomerOrderItem.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tblSaleCustomerOrderItem.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblSaleCustomerOrderItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSaleCustomerOrderItemMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(tblSaleCustomerOrderItem);

        PanelTotal.setBackground(new java.awt.Color(204, 204, 255));

        jLabel184.setBackground(new java.awt.Color(0, 0, 0));
        jLabel184.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel184.setForeground(new java.awt.Color(0, 0, 0));
        jLabel184.setText("     Amount");

        jLabel185.setBackground(new java.awt.Color(0, 0, 0));
        jLabel185.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel185.setForeground(new java.awt.Color(0, 0, 0));
        jLabel185.setText("     Discount");

        jLabel186.setBackground(new java.awt.Color(204, 0, 0));
        jLabel186.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel186.setForeground(new java.awt.Color(204, 0, 0));
        jLabel186.setText("   Net Total");

        txtSaleDealerOrderFinalAmount.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtSaleDealerOrderFinalAmount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleDealerOrderFinalAmount.setText("0.00");

        txtSaleDealerOrderFinalDiscount.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtSaleDealerOrderFinalDiscount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleDealerOrderFinalDiscount.setText("0.00");

        txtSaleDealerOrderFinalNetTotal.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        txtSaleDealerOrderFinalNetTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleDealerOrderFinalNetTotal.setText("0.00");

        jLabel173.setBackground(new java.awt.Color(204, 0, 0));
        jLabel173.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel173.setForeground(new java.awt.Color(204, 0, 0));
        jLabel173.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel173.setText(" :  Rs");

        javax.swing.GroupLayout PanelTotalLayout = new javax.swing.GroupLayout(PanelTotal);
        PanelTotal.setLayout(PanelTotalLayout);
        PanelTotalLayout.setHorizontalGroup(
            PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel184, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel185, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel186, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel173, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSaleDealerOrderFinalAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSaleDealerOrderFinalDiscount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSaleDealerOrderFinalNetTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );
        PanelTotalLayout.setVerticalGroup(
            PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTotalLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel184)
                    .addComponent(txtSaleDealerOrderFinalAmount))
                .addGap(11, 11, 11)
                .addGroup(PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel185)
                    .addComponent(txtSaleDealerOrderFinalDiscount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel186)
                        .addComponent(jLabel173))
                    .addComponent(txtSaleDealerOrderFinalNetTotal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtSaleCustomerInvoiceDate.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerInvoiceDate.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerInvoiceDate.setText("------------------");

        jLabel178.setBackground(new java.awt.Color(0, 0, 0));
        jLabel178.setForeground(new java.awt.Color(0, 0, 0));
        jLabel178.setText("               Payment Type");

        jLabel166.setBackground(new java.awt.Color(0, 102, 102));
        jLabel166.setForeground(new java.awt.Color(255, 255, 255));
        jLabel166.setText("     Invoice");
        jLabel166.setOpaque(true);

        btnSaleCustomerOrderCustomerSearchAll.setBackground(new java.awt.Color(0, 102, 102));
        btnSaleCustomerOrderCustomerSearchAll.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleCustomerOrderCustomerSearchAll.setText("All");
        btnSaleCustomerOrderCustomerSearchAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleCustomerOrderCustomerSearchAllActionPerformed(evt);
            }
        });

        jLabel174.setBackground(new java.awt.Color(0, 0, 0));
        jLabel174.setForeground(new java.awt.Color(0, 0, 0));
        jLabel174.setText("Invoice No");

        btnSaleCustomerCancel.setBackground(new java.awt.Color(255, 0, 0));
        btnSaleCustomerCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleCustomerCancel.setText("Cancel");
        btnSaleCustomerCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleCustomerCancelActionPerformed(evt);
            }
        });

        jLabel162.setBackground(new java.awt.Color(0, 102, 102));
        jLabel162.setForeground(new java.awt.Color(255, 255, 255));
        jLabel162.setText("    Customer Order");
        jLabel162.setOpaque(true);

        btnSaleCustomerOrderAddtoInvoice.setBackground(new java.awt.Color(204, 204, 204));
        btnSaleCustomerOrderAddtoInvoice.setForeground(new java.awt.Color(0, 102, 102));
        btnSaleCustomerOrderAddtoInvoice.setText("     Click item to add to invoice");

        tblSaleCustomerOrderCustomerDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cus NIC", "Name", "Telephone", "Total Sale"
            }
        ));
        tblSaleCustomerOrderCustomerDetails.setGridColor(new java.awt.Color(255, 255, 255));
        tblSaleCustomerOrderCustomerDetails.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tblSaleCustomerOrderCustomerDetails.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblSaleCustomerOrderCustomerDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSaleCustomerOrderCustomerDetailsMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(tblSaleCustomerOrderCustomerDetails);

        txtSaleCustomerInvoiceBillTo.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerInvoiceBillTo.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerInvoiceBillTo.setText("-----------------------");

        AddItemPanel.setBackground(new java.awt.Color(204, 204, 255));
        AddItemPanel.setForeground(new java.awt.Color(204, 255, 204));

        jLabel151.setBackground(new java.awt.Color(0, 0, 0));
        jLabel151.setForeground(new java.awt.Color(0, 0, 0));
        jLabel151.setText("Item Number    ");

        jLabel152.setBackground(new java.awt.Color(0, 0, 0));
        jLabel152.setForeground(new java.awt.Color(0, 0, 0));
        jLabel152.setText("Qty In Warehouse");

        jLabel154.setBackground(new java.awt.Color(0, 0, 0));
        jLabel154.setForeground(new java.awt.Color(0, 0, 0));
        jLabel154.setText("Purchasing Qty  ");

        jLabel155.setBackground(new java.awt.Color(0, 0, 0));
        jLabel155.setForeground(new java.awt.Color(0, 0, 0));
        jLabel155.setText("Discount           ");

        txtSaleCustomerOrderItemDiscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSaleCustomerOrderItemDiscountKeyReleased(evt);
            }
        });

        txtSaleCustomerOrderItemPurchasingQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSaleCustomerOrderItemPurchasingQtyKeyReleased(evt);
            }
        });

        txtSaleCustomerOrderItemQtyInWarehouse.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerOrderItemQtyInWarehouse.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerOrderItemQtyInWarehouse.setText(" ------------------");

        txtSaleCustomerOrderItemNo.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerOrderItemNo.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleCustomerOrderItemNo.setText(" ------------------");

        javax.swing.GroupLayout AddItemPanelLayout = new javax.swing.GroupLayout(AddItemPanel);
        AddItemPanel.setLayout(AddItemPanelLayout);
        AddItemPanelLayout.setHorizontalGroup(
            AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddItemPanelLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel155, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel154, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel152, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel151, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtSaleCustomerOrderItemQtyInWarehouse, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(txtSaleCustomerOrderItemDiscount, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSaleCustomerOrderItemPurchasingQty, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSaleCustomerOrderItemNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );
        AddItemPanelLayout.setVerticalGroup(
            AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddItemPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel151)
                    .addComponent(txtSaleCustomerOrderItemNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel152)
                    .addComponent(txtSaleCustomerOrderItemQtyInWarehouse))
                .addGap(34, 34, 34)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel154)
                    .addComponent(txtSaleCustomerOrderItemPurchasingQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSaleCustomerOrderItemDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel155))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblSaleCustomerInvoiceItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item No", "Item Name", "Qty", "Price", "Discount", "Amount"
            }
        ));
        tblSaleCustomerInvoiceItem.setGridColor(new java.awt.Color(255, 255, 255));
        tblSaleCustomerInvoiceItem.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tblSaleCustomerInvoiceItem.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblSaleCustomerInvoiceItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSaleCustomerInvoiceItemMouseClicked(evt);
            }
        });
        jScrollPane14.setViewportView(tblSaleCustomerInvoiceItem);

        CmbSaleCustomerPaymentType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cheque", "Credit", "Cash" }));
        CmbSaleCustomerPaymentType.setToolTipText("");
        CmbSaleCustomerPaymentType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CmbSaleCustomerPaymentTypeItemStateChanged(evt);
            }
        });

        cmbSaleCustomerOrderCustomerSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "NIC", "Telephone" }));

        PanelPayment.setOpaque(false);

        PanelCash.setPreferredSize(new java.awt.Dimension(436, 160));

        javax.swing.GroupLayout PanelCashLayout = new javax.swing.GroupLayout(PanelCash);
        PanelCash.setLayout(PanelCashLayout);
        PanelCashLayout.setHorizontalGroup(
            PanelCashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );
        PanelCashLayout.setVerticalGroup(
            PanelCashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 156, Short.MAX_VALUE)
        );

        PanelBank.setPreferredSize(new java.awt.Dimension(436, 160));

        jLabel179.setText("   Bank Name");

        jLabel180.setText("   Account No");

        jLabel181.setText("   Cheque No");

        jLabel182.setText("   Cheque Date");

        jLabel183.setText("   Remark");

        jLabel165.setBackground(new java.awt.Color(204, 0, 0));
        jLabel165.setForeground(new java.awt.Color(204, 0, 0));
        jLabel165.setText("*");

        jLabel168.setBackground(new java.awt.Color(204, 0, 0));
        jLabel168.setForeground(new java.awt.Color(204, 0, 0));
        jLabel168.setText("*");

        jLabel175.setBackground(new java.awt.Color(204, 0, 0));
        jLabel175.setForeground(new java.awt.Color(204, 0, 0));
        jLabel175.setText("*");

        jLabel187.setBackground(new java.awt.Color(204, 0, 0));
        jLabel187.setForeground(new java.awt.Color(204, 0, 0));
        jLabel187.setText("*");

        javax.swing.GroupLayout PanelBankLayout = new javax.swing.GroupLayout(PanelBank);
        PanelBank.setLayout(PanelBankLayout);
        PanelBankLayout.setHorizontalGroup(
            PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBankLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel182, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(jLabel181, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel183, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel180, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel179, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(PanelBankLayout.createSequentialGroup()
                        .addComponent(jLabel168, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSaleCustomerPaymentBankAccountNo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelBankLayout.createSequentialGroup()
                        .addComponent(jLabel165, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(txtSaleCustomerPaymentBankName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelBankLayout.createSequentialGroup()
                        .addComponent(jLabel175, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSaleCustomerPaymentBankChequeNo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelBankLayout.createSequentialGroup()
                        .addComponent(jLabel187, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSaleCustomerPaymentBankChequeDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtSaleCustomerPaymentBankRemark, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
        );
        PanelBankLayout.setVerticalGroup(
            PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBankLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel179)
                    .addComponent(txtSaleCustomerPaymentBankName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel165))
                .addGap(3, 3, 3)
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel180)
                    .addComponent(txtSaleCustomerPaymentBankAccountNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel168))
                .addGap(3, 3, 3)
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel181)
                    .addComponent(txtSaleCustomerPaymentBankChequeNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel175))
                .addGap(3, 3, 3)
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel182)
                    .addComponent(txtSaleCustomerPaymentBankChequeDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel187))
                .addGap(3, 3, 3)
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSaleCustomerPaymentBankRemark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel183))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        PanelCredit.setVerifyInputWhenFocusTarget(false);

        jLabel190.setText("   Credit Period");

        txtSaleCustomerPaymentCreditPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSaleCustomerPaymentCreditPeriodActionPerformed(evt);
            }
        });
        txtSaleCustomerPaymentCreditPeriod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSaleCustomerPaymentCreditPeriodKeyReleased(evt);
            }
        });

        jLabel191.setText("   End Date");

        txtSaleCustomerPaymentCreditEndDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleCustomerPaymentCreditEndDate.setText(" ------------------------------------");

        javax.swing.GroupLayout PanelCreditLayout = new javax.swing.GroupLayout(PanelCredit);
        PanelCredit.setLayout(PanelCreditLayout);
        PanelCreditLayout.setHorizontalGroup(
            PanelCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCreditLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(PanelCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel190, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel191, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSaleCustomerPaymentCreditPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSaleCustomerPaymentCreditEndDate))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        PanelCreditLayout.setVerticalGroup(
            PanelCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCreditLayout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(PanelCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel190)
                    .addComponent(txtSaleCustomerPaymentCreditPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(PanelCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel191)
                    .addComponent(txtSaleCustomerPaymentCreditEndDate))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelPaymentLayout = new javax.swing.GroupLayout(PanelPayment);
        PanelPayment.setLayout(PanelPaymentLayout);
        PanelPaymentLayout.setHorizontalGroup(
            PanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelCredit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(PanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelPaymentLayout.createSequentialGroup()
                    .addComponent(PanelCash, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(PanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelPaymentLayout.createSequentialGroup()
                    .addComponent(PanelBank, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        PanelPaymentLayout.setVerticalGroup(
            PanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPaymentLayout.createSequentialGroup()
                .addComponent(PanelCredit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
            .addGroup(PanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelPaymentLayout.createSequentialGroup()
                    .addComponent(PanelCash, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 10, Short.MAX_VALUE)))
            .addGroup(PanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelPaymentLayout.createSequentialGroup()
                    .addComponent(PanelBank, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 10, Short.MAX_VALUE)))
        );

        jLabel148.setBackground(new java.awt.Color(0, 0, 0));
        jLabel148.setForeground(new java.awt.Color(0, 0, 0));
        jLabel148.setText("     Search Item");

        cmbSaleCustomerOrderItemSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Number", "Price" }));

        btnSaleCustomerOrderItemSearch.setBackground(new java.awt.Color(51, 153, 255));
        btnSaleCustomerOrderItemSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleCustomerOrderItemSearch.setText("Search");
        btnSaleCustomerOrderItemSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleCustomerOrderItemSearchActionPerformed(evt);
            }
        });

        btnSaleCustomerOrderItemSearchAll.setBackground(new java.awt.Color(0, 102, 102));
        btnSaleCustomerOrderItemSearchAll.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleCustomerOrderItemSearchAll.setText("All");
        btnSaleCustomerOrderItemSearchAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleCustomerOrderItemSearchAllActionPerformed(evt);
            }
        });

        btnSaleCustomerPrint.setBackground(new java.awt.Color(51, 51, 255));
        btnSaleCustomerPrint.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleCustomerPrint.setText("Print");
        btnSaleCustomerPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleCustomerPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel147, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSaleCustomerOrderCustomerSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSaleCustomerOrderCustomerSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSaleCustomerOrderCustomerSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSaleCustomerOrderCustomerSearchClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSaleCustomerOrderCustomerSearchAll, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(480, 480, 480))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel162, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(AddItemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NetAmountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSaleCustomerOrderAddtoInvoice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel148, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbSaleCustomerOrderItemSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSaleCustomerOrderItemSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSaleCustomerOrderItemSearch)
                                .addGap(18, 18, 18)
                                .addComponent(btnSaleCustomerOrderItemSearchAll, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(84, 84, 84))
                            .addComponent(jLabel149, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel167, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSaleCustomerInvoiceBillTo)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel174, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel176, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtSaleCustomerInvoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSaleCustomerInvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane14, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(PanelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnSaleCustomerPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnSaleCustomerCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnSaleCustomerSale, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(PanelPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel178, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(CmbSaleCustomerPaymentType, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel166, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel166, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel162, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel147)
                            .addComponent(cmbSaleCustomerOrderCustomerSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSaleCustomerOrderCustomerSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSaleCustomerOrderCustomerSearch)
                            .addComponent(btnSaleCustomerOrderCustomerSearchClear)
                            .addComponent(btnSaleCustomerOrderCustomerSearchAll)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel167)
                            .addComponent(txtSaleCustomerInvoiceBillTo)
                            .addComponent(jLabel174)
                            .addComponent(txtSaleCustomerInvoiceNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel176)
                            .addComponent(txtSaleCustomerInvoiceDate))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel149, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CmbSaleCustomerPaymentType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel178)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel148)
                            .addComponent(cmbSaleCustomerOrderItemSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSaleCustomerOrderItemSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSaleCustomerOrderItemSearch)
                            .addComponent(btnSaleCustomerOrderItemSearchAll))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaleCustomerOrderAddtoInvoice))
                    .addComponent(PanelPayment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSaleCustomerSale, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaleCustomerCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSaleCustomerPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addComponent(AddItemPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NetAmountPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CmbSaleCustomerPaymentTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CmbSaleCustomerPaymentTypeItemStateChanged
        if(CmbSaleCustomerPaymentType.getSelectedIndex()==0)      {
            PanelBank.setVisible(true);
            PanelCredit.setVisible(false);
            PanelCash.setVisible(false);
        }
        if(CmbSaleCustomerPaymentType.getSelectedIndex()==1)      {
            PanelBank.setVisible(false);
            PanelCredit.setVisible(true);
            PanelCash.setVisible(false);
        }
        if(CmbSaleCustomerPaymentType.getSelectedIndex()==2)      {
            PanelBank.setVisible(false);
            PanelCredit.setVisible(false);
            PanelCash.setVisible(true);
        }
    }//GEN-LAST:event_CmbSaleCustomerPaymentTypeItemStateChanged

    private void txtSaleCustomerPaymentCreditPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSaleCustomerPaymentCreditPeriodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSaleCustomerPaymentCreditPeriodActionPerformed

    private void btnSaleCustomerOrderCustomerSearchAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleCustomerOrderCustomerSearchAllActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel)tblSaleCustomerOrderCustomerDetails.getModel();
        tmodel.setRowCount(0);
        Customer c = new Customer();
        ResultSet rs = c.viewCustomer("Offline", null, null);
        if(rs!=null)
        {
            try {
                while(rs.next())
                {
                    String cusNIC = rs.getString("CusNIC");
                    String name = rs.getString("CusName");
                    String telephone = String.valueOf(rs.getInt("Telephone"));
                    String totalsale = String.valueOf(rs.getDouble("TotalSale"));
                    
                    String tbData[] = {cusNIC,name,telephone,totalsale};
                    tmodel.addRow(tbData);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Customer Details Cannot Load Try to reload this menu", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Customer Details Not Found Try different keywords", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaleCustomerOrderCustomerSearchAllActionPerformed

    private void btnSaleCustomerOrderCustomerSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleCustomerOrderCustomerSearchActionPerformed
        // TODO add your handling code here:
        if(txtSaleCustomerOrderCustomerSearch.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter some data to search customer's data!", "Empty!", JOptionPane.WARNING_MESSAGE);
        }else{
            String filter="";
            if(cmbSaleCustomerOrderCustomerSearch.getSelectedIndex()==0)
            {
                filter="CusName";
            }
            if(cmbSaleCustomerOrderCustomerSearch.getSelectedIndex()==1)
            {
                filter="CusNIC";
            }
            if(cmbSaleCustomerOrderCustomerSearch.getSelectedIndex()==2)
            {
                filter="Telephone";
            }

            DefaultTableModel tmodel = (DefaultTableModel)tblSaleCustomerOrderCustomerDetails.getModel();
            tmodel.setRowCount(0);
            Customer c = new Customer();
            ResultSet rs = c.viewCustomer("Offline", txtSaleCustomerOrderCustomerSearch.getText(), filter);
            if(rs!=null)
            {
                try {
                    while(rs.next())
                    {
                        String cusNIC = rs.getString("CusNIC");
                        String name = rs.getString("CusName");
                        String telephone = String.valueOf(rs.getInt("Telephone"));
                        String totalsale = String.valueOf(rs.getDouble("TotalSale"));

                        String tbData[] = {cusNIC,name,telephone,totalsale};
                        tmodel.addRow(tbData);
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Customer Details Cannot Load Try to reload this menu", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Customer Details Not Found Try different keywords", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        
    }//GEN-LAST:event_btnSaleCustomerOrderCustomerSearchActionPerformed

    private void btnSaleCustomerOrderCustomerSearchClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleCustomerOrderCustomerSearchClearActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel)tblSaleCustomerOrderCustomerDetails.getModel();
        tmodel.setRowCount(0);
        cmbSaleCustomerOrderCustomerSearch.setSelectedIndex(0);
        txtSaleCustomerOrderCustomerSearch.setText(null);
        txtSaleCustomerInvoiceBillTo.setText("-----------------------");
    }//GEN-LAST:event_btnSaleCustomerOrderCustomerSearchClearActionPerformed

    private void btnSaleCustomerOrderItemSearchAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleCustomerOrderItemSearchAllActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel)tblSaleCustomerOrderItem.getModel();
        tmodel.setRowCount(0);
        Item i = new Item();
        ResultSet rs = i.viewItem(null, null);
        if(rs!=null)
        {
            try {
                while(rs.next())
                {
                    String ino = String.valueOf(rs.getInt("INO"));
                    String iname = rs.getString("IName");
                    String qty = String.valueOf(rs.getInt("QtyInHand"));
                    String discount = String.valueOf(rs.getDouble("DiscountMargine"));
                    String price = String.valueOf(rs.getDouble("Price"));
                    
                    String tbData[] = {ino,iname,qty,discount,price};
                    tmodel.addRow(tbData);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Item data Not loaded reopen the menu and try again","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Item Details Not Found Try different keywords", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaleCustomerOrderItemSearchAllActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowActivated

    private void btnSaleCustomerOrderItemSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleCustomerOrderItemSearchActionPerformed
        // TODO add your handling code here:
        String filter = "";
        if(cmbSaleCustomerOrderItemSearch.getSelectedIndex()==0)
        {
            filter="IName";
        }
        if(cmbSaleCustomerOrderItemSearch.getSelectedIndex()==1)
        {
            filter="INO";
        }
        if(cmbSaleCustomerOrderItemSearch.getSelectedIndex()==2)
        {
            filter="Price";
        }
        
        DefaultTableModel tmodel = (DefaultTableModel)tblSaleCustomerOrderItem.getModel();
        tmodel.setRowCount(0);
        Item i = new Item();
        ResultSet rs = i.viewItem(txtSaleCustomerOrderItemSearch.getText(), filter);
        if(rs!=null)
        {
            try {
                while(rs.next())
                {
                    String ino = String.valueOf(rs.getInt("INO"));
                    String iname = rs.getString("IName");
                    String qty = String.valueOf(rs.getInt("QtyInHand"));
                    String discount = String.valueOf(rs.getDouble("DiscountMargine"));
                    String price = String.valueOf(rs.getDouble("Price"));
                    
                    String tbData[] = {ino,iname,qty,discount,price};
                    tmodel.addRow(tbData);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Item data Not loaded reopen the menu and try again","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Item Details Not Found Try different keywords", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaleCustomerOrderItemSearchActionPerformed

    private void btnSaleCustomerOrderItemClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleCustomerOrderItemClearActionPerformed
        // TODO add your handling code here:
        txtSaleCustomerOrderItemNo.setText(" ------------------");
        txtSaleCustomerOrderItemQtyInWarehouse.setText(" ------------------");
        txtSaleCustomerOrderItemPurchasingQty.setText("");
        txtSaleCustomerOrderItemDiscount.setText("");
        txtSaleCustomerOrderItemPrice.setText("0.00");
        txtSaleCustomerOrderItemFinalDiscount.setText("0.00");
        txtSaleCustomerOrderItemDiscountedPrice.setText("0.00");
        DefaultTableModel tmodel = (DefaultTableModel)tblSaleCustomerOrderItem.getModel();
        tmodel.setRowCount(0);
        txtSaleCustomerOrderItemSearch.setText(null);
        cmbSaleCustomerOrderItemSearch.setSelectedIndex(0);
    }//GEN-LAST:event_btnSaleCustomerOrderItemClearActionPerformed

    private void tblSaleCustomerOrderCustomerDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSaleCustomerOrderCustomerDetailsMouseClicked
        // TODO add your handling code here:
        txtSaleCustomerInvoiceBillTo.setText("-----------------------");
        int row = tblSaleCustomerOrderCustomerDetails.getSelectedRow();
        txtSaleCustomerInvoiceBillTo.setText(tblSaleCustomerOrderCustomerDetails.getValueAt(row, 1).toString()+"-"+tblSaleCustomerOrderCustomerDetails.getValueAt(row, 0).toString());
        if(tblSaleCustomerInvoiceItem.getRowCount()>0)
        {
            int i = JOptionPane.showConfirmDialog(this, "Are you want to clear the invoice data","Warning",JOptionPane.WARNING_MESSAGE,JOptionPane.YES_NO_OPTION);
            if(i==0)
            {
                DefaultTableModel tmodel = (DefaultTableModel)tblSaleCustomerInvoiceItem.getModel();
                tmodel.setRowCount(0);
                CmbSaleCustomerPaymentType.setSelectedIndex(0);
                txtSaleCustomerPaymentCreditPeriod.setText(null);
                txtSaleCustomerPaymentCreditEndDate.setText(" ------------------------------------");
                txtSaleCustomerPaymentBankName.setText(null);
                txtSaleCustomerPaymentBankAccountNo.setText(null);
                txtSaleCustomerPaymentBankChequeNo.setText(null);
                txtSaleCustomerPaymentBankChequeDate.setText(null);
                txtSaleCustomerPaymentBankRemark.setText(null);
                txtSaleDealerOrderFinalAmount.setText("0.00");
                txtSaleDealerOrderFinalDiscount.setText("0.00");
                txtSaleDealerOrderFinalNetTotal.setText("0.00");

            }
        }
    }//GEN-LAST:event_tblSaleCustomerOrderCustomerDetailsMouseClicked

    private double itemPrice =0.0;
    
    private void tblSaleCustomerOrderItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSaleCustomerOrderItemMouseClicked
        // TODO add your handling code here:
        txtSaleCustomerOrderItemNo.setText(" ------------------");
        txtSaleCustomerOrderItemQtyInWarehouse.setText(" ------------------");
        txtSaleCustomerOrderItemPurchasingQty.setText("");
        txtSaleCustomerOrderItemDiscount.setText("");
        txtSaleCustomerOrderItemPrice.setText("0.00");
        txtSaleCustomerOrderItemFinalDiscount.setText("0.00");
        txtSaleCustomerOrderItemDiscountedPrice.setText("0.00");
        
        int row = tblSaleCustomerOrderItem.getSelectedRow();
        txtSaleCustomerOrderItemNo.setText(tblSaleCustomerOrderItem.getValueAt(row, 0).toString());
        txtSaleCustomerOrderItemQtyInWarehouse.setText(tblSaleCustomerOrderItem.getValueAt(row, 2).toString());
        
        itemPrice = Double.parseDouble(tblSaleCustomerOrderItem.getValueAt(row, 4).toString());
    }//GEN-LAST:event_tblSaleCustomerOrderItemMouseClicked

    private void txtSaleCustomerOrderItemPurchasingQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaleCustomerOrderItemPurchasingQtyKeyReleased
        // TODO add your handling code here:
        
        Pattern qty = Pattern.compile("^[0-9]*$");
        Matcher m = qty.matcher(txtSaleCustomerOrderItemPurchasingQty.getText());
        
        if(m.matches()==false){
            JOptionPane.showMessageDialog(this, "You must entered numbers only!","Error",JOptionPane.ERROR_MESSAGE);
            txtSaleCustomerOrderItemPurchasingQty.setText("");
        }
        else
        {
            if(!txtSaleCustomerOrderItemQtyInWarehouse.getText().equals(" ------------------") && m.matches()==true && !txtSaleCustomerOrderItemPurchasingQty.getText().equals(""))
            {
                
                if(Integer.parseInt(txtSaleCustomerOrderItemQtyInWarehouse.getText())<Integer.parseInt(txtSaleCustomerOrderItemPurchasingQty.getText()))
                {
                    JOptionPane.showMessageDialog(this, "No Enough Quantity to sell","Warning",JOptionPane.WARNING_MESSAGE);
                    txtSaleCustomerOrderItemPurchasingQty.setText("");
                }
            }
            double givenDiscount=0.0;
            int purchasingQty = 0;
            if(!txtSaleCustomerOrderItemDiscount.getText().equals(""))
            {
                givenDiscount = Double.parseDouble(txtSaleCustomerOrderItemDiscount.getText());
            }
            if(!txtSaleCustomerOrderItemPurchasingQty.getText().equals(""))
            {
                purchasingQty = Integer.parseInt(txtSaleCustomerOrderItemPurchasingQty.getText());
            }
            double finalPrice = itemPrice*purchasingQty;
            double finalDiscount = finalPrice*givenDiscount/100;
            double finalNetAmount = finalPrice-finalDiscount;

            DecimalFormat df = new DecimalFormat("0.00");
            txtSaleCustomerOrderItemDiscountedPrice.setText(df.format(finalNetAmount));
            txtSaleCustomerOrderItemFinalDiscount.setText(df.format(finalDiscount));
            txtSaleCustomerOrderItemPrice.setText(df.format(finalPrice));
        } 
    }//GEN-LAST:event_txtSaleCustomerOrderItemPurchasingQtyKeyReleased

    private void txtSaleCustomerOrderItemDiscountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaleCustomerOrderItemDiscountKeyReleased
        // TODO add your handling code here:
        Pattern discountreg = Pattern.compile("[0-9]*['.']?[0-9]*");
        Matcher m = discountreg.matcher(txtSaleCustomerOrderItemDiscount.getText());
        
        if(m.matches()==false){
            JOptionPane.showMessageDialog(this, "You must entered numbers only!","Error",JOptionPane.ERROR_MESSAGE);
            txtSaleCustomerOrderItemDiscount.setText("");
            btnSaleCustomerOrderItemAdd.setEnabled(false);
        }
        else
        {
            if(!txtSaleCustomerOrderItemDiscount.getText().isEmpty() && m.matches()==true)
            {
                if(Double.parseDouble(tblSaleCustomerOrderItem.getValueAt(tblSaleCustomerOrderItem.getSelectedRow(), 3).toString())<Double.parseDouble(txtSaleCustomerOrderItemDiscount.getText()))
                {
                    JOptionPane.showMessageDialog(this, "Discount Cannot exceed Discount Margine","Error",JOptionPane.ERROR_MESSAGE);
                    txtSaleCustomerOrderItemDiscount.setText("");
                }
            }
            double givenDiscount=0.0;
            int purchasingQty = 0;
            if(!txtSaleCustomerOrderItemDiscount.getText().equals(""))
            {
                givenDiscount = Double.parseDouble(txtSaleCustomerOrderItemDiscount.getText());
            }
            if(!txtSaleCustomerOrderItemPurchasingQty.getText().equals(""))
            {
                purchasingQty = Integer.parseInt(txtSaleCustomerOrderItemPurchasingQty.getText());
            }
            double finalPrice = itemPrice*purchasingQty;
            double finalDiscount = finalPrice*givenDiscount/100;
            double finalNetAmount = finalPrice-finalDiscount;

            DecimalFormat df = new DecimalFormat("0.00");
            txtSaleCustomerOrderItemDiscountedPrice.setText(df.format(finalNetAmount));
            txtSaleCustomerOrderItemFinalDiscount.setText(df.format(finalDiscount));
            txtSaleCustomerOrderItemPrice.setText(df.format(finalPrice));
            btnSaleCustomerOrderItemAdd.setEnabled(true);
        }        
    }//GEN-LAST:event_txtSaleCustomerOrderItemDiscountKeyReleased

    private void btnSaleCustomerOrderItemAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleCustomerOrderItemAddActionPerformed
        // TODO add your handling code here:
        if(txtSaleCustomerOrderItemNo.getText().equals(" ------------------"))
        {
            JOptionPane.showMessageDialog(this, "Select Item to Add to bill","No Item Selected",JOptionPane.WARNING_MESSAGE);
        }
        else if(txtSaleCustomerOrderItemPurchasingQty.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Enter Purchasing quantity to add item","Purchasing Quantity is Empty",JOptionPane.WARNING_MESSAGE);
        }
        else if(txtSaleCustomerOrderItemDiscount.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Enter Discount Margine to Add item","Discount Margine is Empty",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            int row = tblSaleCustomerOrderItem.getSelectedRow();
            String ino = tblSaleCustomerOrderItem.getValueAt(row, 0).toString();
            String iname = tblSaleCustomerOrderItem.getValueAt(row, 1).toString();
            String qty = txtSaleCustomerOrderItemPurchasingQty.getText();
            String price = tblSaleCustomerOrderItem.getValueAt(row, 4).toString();
            String discount = txtSaleCustomerOrderItemFinalDiscount.getText();
            String netAmount = txtSaleCustomerOrderItemDiscountedPrice.getText();
            String tbData[] = {ino,iname,qty,price,discount,netAmount};

            DefaultTableModel tmodel = (DefaultTableModel)tblSaleCustomerInvoiceItem.getModel();
            tmodel.addRow(tbData);

            double invPrice=0.0;
            double invDiscount = 0.0;
            double invNetAmount = 0.0;

            double itemPrice = Double.parseDouble(txtSaleCustomerOrderItemPrice.getText());
            double itemDiscount = Double.parseDouble(txtSaleCustomerOrderItemFinalDiscount.getText());
            double itemNet = Double.parseDouble(txtSaleCustomerOrderItemDiscountedPrice.getText());

            if(!txtSaleDealerOrderFinalAmount.getText().equals("0.00"))
            {
                invPrice = Double.parseDouble(txtSaleDealerOrderFinalAmount.getText());
            }
            if(!txtSaleDealerOrderFinalDiscount.getText().equals("0.00"))
            {
                invDiscount = Double.parseDouble(txtSaleDealerOrderFinalDiscount.getText());
            }
            if(!txtSaleDealerOrderFinalNetTotal.getText().equals("0.00"))
            {
                invNetAmount = Double.parseDouble(txtSaleDealerOrderFinalNetTotal.getText());
            }

            DecimalFormat df = new DecimalFormat("0.00");
            txtSaleDealerOrderFinalAmount.setText(df.format((invPrice+itemPrice)));
            txtSaleDealerOrderFinalDiscount.setText(df.format((invDiscount+itemDiscount)));
            txtSaleDealerOrderFinalNetTotal.setText(df.format((invNetAmount+itemNet)));
        }
    }//GEN-LAST:event_btnSaleCustomerOrderItemAddActionPerformed

    private void tblSaleCustomerInvoiceItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSaleCustomerInvoiceItemMouseClicked
        // TODO add your handling code here:
        int row = tblSaleCustomerInvoiceItem.getSelectedRow();
        if(row>=0)
        {
            int i = JOptionPane.showConfirmDialog(this, "Are you Sure To Remove This Item From this invoice","Warning",JOptionPane.WARNING_MESSAGE,JOptionPane.YES_NO_OPTION);
            if(i==0)
            {
                int itemqty = Integer.parseInt(tblSaleCustomerInvoiceItem.getValueAt(row, 2).toString());
                double itemPrice = Double.parseDouble(tblSaleCustomerInvoiceItem.getValueAt(row, 3).toString());
                itemPrice = itemPrice*itemqty;
                double itemAmount = Double.parseDouble(tblSaleCustomerInvoiceItem.getValueAt(row, 5).toString());
                double itemDiscount = Double.parseDouble(tblSaleCustomerInvoiceItem.getValueAt(row, 4).toString());
                
                double invPrice = Double.parseDouble(txtSaleDealerOrderFinalAmount.getText());
                double invDiscount = Double.parseDouble(txtSaleDealerOrderFinalDiscount.getText());
                double invNetAmount = Double.parseDouble(txtSaleDealerOrderFinalNetTotal.getText());
                
                DecimalFormat df = new DecimalFormat("0.00");
                txtSaleDealerOrderFinalAmount.setText(df.format(invPrice-itemPrice));
                txtSaleDealerOrderFinalDiscount.setText(df.format(invDiscount-itemDiscount));
                txtSaleDealerOrderFinalNetTotal.setText(df.format(invNetAmount-itemAmount));
                
                DefaultTableModel tmodel = (DefaultTableModel)tblSaleCustomerInvoiceItem.getModel();
                tmodel.removeRow(row);
            }
        }
    }//GEN-LAST:event_tblSaleCustomerInvoiceItemMouseClicked

    private String invNo="";
    private int checkprintInvoice = 0;
    private void btnSaleCustomerSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleCustomerSaleActionPerformed
        // TODO add your handling code here:
        Pattern dateRegex = Pattern.compile("^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$");
        Matcher dateR = dateRegex.matcher(txtSaleCustomerPaymentBankChequeDate.getText());
        Pattern chequeNo = Pattern.compile("^[0-9]*$");
        Matcher chequeNumberMatacher = chequeNo.matcher(txtSaleCustomerPaymentBankChequeNo.getText());
        Pattern accNo = Pattern.compile("^[0-9]*$");
        Matcher accNumberMatcher = accNo.matcher(txtSaleCustomerPaymentBankAccountNo.getText());
        Pattern creditPattern = Pattern.compile("^[0-9]*$");
        Matcher creditMatcher = creditPattern.matcher(txtSaleCustomerPaymentCreditPeriod.getText());
        
        
        if(txtSaleCustomerInvoiceBillTo.getText().equals("-----------------------"))
        {
            JOptionPane.showMessageDialog(this, "Selet Customer to Bill","No Customer Selected",JOptionPane.WARNING_MESSAGE);
        }
        else if(tblSaleCustomerInvoiceItem.getRowCount()<=0)
        {
            JOptionPane.showMessageDialog(this, "No Item In Invoice Cannot Complete Bill","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else if(CmbSaleCustomerPaymentType.getSelectedIndex()==0 && txtSaleCustomerPaymentBankName.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Bank Name Cannot be Empty","Bank Payment",JOptionPane.WARNING_MESSAGE);           
        }
        else if(CmbSaleCustomerPaymentType.getSelectedIndex()==0 && !txtSaleCustomerPaymentBankChequeNo.getText().isEmpty() && chequeNumberMatacher.matches()==false)
        {
            JOptionPane.showMessageDialog(this, "Cheque Number Must Contain Only Numbers","Invalied Cheque Number",JOptionPane.WARNING_MESSAGE);
        }
        else if(CmbSaleCustomerPaymentType.getSelectedIndex()==0 && !txtSaleCustomerPaymentBankChequeNo.getText().isEmpty() && txtSaleCustomerPaymentBankChequeDate.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Cheque Date Cannot Be Blank","Enter Cheque Date",JOptionPane.WARNING_MESSAGE);
        }
        else if(CmbSaleCustomerPaymentType.getSelectedIndex()==0 && !txtSaleCustomerPaymentBankChequeDate.getText().isEmpty() && dateR.matches()==false)
        {
            JOptionPane.showMessageDialog(this, "Check the date format (YYYY-MM-DD)","Error",JOptionPane.ERROR_MESSAGE);              
        }
        else if(CmbSaleCustomerPaymentType.getSelectedIndex()==0 && !txtSaleCustomerPaymentBankChequeDate.getText().isEmpty() && txtSaleCustomerPaymentBankChequeNo.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Check Number Cannot Be Blank","Error",JOptionPane.ERROR_MESSAGE);              
        }
        else if(CmbSaleCustomerPaymentType.getSelectedIndex()==0 && !txtSaleCustomerPaymentBankAccountNo.getText().isEmpty() && accNumberMatcher.matches()==false)
        {
            JOptionPane.showMessageDialog(this, "Bank Account Number Must Contain Only Numbers","Invalied Account Number",JOptionPane.WARNING_MESSAGE);
        }
        else if(CmbSaleCustomerPaymentType.getSelectedIndex()==1 && txtSaleCustomerPaymentCreditPeriod.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Enter Credit period","Credit Payment",JOptionPane.WARNING_MESSAGE);
        }
        else if(CmbSaleCustomerPaymentType.getSelectedIndex()==1 && txtSaleCustomerPaymentCreditEndDate.getText().equals(" ------------------------------------"))
        {
            JOptionPane.showMessageDialog(this, "Enter Credit period","Credit Payment",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            invNo = txtSaleCustomerInvoiceNo.getText();
            Invoice i = new Invoice();
            String cusNIC[] = txtSaleCustomerInvoiceBillTo.getText().split("-");
            int c= i.newInvoice(cusNIC[1], txtSaleDealerOrderFinalAmount.getText(), txtSaleDealerOrderFinalNetTotal.getText(), txtSaleDealerOrderFinalDiscount.getText(), "Customer", txtSaleCustomerInvoiceDate.getText());
            if(c==1)
            {            
                for(int c1=0;c1<tblSaleCustomerInvoiceItem.getRowCount();c1++)
                {
                    String ino = tblSaleCustomerInvoiceItem.getValueAt(c1, 0).toString();
                    String iname = tblSaleCustomerInvoiceItem.getValueAt(c1, 1).toString();
                    String qty = tblSaleCustomerInvoiceItem.getValueAt(c1, 2).toString();
                    String amount = tblSaleCustomerInvoiceItem.getValueAt(c1, 3).toString();
                    String dis = tblSaleCustomerInvoiceItem.getValueAt(c1, 4).toString();
                    String netamount = tblSaleCustomerInvoiceItem.getValueAt(c1, 5).toString();                
                    i.addItemsInInvoice(ino, invNo, qty, amount, dis, netamount);

                    int updatingQty = 0;
                    int olditemqty = 0;
                    int purchasingQty = Integer.parseInt(qty);
                    Database db = new Database();
                    ResultSet rs = db.selectData("select * from tb_item where INO = '"+ino+"'");
                    try {
                        while(rs.next())
                        {
                            olditemqty = rs.getInt("QtyInHand");
                        }
                    } catch (SQLException ex) {
                        //Logger.getLogger(SaleCustomerOrder.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    updatingQty=olditemqty-purchasingQty;
                    int x = db.insertUpdateDelete("UPDATE `tb_item` SET `Qtyinhand` = '"+updatingQty+"' WHERE `tb_item`.`INO` = '"+ino+"'");
                    if(x!=1)
                    {
                        JOptionPane.showMessageDialog(this, "Item Stock Not Updated Contact Manager","Error",JOptionPane.ERROR_MESSAGE);
                    }
                }
                String paymentType="";
                if(CmbSaleCustomerPaymentType.getSelectedIndex()==0)
                {
                    paymentType="Bank";
                }
                if(CmbSaleCustomerPaymentType.getSelectedIndex()==1)
                {
                    paymentType="Credit";
                }
                if(CmbSaleCustomerPaymentType.getSelectedIndex()==2)
                {
                    paymentType="Cash";
                }
                Payment p = new Payment();
                int c2 = p.makePayment(invNo, txtSaleDealerOrderFinalNetTotal.getText(), txtSaleCustomerInvoiceDate.getText(), paymentType);
                if(c2>0)
                {
                    int c3=0;
                    if(paymentType.equals("Bank"))
                    {
                        String date = txtSaleCustomerPaymentBankChequeDate.getText();
                        if(txtSaleCustomerPaymentBankChequeDate.getText().equals(""))
                        {
                            Date now = new Date();
                            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                            date=df.format(now);
                        }

                        c3 = p.makePayment(""+c2, txtSaleCustomerPaymentBankName.getText(), txtSaleCustomerPaymentBankAccountNo.getText(), txtSaleCustomerPaymentBankChequeNo.getText(), date, txtSaleCustomerPaymentBankRemark.getText());
                    }
                    if(paymentType.equals("Credit"))
                    {
                        c3 = p.makePayment(""+c2, txtSaleCustomerPaymentCreditPeriod.getText());
                    }
                    if(paymentType.equals("Cash"))
                    {
                        c3 = p.makePayment(""+c2);
                    }
                    if(c3==1)
                    {
                        double oldtotSale = 0.0;
                        Database db = new Database();
                        ResultSet rs = db.selectData("select * from tb_customer where CusNIC = '"+cusNIC[1]+"'");
                        try {
                            while(rs.next())
                            {
                                double dbtotSale = rs.getDouble("TotalSale");
                                if(dbtotSale>0)
                                {
                                    oldtotSale = dbtotSale;
                                }
                            }
                        } catch (SQLException ex) {
                            //Logger.getLogger(SaleCustomerOrder.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        double newTotSale = Double.parseDouble(txtSaleDealerOrderFinalNetTotal.getText()) + oldtotSale;
                        int c4 = db.insertUpdateDelete("UPDATE `tb_customer` SET `TotalSale` = '"+newTotSale+"' WHERE `tb_customer`.`CusNIC` = '"+cusNIC[1]+"'");
                        if(c4==1)
                        {
                            JOptionPane.showMessageDialog(this, "The Order Palced Successfully\nInvoice will print soon","Done..!",JOptionPane.INFORMATION_MESSAGE);

                            DefaultTableModel tmodel = (DefaultTableModel)tblSaleCustomerInvoiceItem.getModel();
                            if(tmodel.getRowCount()==0)
                            {
                                JOptionPane.showMessageDialog(this, "Cannot Print Empty Invoice","Error",JOptionPane.ERROR_MESSAGE);
                            }
                            else
                            {
                                printInvoice();
                            }
                        }
                    }
                }
            }
        }
        
    }//GEN-LAST:event_btnSaleCustomerSaleActionPerformed

    private void printInvoice()
    {
        String billHeader = "<html>\n" +
                            "    <body>\n" +
                            "        <table>\n" +
                            "            <tr><td style=\"color: #0406FA; font-size: 15px;\">Multi Engineering Services Lanka Private Limited</td><td></td><td></td><td style=\"font-size: 10px; align-content: center; color: #0406FA;\">INVOICE</td></tr>\n" +
                            "            <tr><td>Maintanance Services and Civil Constructions</td><td></td><td>Date : </td><td>"+txtSaleCustomerInvoiceDate.getText()+"</td></tr>\n" +
                            "            <tr><td>No.466/7A</td><td></td><td>Invoice No : </td><td>"+txtSaleCustomerInvoiceNo.getText()+"<!--Inv No here--></td></tr>\n" +
                            "            <tr><td>Thapowanaya Road</td></tr>\n" +
                            "            <tr><td>Aggona</td></tr>\n" +
                            "            <tr><td>Sri Lanka</td></tr>\n" +
                            "            <tr><td>Tel : 0112 794 959 | 0114 558 559</td></tr>\n" +
                            "        </table>\n" +
                            "        <br>";
        String customer[] = txtSaleCustomerInvoiceBillTo.getText().split("-");
        String dName = null;
        String adNo = null;
        String adL1 = null;
        String adL2 = null;
        String city = null;
        String tele = null;
        
        Database db = new Database();
        ResultSet rs = db.selectData("select * from tb_customer where CusNIC = '"+customer[1]+"'");
        try {
            while(rs.next())
            {
                dName = rs.getString("CusName");
                adNo = rs.getString("AddressNo");
                adL1 = rs.getString("AddressLine01");
                adL2 = rs.getString("AddressLine02");
                city = rs.getString("City");
                tele = String.valueOf(rs.getInt("Telephone"));
            }
        } catch (SQLException ex) {
            //Logger.getLogger(SaleDealerOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
        String billTo = "<!--Bill To Table Starts here -->\n" +
                        "        <table>\n" +
                        "            <tr><td style=\"background-color: #0406FA; color: #FFFFFF;\" colspan=\"2\">Bill To : </td></tr>\n" +
                        "            <tr><td>Name : </td><td>"+dName+"<!--Name Comes Here--></td></tr>\n" +
                        "            <tr><td>Address : </td><td>"+adNo+", "+adL1+"<!--Address no and line 1 comes here--></td></tr>\n" +
                        "            <tr><td></td><td>"+adL2+"<!--line 2 comes here--></td></tr>\n" +
                        "            <tr><td></td><td>"+city+"<!--city comes here--></td></tr>\n" +
                        "            <tr><td>Telephone : </td><td>"+tele+"<!--telephone comes here--></td></tr>\n" +
                        "        </table>\n" +
                        "        <!--Bill to Table Ends Here -->\n" +
                        "        <br>";
        String items = "";
        
        for(int c=0; c<tblSaleCustomerInvoiceItem.getRowCount();c++)
        {
            String itemName = tblSaleCustomerInvoiceItem.getValueAt(c, 1).toString();
            String qty = tblSaleCustomerInvoiceItem.getValueAt(c, 2).toString();
            String price = tblSaleCustomerInvoiceItem.getValueAt(c, 3).toString();
            String discount = tblSaleCustomerInvoiceItem.getValueAt(c, 4).toString();
            String amount = tblSaleCustomerInvoiceItem.getValueAt(c, 5).toString();
            if(items.equals(""))
            {
                items = "<tr><td>"+itemName+"</td><td>"+qty+"</td><td>"+price+"</td><td>"+discount+"</td><td>"+amount+"</td></tr>";
            }
            else
            {
                items = items + "\n" + "<tr><td>"+itemName+"<!--Item Description--></td><td>"+qty+"<!--item Qty--></td><td>"+price+"<!--item price--></td><td>"+discount+"<!--item discount--></td><td>"+amount+"<!--item amount--></td></tr>";
            }
            //items = items+"\n"+"<tr><td>"+itemName+"<!--Item Description--></td><td>"+qty+"<!--item Qty--></td><td>"+price+"<!--item price--></td><td>"+discount+"<!--item discount--></td><td>"+amount+"<!--item amount--></td></tr>";
        }
        String itemTable ="<!--item table starts here-->\n" +
                            "        <table style=\"border: 2px #0000;\">\n" +
                            "            <tr style=\"background-color: #0406FA; color: #FFFFFF;\"><td>Description</td><td>Quantity</td><td>Price</td><td>Discount</td><td>Amount</td></tr>\n" +
                            "            <!--Fill Items to here -->\n" +
                            "            "+items+"\n" +
                            "            <!--Fill final price details here-->\n" +
                            "            <tr><td colspan=\"3\">Other Comments</td><td>Sub Total : </td><td>"+txtSaleDealerOrderFinalAmount.getText()+"<!--sub total comes here--></td></tr>\n" +
                            "            <tr><td colspan=\"3\">* To Return any Item Make sure to Bring Invoice<td>Discount : </td></td><td>"+txtSaleDealerOrderFinalDiscount.getText()+"<!--discount comes here--></td></tr>\n" +
                            "            <tr><td colspan=\"3\">* Some Items dosen't have warrenties check you item before you buy it</td><td>Total : </td><td>"+txtSaleDealerOrderFinalNetTotal.getText()+"<!--total comes here--></td></tr>\n" +
                            "            <tr><td colspan=\"5\" rowspan=\"3\">Notes : </td></tr>\n" +
                            "            <tr></tr>\n" +
                            "            <tr></tr>\n" +
                            "            <tr></tr>\n" +
                            "        </table>\n" +
                            "        <br>\n" +
                            "        <!--Item table ends here-->";
        String paymentType="";
        if(CmbSaleCustomerPaymentType.getSelectedIndex()==0)//bank
        {
            paymentType = "<table>\n" +
                            "            <tr style=\"background-color: #0406FA; color: #ffffff;\"><td>Payment Type</td><Td>Cheque</Td></tr>\n" +
                            "            <tr><td>Bank Name : </td><td>"+txtSaleCustomerPaymentBankName.getText()+"<!--Bank Name Comes Here--></td></tr>\n" +
                            "            <tr><td>Account No : </td><td>"+txtSaleCustomerPaymentBankAccountNo.getText()+"<!--account no Comes Here--></td></tr>\n" +
                            "            <tr><td>Cheque No : </td><td>"+txtSaleCustomerPaymentBankChequeNo.getText()+"<!--Cheque no Comes Here--></td></tr>\n" +
                            "            <tr><td>Cheque Date : </td><td>"+txtSaleCustomerPaymentBankChequeDate.getText()+"<!--cheque date Comes Here--></td></tr>\n" +
                            "            <tr><td>Remark : </td><td>"+txtSaleCustomerPaymentBankRemark.getText()+"<!--Remark Comes Here--></td></tr>\n" +
                            "        </table>";
        }
        if(CmbSaleCustomerPaymentType.getSelectedIndex()==1)//credit
        {
            paymentType="<table>\n" +
                        "            <tr style = \"background-color: #0406FA; color: #FFFFFF;\"><td>Payment type</td><td>Credit</td></tr>\n" +
                        "            <tr><td>Credit Period</td><td>"+txtSaleCustomerPaymentCreditPeriod.getText()+"<!--credit period comes here--></td></tr>\n" +
                        "            <tr><td>Pay Before</td><td>"+txtSaleCustomerPaymentCreditEndDate.getText()+"<!--credit period comes here--></td></tr>\n"+
                        "        </table>";
        }
        if(CmbSaleCustomerPaymentType.getSelectedIndex()==2)//cash
        {
            paymentType="<table>\n" +
                        "            <tr style = \"background-color: #0406FA; color: #FFFFFF;\"><td>Payment type</td><td>Cash</td></tr>\n" +
                        "        </table>";
        }
        
        String end = "<br>\n" +
                        "        <p style=\"align-content: center; font-style: italic;\">If you have any inquiry regarding this Invoice, <br>Please Contact<Br>Multi Engineering Sevices Lanka Private Limited</p>\n" +
                        "    </body>\n" +
                        "</html>";
        
        JTextPane jtp = new JTextPane();
        jtp.setContentType("text/html");
        jtp.setText(billHeader+billTo+itemTable+paymentType+end);
        try {
            jtp.print();
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(this, "Invoice Not Printed","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void txtSaleCustomerPaymentCreditPeriodKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaleCustomerPaymentCreditPeriodKeyReleased
        // TODO add your handling code here:
        Pattern creditPeriod = Pattern.compile("^[0-9]*$");
        Matcher creditPeriodMatcher = creditPeriod.matcher(txtSaleCustomerPaymentCreditPeriod.getText());
        
        if(creditPeriodMatcher.matches()==false)
        {
            JOptionPane.showMessageDialog(this, "Credit Period Cannot have Letter or Sysmbols","Warning",JOptionPane.WARNING_MESSAGE);
            txtSaleCustomerPaymentCreditPeriod.setText("");
        }
        else
        {
            if(txtSaleCustomerPaymentCreditPeriod.getText().equals(""))
            {
                txtSaleCustomerPaymentCreditEndDate.setText("  ------------------------------------");
            }
            else
            {
                int days = Integer.parseInt(txtSaleCustomerPaymentCreditPeriod.getText());
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
                Calendar c = Calendar.getInstance();
                c.setTime(new Date()); // Using today's date
                c.add(Calendar.DATE, days); 
                String output = sdf.format(c.getTime());
                txtSaleCustomerPaymentCreditEndDate.setText(output);
            }
        }
    }//GEN-LAST:event_txtSaleCustomerPaymentCreditPeriodKeyReleased

    private void btnSaleCustomerCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleCustomerCancelActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(this, "Are you sure to reset this menu this invoice data no longer avilable","Are you sure",JOptionPane.YES_NO_OPTION);
        if(i==0)
        {
            this.setVisible(false);
            dispose();
            new SaleCustomerOrder().setVisible(true);
        }        
    }//GEN-LAST:event_btnSaleCustomerCancelActionPerformed

    private void btnSaleCustomerPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleCustomerPrintActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel)tblSaleCustomerInvoiceItem.getModel();
        if(tmodel.getRowCount()==0)
        {
            JOptionPane.showMessageDialog(this, "Cannot Print Empty Invoice","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            printInvoice();
        }
        
    }//GEN-LAST:event_btnSaleCustomerPrintActionPerformed

    private void txtSaleCustomerOrderCustomerSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaleCustomerOrderCustomerSearchKeyReleased
        // TODO add your handling code here:
        if(txtSaleCustomerOrderCustomerSearch.getText().isEmpty()){
            btnSaleCustomerOrderCustomerSearch.setEnabled(false);
        }else{
            btnSaleCustomerOrderCustomerSearch.setEnabled(true);
        }
    }//GEN-LAST:event_txtSaleCustomerOrderCustomerSearchKeyReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Database db = new Database();
        ResultSet rs = db.selectData("select max(InvoiceNO) as invNo from tb_invoice");
        try {
            while(rs.next())
            {
                int invNo = rs.getInt("invNo");
                if(invNo<=0)
                {
                    invNo=1;
                }
                else
                {
                    invNo = invNo+1;
                }
                txtSaleCustomerInvoiceNo.setText(""+invNo);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Invoice Number Not Loaded Correctly Try to reopen this menu","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        Date now = new Date();
        SimpleDateFormat df = new SimpleDateFormat("yyyy/MM/dd");
        txtSaleCustomerInvoiceDate.setText(df.format(now));
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaleCustomerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaleCustomerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaleCustomerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaleCustomerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaleCustomerOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddItemPanel;
    private javax.swing.JComboBox<String> CmbSaleCustomerPaymentType;
    private javax.swing.JPanel NetAmountPanel;
    private javax.swing.JPanel PanelBank;
    private javax.swing.JPanel PanelCash;
    private javax.swing.JPanel PanelCredit;
    private javax.swing.JPanel PanelPayment;
    private javax.swing.JPanel PanelTotal;
    private javax.swing.JButton btnSaleCustomerCancel;
    private javax.swing.JLabel btnSaleCustomerOrderAddtoInvoice;
    private javax.swing.JButton btnSaleCustomerOrderCustomerSearch;
    private javax.swing.JButton btnSaleCustomerOrderCustomerSearchAll;
    private javax.swing.JButton btnSaleCustomerOrderCustomerSearchClear;
    private javax.swing.JButton btnSaleCustomerOrderItemAdd;
    private javax.swing.JButton btnSaleCustomerOrderItemClear;
    private javax.swing.JButton btnSaleCustomerOrderItemSearch;
    private javax.swing.JButton btnSaleCustomerOrderItemSearchAll;
    private javax.swing.JButton btnSaleCustomerPrint;
    private javax.swing.JButton btnSaleCustomerSale;
    private javax.swing.JComboBox<String> cmbSaleCustomerOrderCustomerSearch;
    private javax.swing.JComboBox<String> cmbSaleCustomerOrderItemSearch;
    private javax.swing.JLabel jLabel147;
    private javax.swing.JLabel jLabel148;
    private javax.swing.JLabel jLabel149;
    private javax.swing.JLabel jLabel151;
    private javax.swing.JLabel jLabel152;
    private javax.swing.JLabel jLabel154;
    private javax.swing.JLabel jLabel155;
    private javax.swing.JLabel jLabel159;
    private javax.swing.JLabel jLabel160;
    private javax.swing.JLabel jLabel161;
    private javax.swing.JLabel jLabel162;
    private javax.swing.JLabel jLabel165;
    private javax.swing.JLabel jLabel166;
    private javax.swing.JLabel jLabel167;
    private javax.swing.JLabel jLabel168;
    private javax.swing.JLabel jLabel169;
    private javax.swing.JLabel jLabel170;
    private javax.swing.JLabel jLabel171;
    private javax.swing.JLabel jLabel172;
    private javax.swing.JLabel jLabel173;
    private javax.swing.JLabel jLabel174;
    private javax.swing.JLabel jLabel175;
    private javax.swing.JLabel jLabel176;
    private javax.swing.JLabel jLabel177;
    private javax.swing.JLabel jLabel178;
    private javax.swing.JLabel jLabel179;
    private javax.swing.JLabel jLabel180;
    private javax.swing.JLabel jLabel181;
    private javax.swing.JLabel jLabel182;
    private javax.swing.JLabel jLabel183;
    private javax.swing.JLabel jLabel184;
    private javax.swing.JLabel jLabel185;
    private javax.swing.JLabel jLabel186;
    private javax.swing.JLabel jLabel187;
    private javax.swing.JLabel jLabel190;
    private javax.swing.JLabel jLabel191;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblSaleCustomerInvoiceItem;
    private javax.swing.JTable tblSaleCustomerOrderCustomerDetails;
    private javax.swing.JTable tblSaleCustomerOrderItem;
    private javax.swing.JLabel txtSaleCustomerInvoiceBillTo;
    private javax.swing.JLabel txtSaleCustomerInvoiceDate;
    private javax.swing.JLabel txtSaleCustomerInvoiceNo;
    private javax.swing.JTextField txtSaleCustomerOrderCustomerSearch;
    private javax.swing.JTextField txtSaleCustomerOrderItemDiscount;
    private javax.swing.JLabel txtSaleCustomerOrderItemDiscountedPrice;
    private javax.swing.JLabel txtSaleCustomerOrderItemFinalDiscount;
    private javax.swing.JLabel txtSaleCustomerOrderItemNo;
    private javax.swing.JLabel txtSaleCustomerOrderItemPrice;
    private javax.swing.JTextField txtSaleCustomerOrderItemPurchasingQty;
    private javax.swing.JLabel txtSaleCustomerOrderItemQtyInWarehouse;
    private javax.swing.JTextField txtSaleCustomerOrderItemSearch;
    private javax.swing.JTextField txtSaleCustomerPaymentBankAccountNo;
    private javax.swing.JTextField txtSaleCustomerPaymentBankChequeDate;
    private javax.swing.JTextField txtSaleCustomerPaymentBankChequeNo;
    private javax.swing.JTextField txtSaleCustomerPaymentBankName;
    private javax.swing.JTextField txtSaleCustomerPaymentBankRemark;
    private javax.swing.JLabel txtSaleCustomerPaymentCreditEndDate;
    private javax.swing.JTextField txtSaleCustomerPaymentCreditPeriod;
    private javax.swing.JLabel txtSaleDealerOrderFinalAmount;
    private javax.swing.JLabel txtSaleDealerOrderFinalDiscount;
    private javax.swing.JLabel txtSaleDealerOrderFinalNetTotal;
    // End of variables declaration//GEN-END:variables
}
