/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Database;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;
import model.Customer;
import model.CustomerReturn;
import model.DealerReturn;
import model.Invoice;

/**
 *
 * @author malith
 */
public class ManageReturns extends javax.swing.JFrame {

    /**
     * Creates new form ManageReturns
     */
    public ManageReturns() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel162 = new javax.swing.JLabel();
        jLabel166 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtManageReturnsInvoiceNoSearch = new javax.swing.JTextField();
        btnManageReturnsInvoiceNoSearch = new javax.swing.JButton();
        btnManageReturnsInvoiceNoClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageReturnsInvoice = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtManageReturnsInvoiceNo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtManageReturnsInvoiceDate = new javax.swing.JFormattedTextField();
        PanelInvoicePayment = new javax.swing.JPanel();
        txtManageReturnsClickOnItemToReturn = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtManageReturnsInvoiceAmount = new javax.swing.JLabel();
        txtManageReturnsInvoiceDiscount = new javax.swing.JLabel();
        txtManageReturnsInvoiceNetAmount = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtManageReturnsDealerID = new javax.swing.JLabel();
        txtManageReturnsBillTo = new javax.swing.JLabel();
        PanelReturnNote = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        txtManageReturnsReturnNoteDate = new javax.swing.JFormattedTextField();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblManageReturnsReturnNote = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txtManageReturnsReturnNoteNetAmount = new javax.swing.JLabel();
        txtManageReturnsReturnNoteDiscount = new javax.swing.JLabel();
        txtManageReturnsReturnNoteAmount = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        btnManageReturnsSave = new javax.swing.JButton();
        btnManageReturnsClear = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel162.setBackground(new java.awt.Color(0, 102, 102));
        jLabel162.setForeground(new java.awt.Color(255, 255, 255));
        jLabel162.setText("     Manage Returns");
        jLabel162.setOpaque(true);

        jLabel166.setBackground(new java.awt.Color(0, 102, 102));
        jLabel166.setForeground(new java.awt.Color(255, 255, 255));
        jLabel166.setText("     Return Note");
        jLabel166.setOpaque(true);

        jLabel1.setText("     Enter invoice number");

        txtManageReturnsInvoiceNoSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtManageReturnsInvoiceNoSearchKeyReleased(evt);
            }
        });

        btnManageReturnsInvoiceNoSearch.setBackground(new java.awt.Color(51, 153, 255));
        btnManageReturnsInvoiceNoSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnManageReturnsInvoiceNoSearch.setText("Search");
        btnManageReturnsInvoiceNoSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageReturnsInvoiceNoSearchActionPerformed(evt);
            }
        });

        btnManageReturnsInvoiceNoClear.setBackground(new java.awt.Color(255, 0, 0));
        btnManageReturnsInvoiceNoClear.setForeground(new java.awt.Color(255, 255, 255));
        btnManageReturnsInvoiceNoClear.setText("Clear");
        btnManageReturnsInvoiceNoClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageReturnsInvoiceNoClearActionPerformed(evt);
            }
        });

        tblManageReturnsInvoice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "INO", "Item Name", "Quantity", "Price", "Discount", "Amount"
            }
        ));
        tblManageReturnsInvoice.setGridColor(new java.awt.Color(255, 255, 255));
        tblManageReturnsInvoice.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tblManageReturnsInvoice.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblManageReturnsInvoice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblManageReturnsInvoiceMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblManageReturnsInvoice);

        jLabel2.setText("     Invoice No");

        txtManageReturnsInvoiceNo.setText(" -------------------------------------");

        jLabel4.setText("       Date");

        txtManageReturnsInvoiceDate.setEditable(false);

        txtManageReturnsClickOnItemToReturn.setForeground(new java.awt.Color(0, 102, 102));
        txtManageReturnsClickOnItemToReturn.setText("Click On Item To Return");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel10.setText("Amount");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel11.setText("Discount");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 0, 0));
        jLabel12.setText("Net Amount");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText(":");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText(":");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(204, 0, 0));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText(":");

        txtManageReturnsInvoiceAmount.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtManageReturnsInvoiceAmount.setText("--------------------------------");

        txtManageReturnsInvoiceDiscount.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtManageReturnsInvoiceDiscount.setText("--------------------------------");

        txtManageReturnsInvoiceNetAmount.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtManageReturnsInvoiceNetAmount.setForeground(new java.awt.Color(204, 0, 0));
        txtManageReturnsInvoiceNetAmount.setText("--------------------------------");

        javax.swing.GroupLayout PanelInvoicePaymentLayout = new javax.swing.GroupLayout(PanelInvoicePayment);
        PanelInvoicePayment.setLayout(PanelInvoicePaymentLayout);
        PanelInvoicePaymentLayout.setHorizontalGroup(
            PanelInvoicePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInvoicePaymentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtManageReturnsClickOnItemToReturn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelInvoicePaymentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelInvoicePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInvoicePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PanelInvoicePaymentLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtManageReturnsInvoiceAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PanelInvoicePaymentLayout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtManageReturnsInvoiceNetAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PanelInvoicePaymentLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtManageReturnsInvoiceDiscount)))
                .addGap(103, 103, 103))
        );
        PanelInvoicePaymentLayout.setVerticalGroup(
            PanelInvoicePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInvoicePaymentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtManageReturnsClickOnItemToReturn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInvoicePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13)
                    .addComponent(txtManageReturnsInvoiceAmount))
                .addGap(18, 18, 18)
                .addGroup(PanelInvoicePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14)
                    .addComponent(txtManageReturnsInvoiceDiscount))
                .addGap(18, 18, 18)
                .addGroup(PanelInvoicePaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel15)
                    .addComponent(txtManageReturnsInvoiceNetAmount))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jLabel5.setText("     Bill To ,");

        jLabel6.setText("( Dealer ID )");

        txtManageReturnsDealerID.setText("  ------------------------------------");

        txtManageReturnsBillTo.setText("-----------------------");

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Date");

        txtManageReturnsReturnNoteDate.setEditable(false);

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Return Note :");

        tblManageReturnsReturnNote.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item No", "Item Name", "Qty", "Price", "Discount", "NetAmount", "Remark"
            }
        ));
        tblManageReturnsReturnNote.setEnabled(false);
        tblManageReturnsReturnNote.setGridColor(new java.awt.Color(255, 255, 255));
        tblManageReturnsReturnNote.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tblManageReturnsReturnNote.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblManageReturnsReturnNote.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                tblManageReturnsReturnNoteComponentAdded(evt);
            }
        });
        jScrollPane2.setViewportView(tblManageReturnsReturnNote);

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel21.setText("Amount");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel22.setText("Discount");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(204, 0, 0));
        jLabel23.setText("Net Amount");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText(":");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText(":");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(204, 0, 0));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText(":");

        txtManageReturnsReturnNoteNetAmount.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtManageReturnsReturnNoteNetAmount.setForeground(new java.awt.Color(204, 0, 0));
        txtManageReturnsReturnNoteNetAmount.setText("0.00");

        txtManageReturnsReturnNoteDiscount.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtManageReturnsReturnNoteDiscount.setText("0.00");

        txtManageReturnsReturnNoteAmount.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtManageReturnsReturnNoteAmount.setText("0.00");

        jLabel30.setText("Return");

        btnManageReturnsSave.setBackground(new java.awt.Color(0, 102, 102));
        btnManageReturnsSave.setForeground(new java.awt.Color(255, 255, 255));
        btnManageReturnsSave.setText("Save");
        btnManageReturnsSave.setFocusable(false);
        btnManageReturnsSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageReturnsSaveActionPerformed(evt);
            }
        });

        btnManageReturnsClear.setBackground(new java.awt.Color(255, 0, 0));
        btnManageReturnsClear.setForeground(new java.awt.Color(255, 255, 255));
        btnManageReturnsClear.setText("Cancel");
        btnManageReturnsClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageReturnsClearActionPerformed(evt);
            }
        });

        jButton1.setText("Print Note");
        jButton1.setPreferredSize(new java.awt.Dimension(90, 29));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelReturnNoteLayout = new javax.swing.GroupLayout(PanelReturnNote);
        PanelReturnNote.setLayout(PanelReturnNoteLayout);
        PanelReturnNoteLayout.setHorizontalGroup(
            PanelReturnNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelReturnNoteLayout.createSequentialGroup()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(PanelReturnNoteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelReturnNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelReturnNoteLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtManageReturnsReturnNoteDate, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2)
                    .addGroup(PanelReturnNoteLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(PanelReturnNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelReturnNoteLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(PanelReturnNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(PanelReturnNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelReturnNoteLayout.createSequentialGroup()
                                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtManageReturnsReturnNoteAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PanelReturnNoteLayout.createSequentialGroup()
                                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtManageReturnsReturnNoteNetAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PanelReturnNoteLayout.createSequentialGroup()
                                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtManageReturnsReturnNoteDiscount))))
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelReturnNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnManageReturnsSave, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnManageReturnsClear, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 17, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelReturnNoteLayout.setVerticalGroup(
            PanelReturnNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelReturnNoteLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(PanelReturnNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtManageReturnsReturnNoteDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel30)
                .addGap(18, 18, 18)
                .addGroup(PanelReturnNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel25)
                    .addComponent(txtManageReturnsReturnNoteAmount)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(PanelReturnNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelReturnNoteLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(PanelReturnNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(jLabel24)
                            .addComponent(txtManageReturnsReturnNoteDiscount))
                        .addGap(18, 18, 18)
                        .addGroup(PanelReturnNoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(jLabel26)
                            .addComponent(txtManageReturnsReturnNoteNetAmount)))
                    .addGroup(PanelReturnNoteLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnManageReturnsSave, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnManageReturnsClear, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(PanelInvoicePayment, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel162, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtManageReturnsInvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtManageReturnsInvoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtManageReturnsInvoiceNoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnManageReturnsInvoiceNoSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnManageReturnsInvoiceNoClear))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtManageReturnsDealerID, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(txtManageReturnsBillTo, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel166, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelReturnNote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnManageReturnsInvoiceNoClear, btnManageReturnsInvoiceNoSearch});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel166, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel162, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtManageReturnsInvoiceNoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnManageReturnsInvoiceNoSearch)
                            .addComponent(btnManageReturnsInvoiceNoClear))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtManageReturnsInvoiceNo)
                            .addComponent(jLabel4)
                            .addComponent(txtManageReturnsInvoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(txtManageReturnsDealerID))
                        .addGap(16, 16, 16)
                        .addComponent(txtManageReturnsBillTo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelInvoicePayment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(PanelReturnNote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnManageReturnsInvoiceNoClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageReturnsInvoiceNoClearActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        dispose();
        new ManageReturns().setVisible(true);
    }//GEN-LAST:event_btnManageReturnsInvoiceNoClearActionPerformed

    private void btnManageReturnsInvoiceNoSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageReturnsInvoiceNoSearchActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel)tblManageReturnsReturnNote.getModel();
        tblModel.setRowCount(0);
        txtManageReturnsReturnNoteDiscount.setText("0.00");
        txtManageReturnsReturnNoteNetAmount.setText("0.00");
        txtManageReturnsReturnNoteAmount.setText("0.00");
        validateReturnSave=0;
        
        Database dbc = new Database();
        if(txtManageReturnsInvoiceNoSearch.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Enter Invoice Number to Search Data","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else if(dbc.credential_check("SELECT * FROM tb_invoice WHERE InvoiceNO = "+txtManageReturnsInvoiceNoSearch.getText()+" ")!=1)
        {
            JOptionPane.showMessageDialog(this, "The Invoice Number Not Found","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            DefaultTableModel tmodel = (DefaultTableModel)tblManageReturnsInvoice.getModel();
            tmodel.setRowCount(0);
            Invoice i = new Invoice();
            ResultSet rs = i.viewInvoice(txtManageReturnsInvoiceNoSearch.getText());
            if(rs==null)
            {
                JOptionPane.showMessageDialog(this, "No Invoice found Try using Different Keywords","No results",JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                try {
                    while(rs.next())
                    {
                        String invNo = String.valueOf(rs.getInt("InvoiceNO"));
                        String date = String.valueOf(rs.getDate("Date"));
                        txtManageReturnsInvoiceNo.setText(invNo);
                        txtManageReturnsInvoiceDate.setText(date);

                        String billnet = String.valueOf(rs.getDouble("NetAmount"));
                        String billDiscount = String.valueOf(rs.getDouble("Discount"));
                        String billAmount = String.valueOf(rs.getDouble("Amount"));
                        txtManageReturnsInvoiceAmount.setText(billAmount);
                        txtManageReturnsInvoiceDiscount.setText(billDiscount);
                        txtManageReturnsInvoiceNetAmount.setText(billnet);

                        String ino = String.valueOf(rs.getInt("Ino"));
                        String iName = rs.getString("IName");
                        String qty = String.valueOf(rs.getInt("QtyPurchased"));
                        String price = String.valueOf(rs.getDouble("IAmount"));
                        String dis = String.valueOf(rs.getDouble("DiscountRate"));
                        String tot = String.valueOf(rs.getDouble("TotAmount"));
                        String tbData[] = {ino,iName,qty,price,dis,tot};

                        tmodel.addRow(tbData);

                        String type = rs.getString("Type");
                        if(type.equals("Customer"))
                        {
                            jLabel6.setText("Customer");
                            String cusNIC = rs.getString("cusNIC");
                            txtManageReturnsDealerID.setText(cusNIC);
                            Customer c = new Customer();
                            ResultSet rs1 = c.viewCustomer("Offline", cusNIC, "CusNIC");
                            while(rs1.next())
                            {
                                String cusName = rs1.getString("CusName");
                                txtManageReturnsBillTo.setText(cusName);
                            }
                        }
                        if(type.equals("Dealer"))
                        {
                            jLabel6.setText("Dealer");
                            Database db = new Database();
                            ResultSet rs1 = db.selectData("SELECT * FROM tb_dealerorder,tb_dealer WHERE tb_dealerorder.DID=tb_dealer.DID AND InvNO ="+invNo+" ");
                            while(rs1.next())
                            {
                                String dealerName = rs1.getString("DName");
                                String dealerID = rs1.getString("DID");
                                txtManageReturnsDealerID.setText(dealerID);
                                txtManageReturnsBillTo.setText(dealerName);
                            }
                        }
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage()+"Cannot load invoice details reopen the menu and try again","No results",JOptionPane.ERROR_MESSAGE);
                }
            }
        }        
    }//GEN-LAST:event_btnManageReturnsInvoiceNoSearchActionPerformed

    private void tblManageReturnsInvoiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblManageReturnsInvoiceMouseClicked
        // TODO add your handling code here:
        JPanel panel = new JPanel();
        JComboBox cmb = new JComboBox();
        cmb.addItem("Damaged");
        cmb.addItem("Item Return");
        JLabel label = new JLabel();
        label.setText("Select Remark");
        JLabel label1 = new JLabel();
        label1.setText("Return Quantity");
        JTextField returnQty = new JTextField(5);        
        panel.add(label);
        panel.add(cmb);
        panel.add(label1);
        panel.add(returnQty);
        
        int i = JOptionPane.showConfirmDialog(this, panel, "Return Remark", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(i==0)
        {
            if(returnQty.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Enter Return Quantity To Return Item","Return Quantity Empty",JOptionPane.WARNING_MESSAGE);
            }
            else if(Integer.parseInt(returnQty.getText())>Integer.parseInt(tblManageReturnsInvoice.getValueAt(tblManageReturnsInvoice.getSelectedRow(), 2).toString()))
            {
                JOptionPane.showMessageDialog(this, "Return Quantity Cannot Exceed the Purhased Quantity","Error",JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                int row = tblManageReturnsInvoice.getSelectedRow();
                String ino = tblManageReturnsInvoice.getValueAt(row, 0).toString();
                String iname = tblManageReturnsInvoice.getValueAt(row, 1).toString();
                double oldPrice = Double.parseDouble(tblManageReturnsInvoice.getValueAt(row, 3).toString());
                double oldDiscount = Double.parseDouble(tblManageReturnsInvoice.getValueAt(row, 4).toString());
                double oldNetAmount = Double.parseDouble(tblManageReturnsInvoice.getValueAt(row, 5).toString());
                int returnQuantity = Integer.parseInt(returnQty.getText());
                int oldQuantity = Integer.parseInt(tblManageReturnsInvoice.getValueAt(row, 2).toString());
                DecimalFormat df = new DecimalFormat("0.00");
                String returnPrice = df.format(oldPrice*returnQuantity);
                String returnDiscount = df.format((oldDiscount/oldQuantity)*returnQuantity);
                String returnNet = df.format((oldNetAmount/oldQuantity)*returnQuantity);

                String tbData[] = {ino,iname,""+returnQuantity,returnPrice,returnDiscount,returnNet,cmb.getSelectedItem().toString()};
                DefaultTableModel tmodel = (DefaultTableModel)tblManageReturnsReturnNote.getModel();
                tmodel.addRow(tbData);



                double returnBillAmount = 0.0;
                double returnBillDiscount = 0.0;
                double returnBillNetAmount = 0.0;




                double returnItemAmount = 0.0;
                double returnItemDiscount = 0.0;
                double returnItemNetAmount = 0.0;



                for(int c=0; c<tblManageReturnsReturnNote.getRowCount();c++)
                {                
                    returnItemAmount = returnItemAmount + Double.parseDouble(tblManageReturnsReturnNote.getValueAt(c, 3).toString());
                    returnItemDiscount = returnItemDiscount + Double.parseDouble(tblManageReturnsReturnNote.getValueAt(c, 4).toString());
                    returnItemNetAmount = returnItemNetAmount + Double.parseDouble(tblManageReturnsReturnNote.getValueAt(c, 5).toString());

                    txtManageReturnsReturnNoteAmount.setText(df.format(returnItemAmount));
                    txtManageReturnsReturnNoteDiscount.setText(df.format(returnItemDiscount));
                    txtManageReturnsReturnNoteNetAmount.setText(df.format(returnItemNetAmount));
                }
            }
        }
    }//GEN-LAST:event_tblManageReturnsInvoiceMouseClicked

    private void tblManageReturnsReturnNoteComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tblManageReturnsReturnNoteComponentAdded
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tblManageReturnsReturnNoteComponentAdded

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        Date now = new Date();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        txtManageReturnsReturnNoteDate.setText(df.format(now));
    }//GEN-LAST:event_formWindowActivated

    private void btnManageReturnsClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageReturnsClearActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_btnManageReturnsClearActionPerformed

    private void btnManageReturnsSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageReturnsSaveActionPerformed
        // TODO add your handling code here:
        if(tblManageReturnsReturnNote.getRowCount()<=0)
        {
            JOptionPane.showMessageDialog(this, "Cannot Save the return note nothing to return","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            double oldAmount = Double.parseDouble(txtManageReturnsInvoiceAmount.getText());
            double oldDiscount = Double.parseDouble(txtManageReturnsInvoiceDiscount.getText());
            double oldNetAmount = Double.parseDouble(txtManageReturnsInvoiceNetAmount.getText());

            double rAmount = Double.parseDouble(txtManageReturnsReturnNoteAmount.getText());
            double rDiscount = Double.parseDouble(txtManageReturnsReturnNoteDiscount.getText());
            double rNetAmount = Double.parseDouble(txtManageReturnsReturnNoteNetAmount.getText());

            double newAmount = oldAmount-rAmount;
            double newDiscount = oldDiscount-rDiscount;
            double newNetAmount = oldNetAmount-rNetAmount;

            DecimalFormat df = new DecimalFormat("0.00");

            Invoice i = new Invoice();
            int p = i.updateInvoice(df.format(newAmount), df.format(newDiscount), df.format(newNetAmount), txtManageReturnsInvoiceNoSearch.getText());
            if(p==1)
            {
                JOptionPane.showMessageDialog(this, "Invoice Data updated Successfully","Done",JOptionPane.INFORMATION_MESSAGE);
                validateReturnSave=1;
            }

            int check=0;
            for(int c=0;c<tblManageReturnsReturnNote.getRowCount();c++)
            {
                if(jLabel6.getText().equals("Customer"))
                {
                    CustomerReturn cr = new CustomerReturn();
                    int c1 = cr.makeReturn(txtManageReturnsDealerID.getText(), tblManageReturnsReturnNote.getValueAt(c, 0).toString(), txtManageReturnsInvoiceNo.getText(), txtManageReturnsReturnNoteDate.getText(), tblManageReturnsReturnNote.getValueAt(c, 6).toString(),tblManageReturnsReturnNote.getValueAt(c, 5).toString(),tblManageReturnsReturnNote.getValueAt(c, 2).toString());
                    if(c1==1)//updating item
                    {
                        if(tblManageReturnsReturnNote.getValueAt(c, 6).toString().equals("Item Return"))
                        {
                            int oldQty = 0;
                            int newQty = 0;
                            Database db = new Database();
                            ResultSet rs = db.selectData("select * from tb_item where ino = "+tblManageReturnsReturnNote.getValueAt(c, 0).toString()+" ");
                            if(rs!=null)
                            {
                                try {
                                    while(rs.next())
                                    {
                                        oldQty = rs.getInt("Qtyinhand");
                                    }
                                } catch (SQLException ex) {
                                    //Logger.getLogger(ManageReturns.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                newQty = oldQty+Integer.parseInt(tblManageReturnsReturnNote.getValueAt(c, 2).toString());
                                db.insertUpdateDelete("UPDATE `tb_item` SET `Qtyinhand` = "+newQty+" WHERE `tb_item`.`INO` = "+tblManageReturnsReturnNote.getValueAt(c, 0).toString()+" ");

                            }
                        }

                        ///////////////updating item in invoice=---------------------////////////
                        Database db = new Database();
                        ResultSet rs = db.selectData("SELECT * FROM tb_itemininvoice WHERE INO='"+tblManageReturnsReturnNote.getValueAt(c, 0).toString()+"' AND InvNO = '"+txtManageReturnsInvoiceNoSearch.getText()+"' ");
                        int oldIIQty =0;
                        double oldIIDiscount = 0.0;
                        double oldIINetAmount = 0.0;

                        try {
                            while(rs.next())
                            {
                                oldIIQty = rs.getInt("QtyPurchased");
                                oldIIDiscount = rs.getDouble("DiscountRate");
                                oldIINetAmount = rs.getDouble("TotAmount");
                            }
                        } catch (SQLException ex) {
                            //Logger.getLogger(ManageReturns.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        int returnIIQty =Integer.parseInt(tblManageReturnsReturnNote.getValueAt(c, 2).toString());
                        double returnIIDiscount = Double.parseDouble(tblManageReturnsReturnNote.getValueAt(c, 4).toString());
                        double returnIINetAmount = Double.parseDouble(tblManageReturnsReturnNote.getValueAt(c, 5).toString());

                        int newIIQty = oldIIQty-returnIIQty;
                        double newIIDiscount = oldIIDiscount-returnIIDiscount;
                        double newIINetAmount = oldIINetAmount-returnIINetAmount;

                        int c2 = db.insertUpdateDelete("UPDATE tb_itemininvoice SET QtyPurchased = "+newIIQty+" , DiscountRate = '"+newIIDiscount+"' , TotAmount = '"+newIINetAmount+"' WHERE InvNO = '"+txtManageReturnsInvoiceNoSearch.getText()+"' AND INO = "+tblManageReturnsReturnNote.getValueAt(c, 0).toString()+" ");
                        if(c2==1)
                        {
                            check++;
                        }
                    }
                }

                ///////////Dealer Return=====================/**********

                if(jLabel6.getText().equals("Dealer"))
                {
                    DealerReturn dr = new DealerReturn();
                    int c1 = dr.makeReturn(txtManageReturnsDealerID.getText(), tblManageReturnsReturnNote.getValueAt(c, 0).toString(), txtManageReturnsInvoiceNo.getText(), txtManageReturnsReturnNoteDate.getText(), tblManageReturnsReturnNote.getValueAt(c, 6).toString(), tblManageReturnsReturnNote.getValueAt(c, 2).toString(), tblManageReturnsReturnNote.getValueAt(c, 5).toString());
                    if(c1==1)//updating item
                    {
                        if(tblManageReturnsReturnNote.getValueAt(c, 6).toString().equals("Item Return"))
                        {
                            int oldQty = 0;
                            int newQty = 0;
                            Database db = new Database();
                            ResultSet rs = db.selectData("select * from tb_item where ino = "+tblManageReturnsReturnNote.getValueAt(c, 0).toString()+" ");
                            if(rs!=null)
                            {
                                try {
                                    while(rs.next())
                                    {
                                        oldQty = rs.getInt("Qtyinhand");
                                    }
                                } catch (SQLException ex) {
                                    //Logger.getLogger(ManageReturns.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                newQty = oldQty+Integer.parseInt(tblManageReturnsReturnNote.getValueAt(c, 2).toString());
                                db.insertUpdateDelete("UPDATE `tb_item` SET `Qtyinhand` = "+newQty+" WHERE `tb_item`.`INO` = "+tblManageReturnsReturnNote.getValueAt(c, 0).toString()+" ");

                            }
                        }

                        ///////////////updating item in invoice=---------------------////////////
                        Database db = new Database();
                        ResultSet rs = db.selectData("SELECT * FROM tb_itemininvoice WHERE INO='"+tblManageReturnsReturnNote.getValueAt(c, 0).toString()+"' AND InvNO = '"+txtManageReturnsInvoiceNoSearch.getText()+"' ");
                        int oldIIQty =0;
                        double oldIIDiscount = 0.0;
                        double oldIINetAmount = 0.0;

                        try {
                            while(rs.next())
                            {
                                oldIIQty = rs.getInt("QtyPurchased");
                                oldIIDiscount = rs.getDouble("DiscountRate");
                                oldIINetAmount = rs.getDouble("TotAmount");
                            }
                        } catch (SQLException ex) {
                            //Logger.getLogger(ManageReturns.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        int returnIIQty =Integer.parseInt(tblManageReturnsReturnNote.getValueAt(c, 2).toString());
                        double returnIIDiscount = Double.parseDouble(tblManageReturnsReturnNote.getValueAt(c, 4).toString());
                        double returnIINetAmount = Double.parseDouble(tblManageReturnsReturnNote.getValueAt(c, 5).toString());

                        int newIIQty = oldIIQty-returnIIQty;
                        double newIIDiscount = oldIIDiscount-returnIIDiscount;
                        double newIINetAmount = oldIINetAmount-returnIINetAmount;

                        int c2 = db.insertUpdateDelete("UPDATE tb_itemininvoice SET QtyPurchased = "+newIIQty+" , DiscountRate = '"+newIIDiscount+"' , TotAmount = '"+newIINetAmount+"' WHERE InvNO = '"+txtManageReturnsInvoiceNoSearch.getText()+"' AND INO = "+tblManageReturnsReturnNote.getValueAt(c, 0).toString()+" ");
                        if(c2==1)
                        {
                            check++;
                        }
                    }
                }
            }
            if(check==tblManageReturnsReturnNote.getRowCount())
            {
                JOptionPane.showMessageDialog(this, "Return Data Daved Succssfully","Done",JOptionPane.INFORMATION_MESSAGE);
                //txtManageReturnsInvoiceNo.setText(" -------------------------------------");
                //txtManageReturnsDealerID.setText("  ------------------------------------");
                //txtManageReturnsBillTo.setText("-----------------------");
                //txtManageReturnsInvoiceDate.setText("");
                DefaultTableModel t = (DefaultTableModel)tblManageReturnsInvoice.getModel();
                t.setRowCount(0);
                txtManageReturnsInvoiceAmount.setText("--------------------------------");
                txtManageReturnsInvoiceDiscount.setText("--------------------------------");
                txtManageReturnsInvoiceNetAmount.setText("--------------------------------");
            }
        }        
    }//GEN-LAST:event_btnManageReturnsSaveActionPerformed

    private void txtManageReturnsInvoiceNoSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManageReturnsInvoiceNoSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManageReturnsInvoiceNoSearchKeyReleased

    private int validateReturnSave = 0;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(validateReturnSave!=1)
        {
            JOptionPane.showMessageDialog(this, "Save and Try to print return Note Again","Not Saved",JOptionPane.WARNING_MESSAGE);
        }
        else if(tblManageReturnsReturnNote.getRowCount()<=0)
        {
            JOptionPane.showMessageDialog(this, "Cannot Print Empty Return Note","No Items Found",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            printReturnNote();            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void printReturnNote()
    {
        String header = "<html>\n" +
                        "    <body style=\"width: 100%; font-family: 'Times New Roman', Times, serif;\">\n" +
                        "        <table style=\"width: 100%;\">\n" +
                        "            <tr><td><p style=\"color: #122CD7; font-size: 16pt;\">Multi Engineering Services Lanka Private Limited</p></td></tr>\n" +
                        "            <tr><td>Maintanance Services and Civil Construction</td></tr>\n" +
                        "            <tr><td>No. 466/7A</td></tr>\n" +
                        "            <tr><td>Thapowanaya Road,</td></tr>\n" +
                        "            <tr><td>Aggona,</td></tr>\n" +
                        "            <tr><td>Sri Lanka.</td></tr>\n" +
                        "            <tr><td>Tel : 0112 794 959 | 0114 558 559</td></tr>\n" +
                        "            <tr><td></td></tr>\n" +
                        "            <tr><td></td></tr>\n" +
                        "            <tr><td style=\"background-color: #122CD7; color: #ffffff;\">Return Note : </td></tr>";
        
        String returnDetails = "<!--Return Details Begins Here-->\n" +
                                "            <tr><td>Date : "+txtManageReturnsReturnNoteDate.getText()+"</td></tr>\n" +
                                "            <tr><td>Invoice Number : "+txtManageReturnsInvoiceNo.getText()+"</td></tr>\n" +
                                "            <tr><td>Customer/ Dealer Name : "+txtManageReturnsBillTo.getText()+"</td></tr>";
        String itemTable = "<!--Return Item Table Begins Here-->\n" +
                            "            <tr>\n" +
                            "                <table>\n" +
                            "                    <tr style=\"background-color: #122CD7; color: #ffffff; align-content: center;\"><td>Description</td><td>Quantity</td><td>Price</td><td>Discount</td><td>Amount</td></tr>";
        String item ="";
        for(int c=0; c<tblManageReturnsReturnNote.getRowCount(); c++)
        {
            String itemDescription = tblManageReturnsReturnNote.getValueAt(c, 1).toString();
            String itemQuantity = tblManageReturnsReturnNote.getValueAt(c, 2).toString();
            String itemPrice = tblManageReturnsReturnNote.getValueAt(c, 3).toString();
            String itemDiscount = tblManageReturnsReturnNote.getValueAt(c, 4).toString();
            String itemAmount = tblManageReturnsReturnNote.getValueAt(c, 5).toString();
            
            if(item.equals(""))
            {
                item = "<tr><td>"+itemDescription+"</td><td>"+itemQuantity+"</td><td>"+itemPrice+"</td><td>"+itemDiscount+"</td><td>"+itemAmount+"</td></tr>";
            }
            else
            {
                item = item + "<tr><td>"+itemDescription+"</td><td>"+itemQuantity+"</td><td>"+itemPrice+"</td><td>"+itemDiscount+"</td><td>"+itemAmount+"</td></tr>";
            }
        }
        
        String footer = "<tr><td></td><td></td><td></td><td>Sub Total : </td><td><!--Sub Total Comes Here-->"+txtManageReturnsReturnNoteAmount.getText()+"</td></tr>\n" +
                        "                    <tr><td></td><td></td><td></td><td>Discount : </td><td><!--Discount Comes Here-->"+txtManageReturnsReturnNoteDiscount.getText()+"</td></tr>\n" +
                        "                    <tr><td></td><td></td><td></td><td>Return Amount : </td><td><!--return amount Comes Here-->"+txtManageReturnsReturnNoteNetAmount.getText()+"</td></tr>\n" +
                        "\n" +
                        "                    <tr><td></td><td></td><td></td><td></td><td>Certified By ,</td></tr>\n" +
                        "                    <tr><td></td><td></td><td></td><td></td><td></td></tr>\n" +
                        "                    <tr><td></td><td></td><td></td><td></td><td>____________________</td></tr>\n" +
                        "                </table>\n" +
                        "            </tr>\n" +
                        "        </table>\n" +
                        "    </body>\n" +
                        "</html>";
        
        JTextPane jtp = new JTextPane();
        jtp.setContentType("text/html");
        jtp.setText(header+returnDetails+itemTable+item+footer);
        
        try {
            jtp.print();
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(this, "Return Note Not Printed","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageReturns().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelInvoicePayment;
    private javax.swing.JPanel PanelReturnNote;
    private javax.swing.JButton btnManageReturnsClear;
    private javax.swing.JButton btnManageReturnsInvoiceNoClear;
    private javax.swing.JButton btnManageReturnsInvoiceNoSearch;
    private javax.swing.JButton btnManageReturnsSave;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel162;
    private javax.swing.JLabel jLabel166;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblManageReturnsInvoice;
    private javax.swing.JTable tblManageReturnsReturnNote;
    private javax.swing.JLabel txtManageReturnsBillTo;
    private javax.swing.JLabel txtManageReturnsClickOnItemToReturn;
    private javax.swing.JLabel txtManageReturnsDealerID;
    private javax.swing.JLabel txtManageReturnsInvoiceAmount;
    private javax.swing.JFormattedTextField txtManageReturnsInvoiceDate;
    private javax.swing.JLabel txtManageReturnsInvoiceDiscount;
    private javax.swing.JLabel txtManageReturnsInvoiceNetAmount;
    private javax.swing.JLabel txtManageReturnsInvoiceNo;
    private javax.swing.JTextField txtManageReturnsInvoiceNoSearch;
    private javax.swing.JLabel txtManageReturnsReturnNoteAmount;
    private javax.swing.JFormattedTextField txtManageReturnsReturnNoteDate;
    private javax.swing.JLabel txtManageReturnsReturnNoteDiscount;
    private javax.swing.JLabel txtManageReturnsReturnNoteNetAmount;
    // End of variables declaration//GEN-END:variables
}
