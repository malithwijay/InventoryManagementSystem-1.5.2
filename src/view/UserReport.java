/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Database;
import java.awt.Color;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author malith
 */
public class UserReport extends javax.swing.JFrame {

    /**
     * Creates new form UserReport
     */
    public UserReport() {
        initComponents();
        setBackground(new Color (0,0,0,0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder = new view.PanelBorder();
        UserReportClose = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtUserOperationReportFromDate = new com.toedter.calendar.JDateChooser();
        cmbUserOperationReportMenu = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUserOperationReportToDate = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        btnUserOperationReportSearch = new javax.swing.JButton();
        btnUserOperationReportSearchClear = new javax.swing.JButton();
        btnUserOperationReportSearchViewAll = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUserOperationReport = new javax.swing.JTable();
        btnUserOperationReportPrint = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtUserOperationReportUserID = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        panelBorder.setBackground(new java.awt.Color(255, 255, 255));

        UserReportClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/closeLogin.png"))); // NOI18N
        UserReportClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserReportCloseMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("   User Operation Report ");

        cmbUserOperationReportMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "User", "Order", "Item", "Salesperson", "Customer", "Dealer" }));

        jLabel4.setText("Menu");

        jLabel2.setText("From");

        jLabel3.setText("To");

        btnUserOperationReportSearch.setBackground(new java.awt.Color(51, 153, 255));
        btnUserOperationReportSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnUserOperationReportSearch.setText("Search");
        btnUserOperationReportSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserOperationReportSearchActionPerformed(evt);
            }
        });

        btnUserOperationReportSearchClear.setBackground(new java.awt.Color(255, 0, 0));
        btnUserOperationReportSearchClear.setForeground(new java.awt.Color(255, 255, 255));
        btnUserOperationReportSearchClear.setText("Clear");
        btnUserOperationReportSearchClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserOperationReportSearchClearActionPerformed(evt);
            }
        });

        btnUserOperationReportSearchViewAll.setBackground(new java.awt.Color(0, 102, 102));
        btnUserOperationReportSearchViewAll.setForeground(new java.awt.Color(255, 255, 255));
        btnUserOperationReportSearchViewAll.setText("View All");
        btnUserOperationReportSearchViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserOperationReportSearchViewAllActionPerformed(evt);
            }
        });

        tblUserOperationReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Operation ID", "Operation By", "Date", "Time", "Menu Name", "Operation", "Description"
            }
        ));
        jScrollPane1.setViewportView(tblUserOperationReport);

        btnUserOperationReportPrint.setBackground(new java.awt.Color(51, 51, 255));
        btnUserOperationReportPrint.setForeground(new java.awt.Color(255, 255, 255));
        btnUserOperationReportPrint.setText("Print");
        btnUserOperationReportPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserOperationReportPrintActionPerformed(evt);
            }
        });

        jLabel5.setText("User ID");

        javax.swing.GroupLayout panelBorderLayout = new javax.swing.GroupLayout(panelBorder);
        panelBorder.setLayout(panelBorderLayout);
        panelBorderLayout.setHorizontalGroup(
            panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorderLayout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorderLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtUserOperationReportFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBorderLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmbUserOperationReportMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorderLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(txtUserOperationReportUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBorderLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(txtUserOperationReportToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorderLayout.createSequentialGroup()
                        .addComponent(btnUserOperationReportSearch)
                        .addGap(18, 18, 18)
                        .addComponent(btnUserOperationReportSearchClear)
                        .addGap(18, 18, 18)
                        .addComponent(btnUserOperationReportSearchViewAll)
                        .addGap(0, 214, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorderLayout.createSequentialGroup()
                        .addGap(0, 430, Short.MAX_VALUE)
                        .addComponent(UserReportClose)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUserOperationReportPrint)
                .addGap(185, 185, 185))
            .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelBorderLayout.createSequentialGroup()
                    .addGap(27, 27, 27)
                    .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1156, Short.MAX_VALUE)
                        .addGroup(panelBorderLayout.createSequentialGroup()
                            .addGap(91, 91, 91)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 947, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(58, 58, 58)))
                    .addGap(27, 27, 27)))
        );
        panelBorderLayout.setVerticalGroup(
            panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorderLayout.createSequentialGroup()
                .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(UserReportClose))
                    .addGroup(panelBorderLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(txtUserOperationReportFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtUserOperationReportToDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmbUserOperationReportMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtUserOperationReportUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUserOperationReportSearch)
                            .addComponent(btnUserOperationReportSearchClear)
                            .addComponent(btnUserOperationReportSearchViewAll))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 480, Short.MAX_VALUE)
                .addComponent(btnUserOperationReportPrint)
                .addGap(19, 19, 19))
            .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelBorderLayout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(111, 111, 111)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(58, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void UserReportCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserReportCloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_UserReportCloseMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void btnUserOperationReportSearchViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserOperationReportSearchViewAllActionPerformed
        // TODO add your handling code here:
        String sql = "select * from tb_useroperation";
        loadReportData(sql);
        aboutText = "<tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p></p></td> <td><p></p></td> <td><p></p></td> <td><p></p></td> </tr>\n";
    }//GEN-LAST:event_btnUserOperationReportSearchViewAllActionPerformed

    private void loadReportData(String sql)
    {
        DefaultTableModel tmodel = (DefaultTableModel)tblUserOperationReport.getModel();
        tmodel.setRowCount(0);
        Database db = new Database();
        ResultSet rs = db.selectData(sql);
        try {
            while(rs.next())
            {
                String opID = String.valueOf(rs.getInt("OperationID"));
                String opBy = rs.getString("OperationBy");
                String date = String.valueOf(rs.getDate("Date"));
                String time = String.valueOf(rs.getTime("Time"));
                String menu = rs.getString("menuName");
                String operation = rs.getString("Operation");
                String description = rs.getString("Description");
                String tbData[] = {opID,opBy,date,time,menu,operation,description};
                tmodel.addRow(tbData);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage()+"Unable to Load Data Try again","Error",JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage()+"Unable to Load Data Try again","Error",JOptionPane.ERROR_MESSAGE);
        }
        if(tblUserOperationReport.getRowCount()<=0)
        {
            JOptionPane.showMessageDialog(this, "No Data Found Try using different keywords","Empty",JOptionPane.WARNING_MESSAGE);
        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        loadUsername();
    }//GEN-LAST:event_formWindowOpened

    private String username="";
    public void setUsername(String uName)
    {
        username=uName;
    }
    private void btnUserOperationReportSearchClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserOperationReportSearchClearActionPerformed
        // TODO add your handling code here:
        UserReport u = new UserReport();
        u.setUsername(username);
        u.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnUserOperationReportSearchClearActionPerformed

    private String aboutText = "";
    private void btnUserOperationReportSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserOperationReportSearchActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String startDate = String.valueOf(txtUserOperationReportFromDate.getDate());
        String endDate = String.valueOf(txtUserOperationReportToDate.getDate());
        String sql = "";
        if(txtUserOperationReportUserID.getSelectedItem().equals("All") && cmbUserOperationReportMenu.getSelectedItem().equals("All"))
        {
            if(startDate.equals("null") && endDate.equals("null"))
            {
                sql = "select * from tb_useroperation";
                loadReportData(sql);
                aboutText = "<tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p></p></td> <td><p></p></td> <td><p></p></td> <td><p></p></td> </tr>\n";
            }
            else if(!startDate.equals("null") && endDate.equals("null"))
            {
                JOptionPane.showMessageDialog(this, "Select To Date to Search","To Date Empty",JOptionPane.WARNING_MESSAGE);
            }
            else if(startDate.equals("null") && !endDate.equals("null"))
            {
                JOptionPane.showMessageDialog(this, "Select From Date to Search","From Date Empty",JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                sql = "select * from tb_useroperation where Date between '"+df.format(txtUserOperationReportFromDate.getDate())+"' AND '"+df.format(txtUserOperationReportToDate.getDate())+"'";
                loadReportData(sql);
                aboutText = "<tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p>From/To</p></td> <td><p>"+df.format(txtUserOperationReportFromDate.getDate())+"/"+df.format(txtUserOperationReportToDate.getDate())+"</p></td> <td><p></p></td> <td><p></p></td> </tr>\n";
            }
        }
        else if(txtUserOperationReportUserID.getSelectedItem().equals("All") && !cmbUserOperationReportMenu.getSelectedItem().equals("All"))
        {
            if(startDate.equals("null") && endDate.equals("null"))
            {
                sql = "select * from tb_useroperation where menuname = '"+cmbUserOperationReportMenu.getSelectedItem()+"'";
                loadReportData(sql);
                aboutText = "<tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p>Menu Name</p></td> <td><p>"+cmbUserOperationReportMenu.getSelectedItem()+"</p></td> <td><p></p></td> <td><p></p></td> </tr>\n";
            }
            else if(!startDate.equals("null") && endDate.equals("null"))
            {
                JOptionPane.showMessageDialog(this, "Select To Date to Search","To Date Empty",JOptionPane.WARNING_MESSAGE);
            }
            else if(startDate.equals("null") && !endDate.equals("null"))
            {
                JOptionPane.showMessageDialog(this, "Select From Date to Search","From Date Empty",JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                sql = "select * from tb_useroperation where Date between '"+df.format(txtUserOperationReportFromDate.getDate())+"' AND '"+df.format(txtUserOperationReportToDate.getDate())+"' and menuname = '"+cmbUserOperationReportMenu.getSelectedItem()+"'";
                loadReportData(sql);
                aboutText = "<tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p>From/To</p></td> <td><p>"+df.format(txtUserOperationReportFromDate.getDate())+"/"+df.format(txtUserOperationReportToDate.getDate())+"</p></td> <td><p>Menu Name</p></td> <td><p>"+cmbUserOperationReportMenu.getSelectedItem()+"</p></td> </tr>\n";
            }
        }
        else if(!txtUserOperationReportUserID.getSelectedItem().equals("All") && cmbUserOperationReportMenu.getSelectedItem().equals("All"))
        {
            if(startDate.equals("null") && endDate.equals("null"))
            {
                sql = "select * from tb_useroperation where operationby = '"+txtUserOperationReportUserID.getSelectedItem()+"'";
                loadReportData(sql);
                aboutText = "<tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p></p></td> <td><p></p></td> <td><p>Operation By</p></td> <td><p>"+txtUserOperationReportUserID.getSelectedItem()+"</p></td> </tr>\n";
            }
            else if(!startDate.equals("null") && endDate.equals("null"))
            {
                JOptionPane.showMessageDialog(this, "Select To Date to Search","To Date Empty",JOptionPane.WARNING_MESSAGE);
            }
            else if(startDate.equals("null") && !endDate.equals("null"))
            {
                JOptionPane.showMessageDialog(this, "Select From Date to Search","From Date Empty",JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                sql = "select * from tb_useroperation where Date between '"+df.format(txtUserOperationReportFromDate.getDate())+"' AND '"+df.format(txtUserOperationReportToDate.getDate())+"' and operationby = '"+txtUserOperationReportUserID.getSelectedItem()+"'";
                loadReportData(sql);
                aboutText = "<tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p>From/To</p></td> <td><p>"+df.format(txtUserOperationReportFromDate.getDate())+"/"+df.format(txtUserOperationReportToDate.getDate())+"</p></td> <td><p>Operation By</p></td> <td><p>"+txtUserOperationReportUserID.getSelectedItem()+"</p></td> </tr>\n";
            }
        }
        else if(!txtUserOperationReportUserID.getSelectedItem().equals("All") && !cmbUserOperationReportMenu.getSelectedItem().equals("All"))
        {
            if(startDate.equals("null") && endDate.equals("null"))
            {
                sql = "select * from tb_useroperation where operationby = '"+txtUserOperationReportUserID.getSelectedItem()+"' and menuname = '"+cmbUserOperationReportMenu.getSelectedItem()+"'";
                loadReportData(sql);
                aboutText = "<tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p></p></td> <td><p></p></td> <td><p>Operation By : "+txtUserOperationReportUserID.getSelectedItem()+"</p></td> <td><p>Menu Name : "+cmbUserOperationReportMenu.getSelectedItem()+"</p></td> </tr>\n";
            }
            else if(!startDate.equals("null") && endDate.equals("null"))
            {
                JOptionPane.showMessageDialog(this, "Select To Date to Search","To Date Empty",JOptionPane.WARNING_MESSAGE);
            }
            else if(startDate.equals("null") && !endDate.equals("null"))
            {
                JOptionPane.showMessageDialog(this, "Select From Date to Search","From Date Empty",JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                sql = "select * from tb_useroperation where Date between '"+df.format(txtUserOperationReportFromDate.getDate())+"' AND '"+df.format(txtUserOperationReportToDate.getDate())+"' and operationby = '"+txtUserOperationReportUserID.getSelectedItem()+"' and menuname = '"+cmbUserOperationReportMenu.getSelectedItem()+"'";
                loadReportData(sql);
                aboutText = "<tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p>From/To</p></td> <td><p>"+df.format(txtUserOperationReportFromDate.getDate())+"/"+df.format(txtUserOperationReportToDate.getDate())+"</p></td> <td><p>Operation By : "+txtUserOperationReportUserID.getSelectedItem()+"</p></td> <td><p>Menu Name : "+cmbUserOperationReportMenu.getSelectedItem()+"</p></td> </tr>\n";
            }
        }
    }//GEN-LAST:event_btnUserOperationReportSearchActionPerformed

    private void btnUserOperationReportPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserOperationReportPrintActionPerformed
        // TODO add your handling code here:
        if(tblUserOperationReport.getRowCount()<=0)
        {
            JOptionPane.showMessageDialog(this, "Cannot Print Report No Data Fount","Empty Data",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            printReport(aboutText);
        }
    }//GEN-LAST:event_btnUserOperationReportPrintActionPerformed

    private void printReport(String about)
    {
        Date now = new Date();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String itemData = "";
        for(int c=0; c<tblUserOperationReport.getRowCount();c++)
        {
            if(itemData.equals(""))
            {
                itemData = "<tr><td><p>"+tblUserOperationReport.getValueAt(c, 0).toString()+"</p></td><td><p>"+tblUserOperationReport.getValueAt(c, 1).toString()+"</p></td><td><p>"+tblUserOperationReport.getValueAt(c, 2).toString()+"</p></td><td><p>"+tblUserOperationReport.getValueAt(c, 3).toString()+"</p></td><td><p>"+tblUserOperationReport.getValueAt(c, 4).toString()+"</p></td><td><p>"+tblUserOperationReport.getValueAt(c, 5).toString()+"</p></td><td><p>"+tblUserOperationReport.getValueAt(c, 6).toString()+"</p></td></tr>\n";
            }  
            else
            {
                itemData = itemData + "<tr><td><p>"+tblUserOperationReport.getValueAt(c, 0).toString()+"</p></td><td><p>"+tblUserOperationReport.getValueAt(c, 1).toString()+"</p></td><td><p>"+tblUserOperationReport.getValueAt(c, 2).toString()+"</p></td><td><p>"+tblUserOperationReport.getValueAt(c, 3).toString()+"</p></td><td><p>"+tblUserOperationReport.getValueAt(c, 4).toString()+"</p></td><td><p>"+tblUserOperationReport.getValueAt(c, 5).toString()+"</p></td><td><p>"+tblUserOperationReport.getValueAt(c, 6).toString()+"</p></td></tr>\n";
            }
        }
        String reportText = "<html>\n" +
                            "    <head>\n" +
                            "        <style>\n" +
                            "            p{font-family: 'Times New Roman', Times, serif;font-size: 11pt; text-align: left;}\n" +
                            //"            td {border : solid 1pt #000000; border-collapse: collapse;}\n" +
                            "            table{border : solid 1pt #000000; border-collapse: collapse;}\n" +
                            "        </style>\n" +
                            "    </head>\n" +
                            "    <body>\n" +
                            "        <table style=\"width: 100%;\">\n" +
                            "            <tr><td><h1 style=\"font-family: 'Times New Roman', Times, serif; font-size: 18pt; text-align: center;\">User Operation Report</h1></td></tr>\n" +
                            "            <tr aria-rowspan=\"3\">\n" +
                            "                <td><p>Multi Engineering Services Lanka Private Limited<br>No.466/7A Thapowanaya Road, Aggona<br>Sri Lanka.<br>Tel : 0112 794 959, 0114 558 559</p></td>\n" +
                            "            </tr>\n" +
                            //"            <tr><td><p style=\"text-align: center;\">Stock Report<!--report name--></p></td></tr>\n" +
                            "\n" +
                            "            <!--report header details starts here-->\n" +
                            "            <tr>\n" +
                            "                <td>\n" +
                            "                    <table style=\"width: 100%;\">\n" +
                            "                        <tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p>Generated By,</p></td> <td><p>"+username+"</p></td> <td><p>Date : </p></td> <td><p>"+df.format(now)+"</p></td> </tr>\n" +
                            "                        "+about+"" +
                            "                    </table>\n" +
                            "                </td>\n" +
                            "            </tr>\n" +
                            "            <tr><td style=\"height: 12pt;\"><p></p></td></tr>\n" +
                            "\n" +
                            "            <!--data table starts here-->\n" +
                            "            <tr>\n" +
                            "                <td>\n" +
                            "                    <table style=\"width: 100%;\">\n" +
                            "                        <tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"><td ><p>Operation ID</p></td><td><p>Opearion By</p></td><td><p>Date</p></td><td><p>Time</p></td><td><p>Menu Name</p></td><td><p>Operation</p></td><td><p>Description</p></td></tr>\n" +
                            "                        <!--item data comes here!-->\n" +
                            "                       "+itemData+" " +
                            "\n" +
                            "                        <!--finishes here-->\n" +
                            //"                        <tr><td colspan=\"2\"><p style=\"text-align: right;\">Total : </p></td><td><p>"+totqtyInHand+"</p></td><td><p>"+totqtyPurchased+"</p></td><td><p>"+totrts+"</p></td><td><p>"+totdamages+"</p></td></tr>\n" +
                            "                    </table>\n" +
                            "                </td>\n" +
                            "            </tr>\n" +
                            "\n" +
                            "            <tr><td><br><p style=\"text-align: right;\">Certified by,<br><br>-----------------------</p><br></tr></td>\n" +
                            "        </table>\n" +
                            "        \n" +
                            "    </body>\n" +
                            "\n" +
                            "</html>";
        
        JTextPane jtp = new JTextPane();
        jtp.setContentType("text/html");
        jtp.setText(reportText);
        try {
            this.setAlwaysOnTop(false);
            jtp.print();
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(this, "Unable to Print Report Try Again","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void loadUsername()
    {
        txtUserOperationReportUserID.removeAllItems();
        txtUserOperationReportUserID.addItem("All");
        Database db = new Database();
        ResultSet rs = db.selectData("SELECT DISTINCT OperationBy FROM tb_useroperation");
        if(rs!=null)
        {
            try {
                while(rs.next())
                {
                    String username = rs.getString("OperationBy");
                    txtUserOperationReportUserID.addItem(username);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Unable to load usernames This menu will be close soon","Error",JOptionPane.ERROR_MESSAGE);
                this.dispose();
            }
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel UserReportClose;
    private javax.swing.JButton btnUserOperationReportPrint;
    private javax.swing.JButton btnUserOperationReportSearch;
    private javax.swing.JButton btnUserOperationReportSearchClear;
    private javax.swing.JButton btnUserOperationReportSearchViewAll;
    private javax.swing.JComboBox<String> cmbUserOperationReportMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private view.PanelBorder panelBorder;
    private javax.swing.JTable tblUserOperationReport;
    private com.toedter.calendar.JDateChooser txtUserOperationReportFromDate;
    private com.toedter.calendar.JDateChooser txtUserOperationReportToDate;
    private javax.swing.JComboBox<String> txtUserOperationReportUserID;
    // End of variables declaration//GEN-END:variables
}
