/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Database;
import java.awt.Color;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author malith
 */

public class DynamicSalesReport extends javax.swing.JFrame {
    
        
    /**
     * Creates new form SalesReport
     */
    public DynamicSalesReport() {
        initComponents();
        setBackground(new Color (0,0,0,0));
        
        
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder = new view.PanelBorder();
        SalesReportClose = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtSalesReportFromDate = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        txtSalesReportToDate = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        cmbSalesReportSearchBy = new javax.swing.JComboBox<>();
        txtSalesReportSearchBy = new javax.swing.JTextField();
        btnSalesReportSearchBySearch = new javax.swing.JButton();
        btnSalesReportSearchByClear = new javax.swing.JButton();
        btnSalesReportSearchByViewAll = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSalesReport = new javax.swing.JTable();
        btnSalesReportPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        panelBorder.setBackground(new java.awt.Color(255, 255, 255));
        panelBorder.setEnabled(false);
        panelBorder.setFocusable(false);
        panelBorder.setVerifyInputWhenFocusTarget(false);

        SalesReportClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/closeLogin.png"))); // NOI18N
        SalesReportClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SalesReportCloseMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("   Dynamic Sales Report ");

        jLabel2.setText("From");

        jLabel3.setText("To");

        jLabel4.setText("Search By");

        cmbSalesReportSearchBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-select filter-", "Dealer", "Customer", "Dealer Name", "Customer Name", "Dealer ID", "Customer NIC", "Sale ID" }));
        cmbSalesReportSearchBy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbSalesReportSearchByMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbSalesReportSearchByMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmbSalesReportSearchByMouseReleased(evt);
            }
        });

        btnSalesReportSearchBySearch.setBackground(new java.awt.Color(51, 153, 255));
        btnSalesReportSearchBySearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSalesReportSearchBySearch.setText("Search");
        btnSalesReportSearchBySearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesReportSearchBySearchActionPerformed(evt);
            }
        });

        btnSalesReportSearchByClear.setBackground(new java.awt.Color(255, 0, 0));
        btnSalesReportSearchByClear.setForeground(new java.awt.Color(255, 255, 255));
        btnSalesReportSearchByClear.setText("Clear");
        btnSalesReportSearchByClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesReportSearchByClearActionPerformed(evt);
            }
        });

        btnSalesReportSearchByViewAll.setBackground(new java.awt.Color(0, 102, 102));
        btnSalesReportSearchByViewAll.setForeground(new java.awt.Color(255, 255, 255));
        btnSalesReportSearchByViewAll.setText("View All");
        btnSalesReportSearchByViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesReportSearchByViewAllActionPerformed(evt);
            }
        });

        tblSalesReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inv No", "Date", "Client Type", "Client Name", "Total Sale", "Total Return", "Net Sale"
            }
        ));
        jScrollPane1.setViewportView(tblSalesReport);

        btnSalesReportPrint.setBackground(new java.awt.Color(51, 51, 255));
        btnSalesReportPrint.setForeground(new java.awt.Color(255, 255, 255));
        btnSalesReportPrint.setText("Print");
        btnSalesReportPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesReportPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorderLayout = new javax.swing.GroupLayout(panelBorder);
        panelBorder.setLayout(panelBorderLayout);
        panelBorderLayout.setHorizontalGroup(
            panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorderLayout.createSequentialGroup()
                .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorderLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SalesReportClose))
                    .addGroup(panelBorderLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 947, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelBorderLayout.createSequentialGroup()
                                .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(34, 34, 34)
                                .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtSalesReportFromDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbSalesReportSearchBy, 0, 200, Short.MAX_VALUE))
                                .addGap(33, 33, 33)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtSalesReportSearchBy)
                                    .addComponent(txtSalesReportToDate, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(btnSalesReportSearchBySearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSalesReportSearchByClear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSalesReportSearchByViewAll)))
                        .addGap(0, 94, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorderLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSalesReportPrint)
                .addGap(154, 154, 154))
        );

        panelBorderLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSalesReportSearchByClear, btnSalesReportSearchBySearch, btnSalesReportSearchByViewAll});

        panelBorderLayout.setVerticalGroup(
            panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SalesReportClose))
                .addGap(31, 31, 31)
                .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(txtSalesReportFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtSalesReportToDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbSalesReportSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSalesReportSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalesReportSearchBySearch)
                    .addComponent(btnSalesReportSearchByClear)
                    .addComponent(btnSalesReportSearchByViewAll))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSalesReportPrint)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SalesReportCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalesReportCloseMouseClicked
        this.dispose();
       
        
        
        

       
    }//GEN-LAST:event_SalesReportCloseMouseClicked

    
    private void btnSalesReportPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesReportPrintActionPerformed
        // TODO add your handling code here:
        
        if(tblSalesReport.getRowCount()<=0)
        {
            JOptionPane.showMessageDialog(this, "Report Data Seems Empty Printing not Available","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String aboutText="<tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p>Starts From : </p></td> <td><p>"+df.format(txtSalesReportFromDate.getDate())+"</p></td> <td><p>Ends From : </p></td> <td><p>"+df.format(txtSalesReportToDate.getDate())+"</p></td> </tr>\n";
            printReport(aboutText);
           
        }
    }//GEN-LAST:event_btnSalesReportPrintActionPerformed

    private void btnSalesReportSearchByViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesReportSearchByViewAllActionPerformed
        // TODO add your handling code here:
        try
        {
            String sql = "";
            String type = "";
            String startDate = "";
            String endDate = "";
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            startDate = String.valueOf(txtSalesReportFromDate.getDate());        
            endDate = String.valueOf(txtSalesReportToDate.getDate());
            
            if(startDate.equals("null") || endDate.equals("null"))
            {
                JOptionPane.showMessageDialog(this, "select start date to filter data","Error",JOptionPane.ERROR_MESSAGE);            
            }
            else
            {
                
                sql = "SELECT * FROM tb_invoice WHERE Date BETWEEN '"+df.format(txtSalesReportFromDate.getDate())+"' AND '"+df.format(txtSalesReportToDate.getDate())+"'";
                loadSaleReportTable(sql,type);
            }
        }
        catch(NullPointerException e)
        {
            JOptionPane.showMessageDialog(this, "Date is Not Selected if Problem not sorted try to reopen the menu","Error",JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Something went wrong if Problem not sorted try to reopen the menu","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSalesReportSearchByViewAllActionPerformed

    private void cmbSalesReportSearchByMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSalesReportSearchByMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbSalesReportSearchByMouseClicked

    private void cmbSalesReportSearchByMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSalesReportSearchByMouseReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbSalesReportSearchByMouseReleased

    private void cmbSalesReportSearchByMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSalesReportSearchByMouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbSalesReportSearchByMouseEntered

    private void btnSalesReportSearchBySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesReportSearchBySearchActionPerformed
        // TODO add your handling code here:
        try
        {
            String sql="";
            String type="";
            String startDate ="";
            String endDate = "";
            startDate = String.valueOf(txtSalesReportFromDate.getDate());
            endDate = String.valueOf(txtSalesReportToDate.getDate());
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            if(!startDate.equals("null") && !endDate.equals("null"))
            {
                
                if(cmbSalesReportSearchBy.getSelectedIndex()==0)
                {
                    JOptionPane.showMessageDialog(this, "Select Filter to Search","Error",JOptionPane.ERROR_MESSAGE);
                }
                else
                {
                    if(cmbSalesReportSearchBy.getSelectedIndex()==1)
                    {
                        sql = "select * from tb_invoice where type='Dealer' and Date BETWEEN '"+df.format(txtSalesReportFromDate.getDate())+"' AND '"+df.format(txtSalesReportToDate.getDate())+"'";
                        txtSalesReportSearchBy.setText("");
                        type="4";
                    }
                    if(cmbSalesReportSearchBy.getSelectedIndex()==2)
                    {
                        sql = "select * from tb_invoice where type='Customer' and Date BETWEEN '"+df.format(txtSalesReportFromDate.getDate())+"' AND '"+df.format(txtSalesReportToDate.getDate())+"'";
                        txtSalesReportSearchBy.setText("");
                        type="5";
                    }
                    if(cmbSalesReportSearchBy.getSelectedIndex()==3)
                    {
                        sql = "SELECT * FROM tb_invoice WHERE InvoiceNO IN (SELECT InvNO FROM tb_dealerorder WHERE DID in (SELECT DID FROM tb_dealer WHERE DName LIKE '%"+txtSalesReportSearchBy.getText()+"%')) and Date BETWEEN '"+df.format(txtSalesReportFromDate.getDate())+"' AND '"+df.format(txtSalesReportToDate.getDate())+"'";
                        type="6";
                    }
                    if(cmbSalesReportSearchBy.getSelectedIndex()==4)
                    {
                        sql = "SELECT * FROM tb_invoice WHERE CusNIC in(SELECT CusNIC FROM tb_customer WHERE CusName LIKE '%"+txtSalesReportSearchBy.getText()+"%') and Date BETWEEN '"+df.format(txtSalesReportFromDate.getDate())+"' AND '"+df.format(txtSalesReportToDate.getDate())+"'";
                        type="7";
                    }
                    if(cmbSalesReportSearchBy.getSelectedIndex()==5)
                    {
                        sql = "SELECT * FROM tb_invoice WHERE InvoiceNO IN (SELECT InvNO FROM tb_dealerorder WHERE DID in (SELECT DID FROM tb_dealer WHERE DID LIKE '%"+txtSalesReportSearchBy.getText()+"%')) and Date BETWEEN '"+df.format(txtSalesReportFromDate.getDate())+"' AND '"+df.format(txtSalesReportToDate.getDate())+"'"; 
                        type="8";
                    }
                    if(cmbSalesReportSearchBy.getSelectedIndex()==6)
                    {
                        sql = "SELECT * FROM tb_invoice WHERE CusNIC in(SELECT CusNIC FROM tb_customer WHERE CusNIC LIKE '%"+txtSalesReportSearchBy.getText()+"%') and Date BETWEEN '"+df.format(txtSalesReportFromDate.getDate())+"' AND '"+df.format(txtSalesReportToDate.getDate())+"'";    
                        type="9";
                    }
                    if(cmbSalesReportSearchBy.getSelectedIndex()==7)
                    {
                        sql = "SELECT * FROM tb_invoice WHERE InvoiceNO = "+txtSalesReportSearchBy.getText()+" and Date BETWEEN '"+df.format(txtSalesReportFromDate.getDate())+"' AND '"+df.format(txtSalesReportToDate.getDate())+"'";            
                        type="10";
                    }
                    loadSaleReportTable(sql,type);
                }                
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Select the Date To Search","Error",JOptionPane.ERROR_MESSAGE);
            }
            }
        catch(NullPointerException e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage()+" Something Went Wrong","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSalesReportSearchBySearchActionPerformed

    private void btnSalesReportSearchByClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesReportSearchByClearActionPerformed
        // TODO add your handling code here:
        DynamicSalesReport f = new DynamicSalesReport();
        f.setUserName(username);
        f.setVisible(true);
    }//GEN-LAST:event_btnSalesReportSearchByClearActionPerformed

    
    private String aboutFilter = "";
    
    private void loadSaleReportTable(String sql,String reportType)
    {
                
        if(reportType.equals("4"))
        {            
            aboutFilter="Client type : Dealer";
        }
        if(reportType.equals("5"))
        {            
            aboutFilter="Client type : Customer";
        }
        if(reportType.equals("6"))
        {
            aboutFilter="Client type : Dealer";
        }
        if(reportType.equals("7"))
        {            
            aboutFilter="Client type : Customer";
        }
        if(reportType.equals("8"))
        {            
            aboutFilter="Client type : Dealer";
        }
        if(reportType.equals("9"))
        {            
            aboutFilter="Client type : Customer";
        }
        if(reportType.equals("10"))
        {            
            aboutFilter="";
        }
        
        DefaultTableModel tmodel = (DefaultTableModel)tblSalesReport.getModel();
        tmodel.setRowCount(0);
        Database db = new Database();
        ResultSet rs = db.selectData(sql);
        try {
            while(rs.next())
            {
                String invNo = String.valueOf(rs.getInt("InvoiceNO"));
                String type = rs.getString("Type");                
                String netSale = String.valueOf(rs.getDouble("NetAmount"));
                String date = String.valueOf(rs.getDate("Date"));
                String clientName = "";
                double dealerReturnAmount = 0.0;
                double customerReturnAmount = 0.0;
                double totalReturns = 0.0;
                String totalSale = "";
                if(type.equals("Customer"))
                {
                    ResultSet rs1 = db.selectData("SELECT * FROM tb_customer WHERE CusNIC in (SELECT CusNIC FROM tb_invoice WHERE InvoiceNO="+invNo+")");
                    if(rs1!=null)
                    {
                        while(rs1.next())
                        {
                            clientName = rs1.getString("CusName");
                        }
                    }                    
                }
                else
                {
                    ResultSet rs1 = db.selectData("select * from tb_dealer where DID in (SELECT DID FROM tb_dealerorder WHERE InvNO="+invNo+")");
                    if(rs1!=null)
                    {
                        while(rs1.next())
                        {
                            clientName = rs1.getString("DName");
                        }
                    }  
                }
                ResultSet rs2 = db.selectData("SELECT sum(Amount) as dealerReturnAmount FROM tb_dealerreturn WHERE InvNO="+invNo+"");
                if(rs2!=null)
                {
                    while(rs2.next())
                    {
                        dealerReturnAmount = rs2.getDouble("dealerReturnAmount");
                    }                    
                }
                ResultSet rs3 = db.selectData("SELECT sum(Amount) as customerReturnAmount FROM tb_customerreturn WHERE InvNO="+invNo+"");
                if(rs3!=null)
                {
                    while(rs3.next())
                    {
                        customerReturnAmount = rs3.getDouble("customerReturnAmount");
                    }                    
                }
                totalReturns = dealerReturnAmount+customerReturnAmount;
                double netSaleAmount = Double.parseDouble(netSale);
                
                DecimalFormat df = new DecimalFormat("0.00");
                
                String tbData[] = {invNo,date,type,clientName,df.format(totalReturns+netSaleAmount),df.format(totalReturns),df.format(netSaleAmount)};
                tmodel.addRow(tbData);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage()+" Cannot Load Sales Details Try Again","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    private String username="";
    public void setUserName(String uName)
    {
        username = uName;
    }
    private void printReport(String about)
    {
        Date now = new Date();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String itemData = "";
        DecimalFormat decf = new DecimalFormat("0.00");
        double totSale = 0.0;
        double totReturn = 0.0;
        double netSale = 0.0;
        for(int c=0; c<tblSalesReport.getRowCount();c++)
        {
            totSale = totSale + Double.parseDouble(tblSalesReport.getValueAt(c, 4).toString());
            totReturn = totReturn + Double.parseDouble(tblSalesReport.getValueAt(c, 5).toString());
            netSale = netSale + Double.parseDouble(tblSalesReport.getValueAt(c, 6).toString());
            if(itemData.equals(""))
            {
                itemData = "<tr><td><p>"+tblSalesReport.getValueAt(c, 0).toString()+"</p></td><td><p>"+tblSalesReport.getValueAt(c, 1).toString()+"</p></td><td><p>"+tblSalesReport.getValueAt(c, 2).toString()+"</p></td><td><p>"+tblSalesReport.getValueAt(c, 3).toString()+"</p></td><td><p>"+tblSalesReport.getValueAt(c, 4).toString()+"</p></td><td><p>"+tblSalesReport.getValueAt(c, 5).toString()+"</p></td><td><p>"+tblSalesReport.getValueAt(c, 6).toString()+"</p></td></tr>\n";
            }  
            else
            {
                itemData = itemData + "<tr><td><p>"+tblSalesReport.getValueAt(c, 0).toString()+"</p></td><td><p>"+tblSalesReport.getValueAt(c, 1).toString()+"</p></td><td><p>"+tblSalesReport.getValueAt(c, 2).toString()+"</p></td><td><p>"+tblSalesReport.getValueAt(c, 3).toString()+"</p></td><td><p>"+tblSalesReport.getValueAt(c, 4).toString()+"</p></td><td><p>"+tblSalesReport.getValueAt(c, 5).toString()+"</p></td><td><p>"+tblSalesReport.getValueAt(c, 6).toString()+"</p></td></tr>\n";
            }
        }
        String reportText = "<html>\n" +
                            "    <head>\n" +
                            "        <style>\n" +
                            "            p{font-family: 'Times New Roman', Times, serif;font-size: 11pt; text-align: left;}\n" +
                            //"            td {border : solid 1pt #000000; border-collapse: collapse;}\n" +
                            "            table{border : solid 1pt #000000; border-collapse: collapse;}\n" +
                            "        </style>\n" +
                            "    </head>\n" +
                            "    <body>\n" +
                            "        <table style=\"width: 100%;\">\n" +
                            "            <tr><td><h1 style=\"font-family: 'Times New Roman', Times, serif; font-size: 18pt; text-align: center;\">Sales Report</h1></td></tr>\n" +
                            "            <tr aria-rowspan=\"3\">\n" +
                            "                <td><p>Multi Engineering Services Lanka Private Limited<br>No.466/7A Thapowanaya Road, Aggona<br>Sri Lanka.<br>Tel : 0112 794 959, 0114 558 559</p></td>\n" +
                            "            </tr>\n" +
                            "            <tr><td><p style=\"text-align: center;\">"+aboutFilter+"<!--report name--></p></td></tr>\n" +
                            "\n" +
                            "            <!--report header details starts here-->\n" +
                            "            <tr>\n" +
                            "                <td>\n" +
                            "                    <table style=\"width: 100%;\">\n" +
                            "                        <tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"> <td><p>Generated By,</p></td> <td><p>"+username+"</p></td> <td><p>Date : </p></td> <td><p>"+df.format(now)+"</p></td> </tr>\n" +
                            "                        "+about+"" +
                            "                    </table>\n" +
                            "                </td>\n" +
                            "            </tr>\n" +
                            "            <tr><td style=\"height: 12pt;\"><p></p></td></tr>\n" +
                            "\n" +
                            "            <!--data table starts here-->\n" +
                            "            <tr>\n" +
                            "                <td>\n" +
                            "                    <table style=\"width: 100%;\">\n" +
                            "                        <tr style=\"border : solid 1pt #000000; border-collapse: collapse;\"><td ><p>Invoice No</p></td><td ><p>Date</p></td><td><p>Client Type</p></td><td><p>Client Name</p></td><td><p>Total Sale<br>(LKR)</p></td><td><p>Total Returns<br>(LKR)</p></td><td><p>Net Sale<br>(LKR)</p></td></tr>\n" +
                            "                        <!--item data comes here!-->\n" +
                            "                       "+itemData+" " +
                            "\n" +
                            "                        <!--finishes here-->\n" +
                            "                        <tr><td colspan=\"4\"><p style=\"text-align: right;\">Total : </p></td><td><p>"+decf.format(totSale)+"</p></td><td><p>"+decf.format(totReturn)+"</p></td><td><p>"+decf.format(netSale)+"</p></td></tr>\n" +
                            "                    </table>\n" +
                            "                </td>\n" +
                            "            </tr>\n" +
                            "\n" +
                            "            <tr><td><br><p style=\"text-align: right;\">Certified by,<br><br>-----------------------</p><br></tr></td>\n" +
                            "        </table>\n" +
                            "        \n" +
                            "    </body>\n" +
                            "\n" +
                            "</html>";
        
        JTextPane jtp = new JTextPane();
        jtp.setContentType("text/html");
        jtp.setText(reportText);
        try {
            this.setAlwaysOnTop(false);
            jtp.print();
            
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(this, "Unable to Print Report Try Again","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DynamicSalesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DynamicSalesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DynamicSalesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DynamicSalesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DynamicSalesReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SalesReportClose;
    private javax.swing.JButton btnSalesReportPrint;
    private javax.swing.JButton btnSalesReportSearchByClear;
    private javax.swing.JButton btnSalesReportSearchBySearch;
    private javax.swing.JButton btnSalesReportSearchByViewAll;
    private javax.swing.JComboBox<String> cmbSalesReportSearchBy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private view.PanelBorder panelBorder;
    private javax.swing.JTable tblSalesReport;
    private com.toedter.calendar.JDateChooser txtSalesReportFromDate;
    private javax.swing.JTextField txtSalesReportSearchBy;
    private com.toedter.calendar.JDateChooser txtSalesReportToDate;
    // End of variables declaration//GEN-END:variables
}
