/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Database;
import controller.EmailGateway;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import static java.util.Objects.isNull;
import javax.swing.JPanel;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import jdk.nashorn.internal.runtime.JSType;
import static jdk.nashorn.internal.runtime.regexp.joni.Syntax.Java;
import model.User;

/**
 *
 * @author malith
 */
public class ForgetPassword extends javax.swing.JFrame {

    /**
     * Creates new form ForgetPasswordView
     */
    public ForgetPassword() {
        initComponents();
        setBackground(new Color (0,0,0,0)); 
    }

    private boolean IsNumeric(String text) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    
    
       class PanelBorder extends JPanel{
    
    protected void paintComponent(Graphics grphcs) {
        Graphics2D g2 = (Graphics2D) grphcs;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2.setColor(getBackground());
        g2.fillRoundRect(0, 0, getWidth(), getHeight(), 15, 15);
        super.paintComponent(grphcs);
    }
 }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new PanelBorder();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtForgetPasswordTelephone = new javax.swing.JTextField();
        txtForgetPasswordUsername = new javax.swing.JTextField();
        txtForgetPasswordEmail = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnResetPasswordCancel = new javax.swing.JButton();
        btnResetPasswordReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setOpaque(false);

        jLabel2.setText("Enter your email");

        jLabel3.setText("Enter user username");

        jLabel4.setText("Enter your telephone");

        txtForgetPasswordTelephone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtForgetPasswordTelephoneKeyReleased(evt);
            }
        });

        txtForgetPasswordUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtForgetPasswordUsernameKeyReleased(evt);
            }
        });

        txtForgetPasswordEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtForgetPasswordEmailKeyReleased(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Forget Password");
        jLabel1.setOpaque(true);

        btnResetPasswordCancel.setBackground(new java.awt.Color(204, 0, 0));
        btnResetPasswordCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnResetPasswordCancel.setText("Cancel");
        btnResetPasswordCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetPasswordCancelMouseClicked(evt);
            }
        });
        btnResetPasswordCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetPasswordCancelActionPerformed(evt);
            }
        });

        btnResetPasswordReset.setBackground(new java.awt.Color(0, 102, 102));
        btnResetPasswordReset.setForeground(new java.awt.Color(255, 255, 255));
        btnResetPasswordReset.setText("Reset");
        btnResetPasswordReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetPasswordResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 27, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtForgetPasswordEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtForgetPasswordUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                                .addComponent(txtForgetPasswordTelephone)))
                        .addGap(31, 31, 31))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnResetPasswordCancel)
                .addGap(31, 31, 31)
                .addComponent(btnResetPasswordReset)
                .addGap(49, 49, 49))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtForgetPasswordEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtForgetPasswordUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtForgetPasswordTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnResetPasswordCancel)
                    .addComponent(btnResetPasswordReset))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetPasswordCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetPasswordCancelMouseClicked
        this.dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_btnResetPasswordCancelMouseClicked

    private void txtForgetPasswordEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtForgetPasswordEmailKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtForgetPasswordEmailKeyReleased

    private void txtForgetPasswordUsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtForgetPasswordUsernameKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtForgetPasswordUsernameKeyReleased

    private void txtForgetPasswordTelephoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtForgetPasswordTelephoneKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtForgetPasswordTelephoneKeyReleased

    private void btnResetPasswordResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetPasswordResetActionPerformed
        // TODO add your handling code here:
        Pattern emailRegex = Pattern.compile("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$");
        Matcher emailMatcher = emailRegex.matcher(txtForgetPasswordEmail.getText());
        Pattern telephoneRegex = Pattern.compile("^[0-9]*$");
        Matcher telephoneMatacher = telephoneRegex.matcher(txtForgetPasswordTelephone.getText());
        
        if((txtForgetPasswordEmail.getText().equals("")) || (txtForgetPasswordUsername.getText().equals("")) || (txtForgetPasswordTelephone.getText().equals(""))){
            JOptionPane.showMessageDialog(null,"You must fill all fields!","Incomplete",JOptionPane.WARNING_MESSAGE);
        }
        else if(emailMatcher.matches()==false)
        {
            JOptionPane.showMessageDialog(this, "Email Patten in incorrect","Wrong Email",JOptionPane.WARNING_MESSAGE);
        }
        else if(telephoneMatacher.matches()==false)
        {
            JOptionPane.showMessageDialog(this, "Telephone Number Cannot Have Letter or Symbols","Wrong Telephone",JOptionPane.WARNING_MESSAGE);
        }
        else if(txtForgetPasswordTelephone.getText().length()!=10)
        {
            JOptionPane.showMessageDialog(this, "Telephone Number must have 10 characters","Wrong Telephone",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Database db = new Database();
            if(db.credential_check("select * from tb_employee where Email = '"+txtForgetPasswordEmail.getText()+"' and username = '"+txtForgetPasswordUsername.getText()+"' and Telephone = "+txtForgetPasswordTelephone.getText()+"") ==1)
            {
                int randomNumber = (int)(Math.random()*(1000000-100000+1)+100000);
                if(JOptionPane.showConfirmDialog(this, "Are you sure to send verification code to this Email : "+txtForgetPasswordEmail.getText()+" Now?","Check email in use",JOptionPane.YES_NO_OPTION)==0)
                {
                    String content="<h1><b>MULTI ENGINEERING SERVICES LANKA PRIVATE LIMITED</b></h1>"
                                    + "<h2><font style='color:#791803;'>Email Authentication</font></h2>"
                                    + "<p>To verify this email : "+txtForgetPasswordEmail.getText()+" use this verification code<br><br>"
                                    + "Verification Code : <b><u>"+randomNumber+"</u></b><br><br>"
                                    + "<br>"
                                    + "With regards<br>"
                                    + "<br>"
                                    + "MULTI ENGINEERING SERVICES LANKA PRIVATE LIMITED<br>"
                                    + "Maintanance Services and Civil Constructors<br>"
                                    + "No.466/7A Thapowanaya Road,Aggona.<br>"
                                    + "Sri Lanka<br>"
                                    + "Tel : 0112 794 959, 0114 558 559"
                                    + "</p>"
                                    +"<hr>"
                                    + "<p><font style='color:blue; size:10px; align:center;'>Software By Fitos</p>";
                    EmailGateway obj = new EmailGateway();
                    String result = obj.sendOnlyMessage(txtForgetPasswordEmail.getText(),"Email Authentication",content);

                    if(result.equals("done"))
                    {
                        String vCode=null;
                                do{
                                    JPanel panel = new JPanel();
                                    JLabel label = new JLabel("Enter Verification Code Here...!");
                                    JPasswordField verifycode = new JPasswordField(10);
                                    panel.add(label);
                                    panel.add(verifycode);
                                    String[] options = new String[]{"OK", "Cancel"};
                                    int option = JOptionPane.showOptionDialog(null, panel, "Verify Email",
                                                    JOptionPane.NO_OPTION, JOptionPane.QUESTION_MESSAGE,
                                                    null, options, options[1]);

                                    vCode = new String(verifycode.getPassword());

                                    if(option==0)
                                    {
                                        if(vCode.equals(""+randomNumber))
                                        {
                                            int x = 0;
                                            JPanel newPwdPanel = new JPanel();
                                            JLabel l1 = new JLabel("Enter New Password");
                                            JLabel l2 = new JLabel("Confirm New Password");
                                            JPasswordField newPwd = new JPasswordField(15);
                                            JPasswordField conNewPwd = new JPasswordField(15);
                                            newPwdPanel.add(l1);
                                            newPwdPanel.add(newPwd);
                                            newPwdPanel.add(l2);
                                            newPwdPanel.add(conNewPwd);
                                            while(x!=-555)
                                            {                                                
                                                x = JOptionPane.showConfirmDialog(this, newPwdPanel,"Reset Password",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
                                                if(x==0)
                                                {
                                                    String newPassword = String.valueOf(newPwd.getPassword());
                                                    String confirmPassword = String.valueOf(conNewPwd.getPassword());
                                                    if(newPassword.equals(""))
                                                    {
                                                        JOptionPane.showMessageDialog(this, "New Password cannot be blank","Enter New Password",JOptionPane.ERROR_MESSAGE);
                                                        
                                                        JOptionPane.showMessageDialog(this, x+"","Enter New Password",JOptionPane.ERROR_MESSAGE);
                                                    }
                                                    else if(newPassword.length()<8)
                                                    {
                                                        JOptionPane.showMessageDialog(this, "New Password must contain more than 8 characters","Use strong Password",JOptionPane.ERROR_MESSAGE);
                                                        
                                                    }
                                                    else if(confirmPassword.equals(""))
                                                    {
                                                        JOptionPane.showMessageDialog(this, "Confirm Password cannot be blank","Confirm Your Password",JOptionPane.ERROR_MESSAGE);
                                                        
                                                    }
                                                    else if(!newPassword.equals(confirmPassword))
                                                    {
                                                        JOptionPane.showMessageDialog(this, "Passwords are mismatching","Error",JOptionPane.ERROR_MESSAGE);
                                                        
                                                    }
                                                    else
                                                    {
                                                        int p = db.insertUpdateDelete("UPDATE `tb_employee` SET `Password` = '"+newPassword+"' WHERE `tb_employee`.`UserName` = '"+txtForgetPasswordUsername.getText()+"';");
                                                        if(p==1)
                                                        {
                                                            JOptionPane.showMessageDialog(this, "User Password Reset Successfull","Done",JOptionPane.INFORMATION_MESSAGE);
                                                            x=-555;
                                                            new Login().setVisible(true);
                                                            this.dispose();
                                                        } 
                                                    }
                                                }
                                            }
                                            
                                        }
                                        else
                                        {
                                            JOptionPane.showMessageDialog(null, "Wrong Verification Code", "Verification Error",JOptionPane.ERROR_MESSAGE);

                                        }
                                    }
                                    else
                                    {
                                        break;
                                    }
                                }
                                while(!(vCode.equals(""+randomNumber)));
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, result, "Cannot send email",JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "The Details you given are invalied","Cannot Reset Password",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnResetPasswordResetActionPerformed

    private void btnResetPasswordCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetPasswordCancelActionPerformed
        // TODO add your handling code here:
        txtForgetPasswordEmail.setText("");
        txtForgetPasswordUsername.setText("");
        txtForgetPasswordTelephone.setText("");
    }//GEN-LAST:event_btnResetPasswordCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ForgetPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResetPasswordCancel;
    private javax.swing.JButton btnResetPasswordReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtForgetPasswordEmail;
    private javax.swing.JTextField txtForgetPasswordTelephone;
    private javax.swing.JTextField txtForgetPasswordUsername;
    // End of variables declaration//GEN-END:variables
}
