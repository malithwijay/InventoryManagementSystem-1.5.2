/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Database;
import java.awt.print.PrinterException;
import static java.lang.System.exit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;
import model.DealerOrder;
import model.Invoice;
import model.Payment;

/**
 *
 * @author malith
 */
public class SaleDealerOrder extends javax.swing.JFrame {

    
        
    
    
    
    
    
    public SaleDealerOrder() {
        initComponents();
        
        
        PanelBank.setVisible(true);
        PanelCredit.setVisible(false);
        PanelCash.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel166 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        tblSaleDealerInvoiceItem = new javax.swing.JTable();
        jLabel174 = new javax.swing.JLabel();
        AddItemPanel = new javax.swing.JPanel();
        jLabel151 = new javax.swing.JLabel();
        jLabel152 = new javax.swing.JLabel();
        jLabel153 = new javax.swing.JLabel();
        jLabel154 = new javax.swing.JLabel();
        jLabel155 = new javax.swing.JLabel();
        txtSaleDealerOrderItemDiscount = new javax.swing.JTextField();
        txtSaleDealerOrderItemPurchasingQty = new javax.swing.JTextField();
        txtSaleDealerOrderItemRemaning = new javax.swing.JLabel();
        txtSaleDealerOrderItemQtyorderd = new javax.swing.JLabel();
        txtSaleDealerOrderItemNo = new javax.swing.JLabel();
        btnSaleDealerOrderAddtoInvoice = new javax.swing.JLabel();
        jLabel167 = new javax.swing.JLabel();
        jLabel147 = new javax.swing.JLabel();
        txtSaleDealerInvoiceBillTo = new javax.swing.JLabel();
        txtSaleDealerInvoiceNo = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tblSaleDealerOrder = new javax.swing.JTable();
        btnSaleDealerOrderSearchAll = new javax.swing.JButton();
        jLabel149 = new javax.swing.JLabel();
        btnSaleDealerOrderSearch = new javax.swing.JButton();
        cmbSaleDealerOrderSearch = new javax.swing.JComboBox<>();
        jLabel168 = new javax.swing.JLabel();
        NetAmountPanel = new javax.swing.JPanel();
        jLabel159 = new javax.swing.JLabel();
        jLabel160 = new javax.swing.JLabel();
        jLabel161 = new javax.swing.JLabel();
        jLabel171 = new javax.swing.JLabel();
        jLabel170 = new javax.swing.JLabel();
        jLabel172 = new javax.swing.JLabel();
        txtSaleDealerOrderItemPrice = new javax.swing.JLabel();
        txtSaleDealerOrderItemFinalDiscount = new javax.swing.JLabel();
        txtSaleDealerOrderItemDiscountedPrice = new javax.swing.JLabel();
        btnSaleDealerOrderItemAdd = new javax.swing.JButton();
        btnSaleDealerOrderItemClear = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        txtSaleDealerOrderSearch = new javax.swing.JTextField();
        txtSaleDealerInvoiceOrderNo = new javax.swing.JLabel();
        txtSaleDealerInvoiceDate = new javax.swing.JLabel();
        jLabel176 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        tblSaleDealerOrderItem = new javax.swing.JTable();
        btnSaleDealerOrderSearchClear = new javax.swing.JButton();
        PanelPayment = new javax.swing.JPanel();
        PanelCash = new javax.swing.JPanel();
        PanelBank = new javax.swing.JPanel();
        jLabel179 = new javax.swing.JLabel();
        jLabel180 = new javax.swing.JLabel();
        jLabel181 = new javax.swing.JLabel();
        jLabel182 = new javax.swing.JLabel();
        txtSaleDealerPaymentBankName = new javax.swing.JTextField();
        txtSaleDealerPaymentBankAccountNo = new javax.swing.JTextField();
        txtSaleDealerPaymentBankChequeNo = new javax.swing.JTextField();
        txtSaleDealerPaymentBankChequeDate = new javax.swing.JTextField();
        jLabel183 = new javax.swing.JLabel();
        txtSaleDealerPaymentBankRemark = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        PanelCredit = new javax.swing.JPanel();
        jLabel190 = new javax.swing.JLabel();
        txtSaleDealerPaymentCreditPeriod = new javax.swing.JTextField();
        jLabel191 = new javax.swing.JLabel();
        txtSaleDealerPaymentCreditEndDate = new javax.swing.JLabel();
        jLabel178 = new javax.swing.JLabel();
        CmbSaleDealerPaymentType = new javax.swing.JComboBox<>();
        PanelTotal = new javax.swing.JPanel();
        jLabel184 = new javax.swing.JLabel();
        jLabel185 = new javax.swing.JLabel();
        jLabel186 = new javax.swing.JLabel();
        txtSaleDealerOrderFinalAmount = new javax.swing.JLabel();
        txtSaleDealerOrderFinalDiscount = new javax.swing.JLabel();
        txtSaleDealerOrderFinalNetTotal = new javax.swing.JLabel();
        jLabel173 = new javax.swing.JLabel();
        btnSaleDealerSale = new javax.swing.JButton();
        btnSaleDealerCancel = new javax.swing.JButton();
        jLabel162 = new javax.swing.JLabel();
        btnSaleDealerPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setForeground(new java.awt.Color(204, 204, 204));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel166.setBackground(new java.awt.Color(0, 102, 102));
        jLabel166.setForeground(new java.awt.Color(255, 255, 255));
        jLabel166.setText("     Invoice");
        jLabel166.setOpaque(true);

        tblSaleDealerInvoiceItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item No", "Item Name", "Qty", "Price", "Discount", "Amount"
            }
        ));
        tblSaleDealerInvoiceItem.setGridColor(new java.awt.Color(255, 255, 255));
        tblSaleDealerInvoiceItem.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tblSaleDealerInvoiceItem.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblSaleDealerInvoiceItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSaleDealerInvoiceItemMouseClicked(evt);
            }
        });
        jScrollPane14.setViewportView(tblSaleDealerInvoiceItem);

        jLabel174.setBackground(new java.awt.Color(0, 0, 0));
        jLabel174.setForeground(new java.awt.Color(0, 0, 0));
        jLabel174.setText("Invoice No");

        AddItemPanel.setBackground(new java.awt.Color(204, 204, 255));
        AddItemPanel.setForeground(new java.awt.Color(204, 255, 204));

        jLabel151.setBackground(new java.awt.Color(0, 0, 0));
        jLabel151.setForeground(new java.awt.Color(0, 0, 0));
        jLabel151.setText("Item Number    ");

        jLabel152.setBackground(new java.awt.Color(0, 0, 0));
        jLabel152.setForeground(new java.awt.Color(0, 0, 0));
        jLabel152.setText("Qty Ordered   ");

        jLabel153.setBackground(new java.awt.Color(0, 0, 0));
        jLabel153.setForeground(new java.awt.Color(0, 0, 0));
        jLabel153.setText("Remaning     ");

        jLabel154.setBackground(new java.awt.Color(0, 0, 0));
        jLabel154.setForeground(new java.awt.Color(0, 0, 0));
        jLabel154.setText("Purchasing Qty  ");

        jLabel155.setBackground(new java.awt.Color(0, 0, 0));
        jLabel155.setForeground(new java.awt.Color(0, 0, 0));
        jLabel155.setText("Discount (%)       ");

        txtSaleDealerOrderItemDiscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSaleDealerOrderItemDiscountKeyReleased(evt);
            }
        });

        txtSaleDealerOrderItemPurchasingQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSaleDealerOrderItemPurchasingQtyKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSaleDealerOrderItemPurchasingQtyKeyTyped(evt);
            }
        });

        txtSaleDealerOrderItemRemaning.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleDealerOrderItemRemaning.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleDealerOrderItemRemaning.setText(" ------------------");

        txtSaleDealerOrderItemQtyorderd.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleDealerOrderItemQtyorderd.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleDealerOrderItemQtyorderd.setText(" ------------------");

        txtSaleDealerOrderItemNo.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleDealerOrderItemNo.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleDealerOrderItemNo.setText(" ------------------");

        javax.swing.GroupLayout AddItemPanelLayout = new javax.swing.GroupLayout(AddItemPanel);
        AddItemPanel.setLayout(AddItemPanelLayout);
        AddItemPanelLayout.setHorizontalGroup(
            AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddItemPanelLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel155, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel154, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel153, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel152, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel151, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtSaleDealerOrderItemQtyorderd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(txtSaleDealerOrderItemRemaning, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSaleDealerOrderItemDiscount, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSaleDealerOrderItemPurchasingQty, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSaleDealerOrderItemNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );
        AddItemPanelLayout.setVerticalGroup(
            AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddItemPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel151)
                    .addComponent(txtSaleDealerOrderItemNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel152)
                    .addComponent(txtSaleDealerOrderItemQtyorderd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel153)
                    .addComponent(txtSaleDealerOrderItemRemaning))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel154)
                    .addComponent(txtSaleDealerOrderItemPurchasingQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSaleDealerOrderItemDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel155))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        btnSaleDealerOrderAddtoInvoice.setBackground(new java.awt.Color(204, 204, 204));
        btnSaleDealerOrderAddtoInvoice.setForeground(new java.awt.Color(0, 102, 102));
        btnSaleDealerOrderAddtoInvoice.setText("     Click item to add to invoice");

        jLabel167.setBackground(new java.awt.Color(0, 0, 0));
        jLabel167.setForeground(new java.awt.Color(0, 0, 0));
        jLabel167.setText("     Bill To");

        jLabel147.setBackground(new java.awt.Color(0, 0, 0));
        jLabel147.setForeground(new java.awt.Color(0, 0, 0));
        jLabel147.setText("Search Dealer Order");

        txtSaleDealerInvoiceBillTo.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleDealerInvoiceBillTo.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleDealerInvoiceBillTo.setText("-----------------------");

        txtSaleDealerInvoiceNo.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleDealerInvoiceNo.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleDealerInvoiceNo.setText("------------------");

        tblSaleDealerOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Date", "Dealer ID", "Dealer Name"
            }
        ));
        tblSaleDealerOrder.setGridColor(new java.awt.Color(255, 255, 255));
        tblSaleDealerOrder.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tblSaleDealerOrder.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblSaleDealerOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSaleDealerOrderMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(tblSaleDealerOrder);

        btnSaleDealerOrderSearchAll.setBackground(new java.awt.Color(0, 102, 102));
        btnSaleDealerOrderSearchAll.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleDealerOrderSearchAll.setText("All");
        btnSaleDealerOrderSearchAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleDealerOrderSearchAllActionPerformed(evt);
            }
        });

        jLabel149.setBackground(new java.awt.Color(0, 102, 102));
        jLabel149.setForeground(new java.awt.Color(255, 255, 255));
        jLabel149.setText("     Item In Order");
        jLabel149.setOpaque(true);

        btnSaleDealerOrderSearch.setBackground(new java.awt.Color(51, 153, 255));
        btnSaleDealerOrderSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleDealerOrderSearch.setText("Search");
        btnSaleDealerOrderSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleDealerOrderSearchActionPerformed(evt);
            }
        });

        cmbSaleDealerOrderSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dealer Name", "Order ID", "Date" }));

        jLabel168.setBackground(new java.awt.Color(0, 0, 0));
        jLabel168.setForeground(new java.awt.Color(0, 0, 0));
        jLabel168.setText("     Order No");

        NetAmountPanel.setBackground(new java.awt.Color(204, 204, 255));

        jLabel159.setBackground(new java.awt.Color(0, 0, 0));
        jLabel159.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel159.setForeground(new java.awt.Color(0, 0, 0));
        jLabel159.setText("Price");

        jLabel160.setBackground(new java.awt.Color(0, 0, 0));
        jLabel160.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel160.setForeground(new java.awt.Color(0, 0, 0));
        jLabel160.setText("Discount    ");

        jLabel161.setBackground(new java.awt.Color(204, 0, 0));
        jLabel161.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel161.setForeground(new java.awt.Color(204, 0, 0));
        jLabel161.setText("Net Amount");

        jLabel171.setBackground(new java.awt.Color(0, 0, 0));
        jLabel171.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel171.setForeground(new java.awt.Color(0, 0, 0));
        jLabel171.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel171.setText("  :  ");

        jLabel170.setBackground(new java.awt.Color(0, 0, 0));
        jLabel170.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel170.setForeground(new java.awt.Color(0, 0, 0));
        jLabel170.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel170.setText("  :  ");

        jLabel172.setBackground(new java.awt.Color(204, 0, 0));
        jLabel172.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel172.setForeground(new java.awt.Color(204, 0, 0));
        jLabel172.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel172.setText(" :  Rs");

        txtSaleDealerOrderItemPrice.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleDealerOrderItemPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSaleDealerOrderItemPrice.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleDealerOrderItemPrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleDealerOrderItemPrice.setText("0.00");

        txtSaleDealerOrderItemFinalDiscount.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleDealerOrderItemFinalDiscount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSaleDealerOrderItemFinalDiscount.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleDealerOrderItemFinalDiscount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleDealerOrderItemFinalDiscount.setText("0%");

        txtSaleDealerOrderItemDiscountedPrice.setBackground(new java.awt.Color(204, 0, 0));
        txtSaleDealerOrderItemDiscountedPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSaleDealerOrderItemDiscountedPrice.setForeground(new java.awt.Color(204, 0, 0));
        txtSaleDealerOrderItemDiscountedPrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleDealerOrderItemDiscountedPrice.setText("0.00");

        btnSaleDealerOrderItemAdd.setBackground(new java.awt.Color(0, 102, 102));
        btnSaleDealerOrderItemAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleDealerOrderItemAdd.setText("Add");
        btnSaleDealerOrderItemAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleDealerOrderItemAddActionPerformed(evt);
            }
        });

        btnSaleDealerOrderItemClear.setBackground(new java.awt.Color(255, 0, 0));
        btnSaleDealerOrderItemClear.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleDealerOrderItemClear.setText("Clear");
        btnSaleDealerOrderItemClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleDealerOrderItemClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NetAmountPanelLayout = new javax.swing.GroupLayout(NetAmountPanel);
        NetAmountPanel.setLayout(NetAmountPanelLayout);
        NetAmountPanelLayout.setHorizontalGroup(
            NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NetAmountPanelLayout.createSequentialGroup()
                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(NetAmountPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSaleDealerOrderItemAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaleDealerOrderItemClear))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, NetAmountPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(NetAmountPanelLayout.createSequentialGroup()
                                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel160, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                                        .addComponent(jLabel159, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel161, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(NetAmountPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel172, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtSaleDealerOrderItemDiscountedPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(NetAmountPanelLayout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel170, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel171, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                                        .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtSaleDealerOrderItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtSaleDealerOrderItemFinalDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addGap(12, 12, 12))
        );
        NetAmountPanelLayout.setVerticalGroup(
            NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NetAmountPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel159)
                    .addComponent(jLabel171)
                    .addComponent(txtSaleDealerOrderItemPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel160)
                    .addComponent(jLabel170)
                    .addComponent(txtSaleDealerOrderItemFinalDiscount))
                .addGap(12, 12, 12)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel161)
                    .addComponent(jLabel172)
                    .addComponent(txtSaleDealerOrderItemDiscountedPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NetAmountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaleDealerOrderItemAdd)
                    .addComponent(btnSaleDealerOrderItemClear))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        txtSaleDealerOrderSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSaleDealerOrderSearchKeyReleased(evt);
            }
        });

        txtSaleDealerInvoiceOrderNo.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleDealerInvoiceOrderNo.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleDealerInvoiceOrderNo.setText("-----------------------");

        txtSaleDealerInvoiceDate.setBackground(new java.awt.Color(0, 0, 0));
        txtSaleDealerInvoiceDate.setForeground(new java.awt.Color(0, 0, 0));
        txtSaleDealerInvoiceDate.setText("------------------");

        jLabel176.setBackground(new java.awt.Color(0, 0, 0));
        jLabel176.setForeground(new java.awt.Color(0, 0, 0));
        jLabel176.setText("Date");

        tblSaleDealerOrderItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item No", "Item Name", "Qty Ordered", "Remaning", "Discount Margin", "Price"
            }
        ));
        tblSaleDealerOrderItem.setGridColor(new java.awt.Color(255, 255, 255));
        tblSaleDealerOrderItem.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tblSaleDealerOrderItem.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblSaleDealerOrderItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSaleDealerOrderItemMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(tblSaleDealerOrderItem);

        btnSaleDealerOrderSearchClear.setBackground(new java.awt.Color(255, 0, 0));
        btnSaleDealerOrderSearchClear.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleDealerOrderSearchClear.setText("Clear");
        btnSaleDealerOrderSearchClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleDealerOrderSearchClearActionPerformed(evt);
            }
        });

        PanelPayment.setOpaque(false);

        PanelCash.setPreferredSize(new java.awt.Dimension(436, 160));

        javax.swing.GroupLayout PanelCashLayout = new javax.swing.GroupLayout(PanelCash);
        PanelCash.setLayout(PanelCashLayout);
        PanelCashLayout.setHorizontalGroup(
            PanelCashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );
        PanelCashLayout.setVerticalGroup(
            PanelCashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 159, Short.MAX_VALUE)
        );

        PanelBank.setPreferredSize(new java.awt.Dimension(436, 160));

        jLabel179.setText("   Bank Name");

        jLabel180.setText("   Account No");

        jLabel181.setText("   Cheque No");

        jLabel182.setText("   Cheque Date");

        txtSaleDealerPaymentBankAccountNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSaleDealerPaymentBankAccountNoKeyReleased(evt);
            }
        });

        txtSaleDealerPaymentBankChequeNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSaleDealerPaymentBankChequeNoKeyReleased(evt);
            }
        });

        txtSaleDealerPaymentBankChequeDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSaleDealerPaymentBankChequeDateKeyReleased(evt);
            }
        });

        jLabel183.setText("   Remark");

        jLabel4.setForeground(new java.awt.Color(204, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("*");

        jLabel5.setForeground(new java.awt.Color(204, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("*");

        jLabel6.setForeground(new java.awt.Color(204, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("*");

        jLabel7.setForeground(new java.awt.Color(204, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("*");

        javax.swing.GroupLayout PanelBankLayout = new javax.swing.GroupLayout(PanelBank);
        PanelBank.setLayout(PanelBankLayout);
        PanelBankLayout.setHorizontalGroup(
            PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBankLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel179, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel180, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel181, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel182, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(jLabel183, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelBankLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(txtSaleDealerPaymentBankRemark, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelBankLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelBankLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addComponent(txtSaleDealerPaymentBankName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBankLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSaleDealerPaymentBankChequeDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBankLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSaleDealerPaymentBankAccountNo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBankLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSaleDealerPaymentBankChequeNo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        PanelBankLayout.setVerticalGroup(
            PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBankLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel179)
                    .addComponent(txtSaleDealerPaymentBankName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(3, 3, 3)
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel180)
                    .addComponent(txtSaleDealerPaymentBankAccountNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(3, 3, 3)
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel181)
                    .addComponent(txtSaleDealerPaymentBankChequeNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(3, 3, 3)
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel182)
                    .addComponent(txtSaleDealerPaymentBankChequeDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(3, 3, 3)
                .addGroup(PanelBankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSaleDealerPaymentBankRemark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel183))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        PanelCredit.setPreferredSize(new java.awt.Dimension(437, 156));

        jLabel190.setText("   Credit Period");

        txtSaleDealerPaymentCreditPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSaleDealerPaymentCreditPeriodActionPerformed(evt);
            }
        });
        txtSaleDealerPaymentCreditPeriod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSaleDealerPaymentCreditPeriodKeyReleased(evt);
            }
        });

        jLabel191.setText("   End Date");

        txtSaleDealerPaymentCreditEndDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleDealerPaymentCreditEndDate.setText(" ------------------------------------");

        javax.swing.GroupLayout PanelCreditLayout = new javax.swing.GroupLayout(PanelCredit);
        PanelCredit.setLayout(PanelCreditLayout);
        PanelCreditLayout.setHorizontalGroup(
            PanelCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCreditLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(PanelCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel190, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel191, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSaleDealerPaymentCreditPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSaleDealerPaymentCreditEndDate))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        PanelCreditLayout.setVerticalGroup(
            PanelCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCreditLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel190)
                    .addComponent(txtSaleDealerPaymentCreditPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel191)
                    .addComponent(txtSaleDealerPaymentCreditEndDate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelPaymentLayout = new javax.swing.GroupLayout(PanelPayment);
        PanelPayment.setLayout(PanelPaymentLayout);
        PanelPaymentLayout.setHorizontalGroup(
            PanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelCredit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(PanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelPaymentLayout.createSequentialGroup()
                    .addComponent(PanelCash, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(PanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelPaymentLayout.createSequentialGroup()
                    .addComponent(PanelBank, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        PanelPaymentLayout.setVerticalGroup(
            PanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelCredit, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
            .addGroup(PanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelPaymentLayout.createSequentialGroup()
                    .addComponent(PanelCash, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(PanelPaymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PanelPaymentLayout.createSequentialGroup()
                    .addComponent(PanelBank, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jLabel178.setBackground(new java.awt.Color(0, 0, 0));
        jLabel178.setForeground(new java.awt.Color(0, 0, 0));
        jLabel178.setText("               Payment Type");

        CmbSaleDealerPaymentType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cheque", "Credit", "Cash" }));
        CmbSaleDealerPaymentType.setToolTipText("");
        CmbSaleDealerPaymentType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CmbSaleDealerPaymentTypeItemStateChanged(evt);
            }
        });

        PanelTotal.setBackground(new java.awt.Color(204, 204, 255));

        jLabel184.setBackground(new java.awt.Color(0, 0, 0));
        jLabel184.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel184.setForeground(new java.awt.Color(0, 0, 0));
        jLabel184.setText("     Amount");

        jLabel185.setBackground(new java.awt.Color(0, 0, 0));
        jLabel185.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel185.setForeground(new java.awt.Color(0, 0, 0));
        jLabel185.setText("     Discount");

        jLabel186.setBackground(new java.awt.Color(204, 0, 0));
        jLabel186.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel186.setForeground(new java.awt.Color(204, 0, 0));
        jLabel186.setText("   Net Total");

        txtSaleDealerOrderFinalAmount.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtSaleDealerOrderFinalAmount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleDealerOrderFinalAmount.setText(" ------------------");

        txtSaleDealerOrderFinalDiscount.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtSaleDealerOrderFinalDiscount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleDealerOrderFinalDiscount.setText(" ------------------");

        txtSaleDealerOrderFinalNetTotal.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        txtSaleDealerOrderFinalNetTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtSaleDealerOrderFinalNetTotal.setText("--------------");

        jLabel173.setBackground(new java.awt.Color(204, 0, 0));
        jLabel173.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel173.setForeground(new java.awt.Color(204, 0, 0));
        jLabel173.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel173.setText(" :  Rs");

        javax.swing.GroupLayout PanelTotalLayout = new javax.swing.GroupLayout(PanelTotal);
        PanelTotal.setLayout(PanelTotalLayout);
        PanelTotalLayout.setHorizontalGroup(
            PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel184, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel185, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel186, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel173, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSaleDealerOrderFinalAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSaleDealerOrderFinalDiscount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSaleDealerOrderFinalNetTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );
        PanelTotalLayout.setVerticalGroup(
            PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTotalLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel184)
                    .addComponent(txtSaleDealerOrderFinalAmount))
                .addGap(11, 11, 11)
                .addGroup(PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel185)
                    .addComponent(txtSaleDealerOrderFinalDiscount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel186)
                        .addComponent(jLabel173))
                    .addComponent(txtSaleDealerOrderFinalNetTotal))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        btnSaleDealerSale.setBackground(new java.awt.Color(0, 102, 102));
        btnSaleDealerSale.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleDealerSale.setText("Sale");
        btnSaleDealerSale.setFocusable(false);
        btnSaleDealerSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleDealerSaleActionPerformed(evt);
            }
        });

        btnSaleDealerCancel.setBackground(new java.awt.Color(255, 0, 0));
        btnSaleDealerCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleDealerCancel.setText("Reset");
        btnSaleDealerCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleDealerCancelActionPerformed(evt);
            }
        });

        jLabel162.setBackground(new java.awt.Color(0, 102, 102));
        jLabel162.setForeground(new java.awt.Color(255, 255, 255));
        jLabel162.setText("     Dealer Order");
        jLabel162.setOpaque(true);

        btnSaleDealerPrint.setBackground(new java.awt.Color(51, 51, 255));
        btnSaleDealerPrint.setForeground(new java.awt.Color(255, 255, 255));
        btnSaleDealerPrint.setText("Print");
        btnSaleDealerPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleDealerPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel162, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(AddItemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NetAmountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane12)
                    .addComponent(jScrollPane13)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel147)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSaleDealerOrderSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSaleDealerOrderSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSaleDealerOrderSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSaleDealerOrderSearchClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSaleDealerOrderSearchAll, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSaleDealerOrderAddtoInvoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel149, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel167, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel168, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSaleDealerInvoiceBillTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSaleDealerInvoiceOrderNo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel174, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel176, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSaleDealerInvoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSaleDealerInvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PanelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSaleDealerSale, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSaleDealerCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSaleDealerPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(PanelPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel178, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(CmbSaleDealerPaymentType, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel166, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel166, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel162, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel147)
                            .addComponent(cmbSaleDealerOrderSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSaleDealerOrderSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSaleDealerOrderSearch)
                            .addComponent(btnSaleDealerOrderSearchClear)
                            .addComponent(btnSaleDealerOrderSearchAll)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel167)
                            .addComponent(txtSaleDealerInvoiceBillTo)
                            .addComponent(jLabel174)
                            .addComponent(txtSaleDealerInvoiceNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel168)
                            .addComponent(txtSaleDealerInvoiceOrderNo)
                            .addComponent(jLabel176)
                            .addComponent(txtSaleDealerInvoiceDate))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel149, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CmbSaleDealerPaymentType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel178)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PanelPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSaleDealerSale, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSaleDealerCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSaleDealerPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PanelTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaleDealerOrderAddtoInvoice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AddItemPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NetAmountPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSaleDealerPaymentCreditPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSaleDealerPaymentCreditPeriodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSaleDealerPaymentCreditPeriodActionPerformed

    private void CmbSaleDealerPaymentTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CmbSaleDealerPaymentTypeItemStateChanged
        if(CmbSaleDealerPaymentType.getSelectedIndex()==0)      {
            PanelBank.setVisible(true);
            PanelCredit.setVisible(false);
            PanelCash.setVisible(false);
        }
        if(CmbSaleDealerPaymentType.getSelectedIndex()==1)      {
            PanelBank.setVisible(false);
            PanelCredit.setVisible(true);
            PanelCash.setVisible(false);
        }
        if(CmbSaleDealerPaymentType.getSelectedIndex()==2)      {
            PanelBank.setVisible(false);
            PanelCredit.setVisible(false);
            PanelCash.setVisible(true);
        }
    }//GEN-LAST:event_CmbSaleDealerPaymentTypeItemStateChanged

    private void btnSaleDealerOrderSearchAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleDealerOrderSearchAllActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel)tblSaleDealerOrder.getModel();
        tmodel.setRowCount(0);
        DealerOrder o = new DealerOrder();
        ResultSet rs = o.viewDOrder("Status","Pending");
        if(rs!=null)
        {
            try {
                while(rs.next())
                {
                    String oid = String.valueOf(rs.getInt("DOID"));
                    String date = String.valueOf(rs.getDate("Date"));
                    String did = String.valueOf(rs.getInt("DID"));
                    String dName = rs.getString("DName");
                    
                    String tbData[] = {oid,date,did,dName};
                    tmodel.addRow(tbData);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Dealer Order Details Cannot Loaded Now Try Again", "Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSaleDealerOrderSearchAllActionPerformed

    private void btnSaleDealerOrderSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleDealerOrderSearchActionPerformed
        // TODO add your handling code here:
        if(txtSaleDealerOrderSearch.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter some data to search dealer's data!", "Empty!",JOptionPane.WARNING_MESSAGE);
        }else{
            String filter = null;
            if(cmbSaleDealerOrderSearch.getSelectedIndex()==0)
            {
                filter="DName";
            }
            if(cmbSaleDealerOrderSearch.getSelectedIndex()==1)
            {
                filter="DOID";
            }
            if(cmbSaleDealerOrderSearch.getSelectedIndex()==2)
            {
                filter="Date";
            }
            DefaultTableModel tmodel = (DefaultTableModel)tblSaleDealerOrder.getModel();
            tmodel.setRowCount(0);
            DealerOrder o = new DealerOrder();
            ResultSet rs = o.viewDOrder("status = 'pending' and "+filter,txtSaleDealerOrderSearch.getText());
            if(rs!=null)
            {
                try {
                    while(rs.next())
                    {
                        String oid = String.valueOf(rs.getInt("DOID"));
                        String date = String.valueOf(rs.getDate("Date"));
                        String did = String.valueOf(rs.getInt("DID"));
                        String dName = rs.getString("DName");

                        String tbData[] = {oid,date,did,dName};
                        tmodel.addRow(tbData);
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Dealer Order Details Cannot Loaded Now Try Again", "Error",JOptionPane.ERROR_MESSAGE);
                }
            }
        
        
        }
    }//GEN-LAST:event_btnSaleDealerOrderSearchActionPerformed

    private void btnSaleDealerOrderSearchClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleDealerOrderSearchClearActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel)tblSaleDealerOrder.getModel();
        tmodel.setRowCount(0);
        txtSaleDealerOrderSearch.setText(null);
        cmbSaleDealerOrderSearch.setSelectedIndex(0);
    }//GEN-LAST:event_btnSaleDealerOrderSearchClearActionPerformed

    private double selectedItemPrice = 0.0;
    
    private void tblSaleDealerOrderItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSaleDealerOrderItemMouseClicked
        // TODO add your handling code here:
        txtSaleDealerOrderItemNo.setText(" ------------------");
        txtSaleDealerOrderItemQtyorderd.setText(" ------------------");
        txtSaleDealerOrderItemRemaning.setText(" ------------------");
        txtSaleDealerOrderItemPurchasingQty.setText("");
        txtSaleDealerOrderItemDiscount.setText("");
        txtSaleDealerOrderItemPrice.setText("0.00");
        txtSaleDealerOrderItemFinalDiscount.setText("0.00");
        txtSaleDealerOrderItemDiscountedPrice.setText("0.00");
                
        int row = tblSaleDealerOrderItem.getSelectedRow();
        String ino = tblSaleDealerOrderItem.getValueAt(row, 0).toString();
        String qtyOrdered = tblSaleDealerOrderItem.getValueAt(row, 1).toString();
        String remaning = tblSaleDealerOrderItem.getValueAt(row, 3).toString();
        selectedItemPrice = Double.parseDouble(tblSaleDealerOrderItem.getValueAt(row, 5).toString());
                
        txtSaleDealerOrderItemRemaning.setText(remaning);
        txtSaleDealerOrderItemNo.setText(ino);
        txtSaleDealerOrderItemQtyorderd.setText(qtyOrdered);
        
        
    }//GEN-LAST:event_tblSaleDealerOrderItemMouseClicked

    
    private void tblSaleDealerOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSaleDealerOrderMouseClicked
        // TODO add your handling code here:
        if(tblSaleDealerInvoiceItem.getRowCount()>0)
        {
            int i1 = JOptionPane.showConfirmDialog(this, "Are You Sure to Reset Dealer Invoice\n\t*This Invoice will Reset","Reset Invoice",JOptionPane.WARNING_MESSAGE,JOptionPane.YES_NO_OPTION);
            if(i1==0)
            {
                DefaultTableModel invTbl = (DefaultTableModel)tblSaleDealerInvoiceItem.getModel();
                invTbl.setRowCount(0);
                txtSaleDealerInvoiceBillTo.setText("-----------------------");
                txtSaleDealerInvoiceOrderNo.setText("-----------------------");
                txtSaleDealerOrderItemNo.setText(" ------------------");
                txtSaleDealerOrderItemQtyorderd.setText(" ------------------");
                txtSaleDealerOrderItemRemaning.setText(" ------------------");
                txtSaleDealerOrderItemPurchasingQty.setText("");
                txtSaleDealerOrderItemDiscount.setText("");
                txtSaleDealerOrderItemPrice.setText("0.00");
                txtSaleDealerOrderItemFinalDiscount.setText("0.00");
                txtSaleDealerOrderItemDiscountedPrice.setText("0.00");
                txtSaleDealerOrderFinalAmount.setText(" ------------------");
                txtSaleDealerOrderFinalDiscount.setText(" ------------------");
                txtSaleDealerOrderFinalNetTotal.setText("--------------");
                txtSaleDealerPaymentBankName.setText("");
                txtSaleDealerPaymentBankAccountNo.setText("");
                txtSaleDealerPaymentBankChequeDate.setText("");
                txtSaleDealerPaymentBankChequeNo.setText("");
                txtSaleDealerPaymentBankRemark.setText("");
                CmbSaleDealerPaymentType.setSelectedIndex(0);
                txtSaleDealerPaymentCreditPeriod.setText("");
                txtSaleDealerPaymentCreditEndDate.setText(" ------------------------------------");
            }
        }
        
        DefaultTableModel tmodel = (DefaultTableModel)tblSaleDealerOrderItem.getModel();
        tmodel.setRowCount(0);
        
        int row = tblSaleDealerOrder.getSelectedRow();
        String orderID = tblSaleDealerOrder.getValueAt(row, 0).toString();
        DealerOrder o = new DealerOrder();
        
        
        Database db = new Database();
        ResultSet rs = db.selectData("SELECT * FROM tb_itemindealerorder,tb_item WHERE tb_itemindealerorder.INO = tb_item.INO AND DOID = '"+orderID+"'");
        if(rs !=null)
        {
            try {
                while(rs.next())
                {
                    String ino = String.valueOf(rs.getInt("INO"));
                    String iname = rs.getString("IName");
                    String qty = String.valueOf(rs.getInt("QtyOrdered"));
                    String remaning = String.valueOf(rs.getInt("QtyInHand"));
                    String discount = String.valueOf(rs.getDouble("DiscountMargine"));
                    String price = String.valueOf(rs.getDouble("Price"));
                    String tbData[] = {ino,iname,qty,remaning,discount,price};
                    tmodel.addRow(tbData);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Dealer Order Details Not Loaded Successfully Try to Reload","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "No Item Data Found","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        ////////Setting up dealer details in invoice
        
        int itemInvoiceRowCount = tblSaleDealerInvoiceItem.getRowCount();
        String dealerName = tblSaleDealerOrder.getValueAt(row, 3).toString();
        String dealerID = tblSaleDealerOrder.getValueAt(row, 2).toString();
        if(itemInvoiceRowCount==0)
        {
            txtSaleDealerInvoiceBillTo.setText(""+dealerName+"-"+dealerID);
            txtSaleDealerInvoiceOrderNo.setText(orderID);
        }
        else
        {
            String checkDealerID[] = (txtSaleDealerInvoiceBillTo.getText()).split("-");
            if(!checkDealerID[1].equals(dealerID))
            {
                /*int i = JOptionPane.showConfirmDialog(this, "Are You Sure to Reset Dealer Invoice\n\t*This Invoice will Reset","Reset Invoice",JOptionPane.WARNING_MESSAGE,JOptionPane.YES_NO_OPTION);
                if(i==0)
                {
                    DefaultTableModel invTbl = (DefaultTableModel)tblSaleDealerInvoiceItem.getModel();
                    invTbl.setRowCount(0);
                    txtSaleDealerInvoiceBillTo.setText("-----------------------");
                    txtSaleDealerInvoiceOrderNo.setText("-----------------------");
                    txtSaleDealerOrderItemNo.setText(" ------------------");
                    txtSaleDealerOrderItemQtyorderd.setText(" ------------------");
                    txtSaleDealerOrderItemRemaning.setText(" ------------------");
                    txtSaleDealerOrderItemPurchasingQty.setText("");
                    txtSaleDealerOrderItemDiscount.setText("");
                    txtSaleDealerOrderItemPrice.setText("0.00");
                    txtSaleDealerOrderItemFinalDiscount.setText("0.00");
                    txtSaleDealerOrderItemDiscountedPrice.setText("0.00");
                    txtSaleDealerOrderFinalAmount.setText(" ------------------");
                    txtSaleDealerOrderFinalDiscount.setText(" ------------------");
                    txtSaleDealerOrderFinalNetTotal.setText("--------------");
                    txtSaleDealerPaymentBankName.setText("");
                    txtSaleDealerPaymentBankAccountNo.setText("");
                    txtSaleDealerPaymentBankChequeDate.setText("");
                    txtSaleDealerPaymentBankChequeNo.setText("");
                    txtSaleDealerPaymentBankRemark.setText("");
                    CmbSaleDealerPaymentType.setSelectedIndex(0);
                    txtSaleDealerPaymentCreditPeriod.setText("");
                    txtSaleDealerPaymentCreditEndDate.setText(" ------------------------------------");
                }*/
            }
            else
            {
                
            }
        }
    }//GEN-LAST:event_tblSaleDealerOrderMouseClicked

    private void txtSaleDealerOrderItemPurchasingQtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaleDealerOrderItemPurchasingQtyKeyTyped
        // TODO add your handling code here:
        /*int pQty=0;
        double discount=0.0;
        txtSaleDealerOrderItemPrice.setText("");
        txtSaleDealerOrderItemDiscountedPrice.setText("");
        txtSaleDealerOrderItemFinalDiscount.setText("");
        
        if(!(txtSaleDealerOrderItemPurchasingQty.getText()).equals(""))
        {
            pQty = Integer.parseInt(txtSaleDealerOrderItemPurchasingQty.getText());
        }
        if(!(txtSaleDealerOrderItemDiscount.getText()).equals(""))
        {
            discount = Double.parseDouble(txtSaleDealerOrderItemDiscount.getText());
        }
        double amount = selectedItemPrice*pQty;
        double discountDis = amount*discount/100;
        double netamount = amount-discountDis;
        DecimalFormat df = new DecimalFormat("0.00");
        
        txtSaleDealerOrderItemPrice.setText(df.format(amount));
        txtSaleDealerOrderItemFinalDiscount.setText(df.format(discountDis));
        txtSaleDealerOrderItemDiscountedPrice.setText(df.format(netamount));*/
    }//GEN-LAST:event_txtSaleDealerOrderItemPurchasingQtyKeyTyped

    private void txtSaleDealerOrderItemPurchasingQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaleDealerOrderItemPurchasingQtyKeyReleased
        // TODO add your handling code here:
        Pattern qty = Pattern.compile("^[0-9]*$");
        Matcher m = qty.matcher(txtSaleDealerOrderItemPurchasingQty.getText());
        
        if(!m.find()){
            JOptionPane.showMessageDialog(this, "You must entered numbers only!","Error",JOptionPane.ERROR_MESSAGE);
            btnSaleDealerOrderItemAdd.setEnabled(false);
            txtSaleDealerOrderItemPurchasingQty.setText("");
        }
        else
        {
            if(!txtSaleDealerOrderItemRemaning.getText().equals(" ------------------") && m.matches()==true && !txtSaleDealerOrderItemPurchasingQty.getText().equals(""))
            {
                
                if(Integer.parseInt(txtSaleDealerOrderItemRemaning.getText())<Integer.parseInt(txtSaleDealerOrderItemPurchasingQty.getText()))
                {
                    JOptionPane.showMessageDialog(this, "No Enough Quantity to sell","Warning",JOptionPane.WARNING_MESSAGE);
                    txtSaleDealerOrderItemPurchasingQty.setText("");
                }
            }
            
            int pQty=0;
            double discount=0.0;
            txtSaleDealerOrderItemPrice.setText("");
            txtSaleDealerOrderItemDiscountedPrice.setText("");
            txtSaleDealerOrderItemFinalDiscount.setText("");

            if(!(txtSaleDealerOrderItemPurchasingQty.getText()).equals(""))
            {
                pQty = Integer.parseInt(txtSaleDealerOrderItemPurchasingQty.getText());
            }
            if(!(txtSaleDealerOrderItemDiscount.getText()).equals(""))
            {
                discount = Double.parseDouble(txtSaleDealerOrderItemDiscount.getText());
            }
            double amount = selectedItemPrice*pQty;
            double discountDis = amount*discount/100;
            double netamount = amount-discountDis;
            DecimalFormat df = new DecimalFormat("0.00");

            txtSaleDealerOrderItemPrice.setText(df.format(amount));
            txtSaleDealerOrderItemFinalDiscount.setText(df.format(discountDis));
            txtSaleDealerOrderItemDiscountedPrice.setText(df.format(netamount));
            
            btnSaleDealerOrderItemAdd.setEnabled(true);
        }
        
    }//GEN-LAST:event_txtSaleDealerOrderItemPurchasingQtyKeyReleased

    private void txtSaleDealerOrderItemDiscountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaleDealerOrderItemDiscountKeyReleased
        // TODO add your handling code here:
        Pattern discountreg = Pattern.compile("[0-9]*['.']?[0-9]*");
        Matcher m = discountreg.matcher(txtSaleDealerOrderItemDiscount.getText());
        
        if(m.matches()==false){
            
            JOptionPane.showMessageDialog(this, "You must enter numbers only!","Error",JOptionPane.ERROR_MESSAGE);
            btnSaleDealerOrderItemAdd.setEnabled(false);
            txtSaleDealerOrderItemDiscount.setText("");
        }
        else
        {
            if(!txtSaleDealerOrderItemDiscount.getText().isEmpty() && m.matches()==true)
            {
                if(Double.parseDouble(tblSaleDealerOrderItem.getValueAt(tblSaleDealerOrderItem.getSelectedRow(), 4).toString())<Double.parseDouble(txtSaleDealerOrderItemDiscount.getText()))
                {
                    JOptionPane.showMessageDialog(this, "Discount Cannot exceed Discount Margine","Error",JOptionPane.ERROR_MESSAGE);
                    txtSaleDealerOrderItemDiscount.setText("");
                }
            }
            int pQty=0;
            double discount=0.0;
            txtSaleDealerOrderItemPrice.setText("");
            txtSaleDealerOrderItemDiscountedPrice.setText("");
            txtSaleDealerOrderItemFinalDiscount.setText("");

            if(!(txtSaleDealerOrderItemPurchasingQty.getText()).equals(""))
            {
                pQty = Integer.parseInt(txtSaleDealerOrderItemPurchasingQty.getText());
            }
            if(!(txtSaleDealerOrderItemDiscount.getText()).equals(""))
            {
                discount = Double.parseDouble(txtSaleDealerOrderItemDiscount.getText());
            }
            double amount = selectedItemPrice*pQty;
            double discountDis = amount*discount/100;
            double netamount = amount-discountDis;
            DecimalFormat df = new DecimalFormat("0.00");

            txtSaleDealerOrderItemPrice.setText(df.format(amount));
            txtSaleDealerOrderItemFinalDiscount.setText(df.format(discountDis));
            txtSaleDealerOrderItemDiscountedPrice.setText(df.format(netamount));
            btnSaleDealerOrderItemAdd.setEnabled(true);
        }
    }//GEN-LAST:event_txtSaleDealerOrderItemDiscountKeyReleased

    private void btnSaleDealerOrderItemAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleDealerOrderItemAddActionPerformed
        // TODO add your handling code here:
        if(txtSaleDealerOrderItemNo.getText().equals(" ------------------"))
        {
            JOptionPane.showMessageDialog(this, "Select Item to Add to bill","No Item Selected",JOptionPane.WARNING_MESSAGE);
        }
        else if(txtSaleDealerOrderItemPurchasingQty.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Enter Purchasing quantity to add item","Purchasing Quantity is Empty",JOptionPane.WARNING_MESSAGE);
        }
        else if(txtSaleDealerOrderItemDiscount.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Enter Discount Margine to Add item","Discount Margine is Empty",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            DecimalFormat df = new DecimalFormat("0.00");
            int row = tblSaleDealerOrderItem.getSelectedRow();
            String ino = tblSaleDealerOrderItem.getValueAt(row, 0).toString();
            String iname = tblSaleDealerOrderItem.getValueAt(row, 1).toString();
            String pQty = txtSaleDealerOrderItemPurchasingQty.getText();
            String price = df.format(selectedItemPrice);
            String discount = txtSaleDealerOrderItemFinalDiscount.getText();
            String netamount = txtSaleDealerOrderItemDiscountedPrice.getText();

            String tbdata[] = {ino,iname,pQty,price,discount,netamount};
            DefaultTableModel tmodel = (DefaultTableModel)tblSaleDealerInvoiceItem.getModel();
            tmodel.addRow(tbdata);

            double itemPrice = Double.parseDouble(txtSaleDealerOrderItemPrice.getText());
            double itemDiscount = Double.parseDouble(txtSaleDealerOrderItemFinalDiscount.getText());
            double itemNet = Double.parseDouble(txtSaleDealerOrderItemDiscountedPrice.getText());
            double invPrice = 0.0;
            double invDiscount = 0.0;
            double invNet = 0.0;

            if(!(txtSaleDealerOrderFinalAmount.getText().equals(" ------------------")))
            {
                invPrice = Double.parseDouble(txtSaleDealerOrderFinalAmount.getText());
            }
            if(!(txtSaleDealerOrderFinalDiscount.getText().equals(" ------------------")))
            {
                invDiscount = Double.parseDouble(txtSaleDealerOrderFinalDiscount.getText());
            }
            if(!(txtSaleDealerOrderFinalNetTotal.getText().equals("--------------")))
            {
                invNet = Double.parseDouble(txtSaleDealerOrderFinalNetTotal.getText());
            }

            invPrice = invPrice + itemPrice;
            invDiscount = invDiscount + itemDiscount;
            invNet = invNet + itemNet;


            txtSaleDealerOrderFinalAmount.setText(df.format(invPrice));
            txtSaleDealerOrderFinalDiscount.setText(df.format(invDiscount));
            txtSaleDealerOrderFinalNetTotal.setText(df.format(invNet)); 
        }
              
    }//GEN-LAST:event_btnSaleDealerOrderItemAddActionPerformed

    private void btnSaleDealerOrderItemClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleDealerOrderItemClearActionPerformed
        // TODO add your handling code here:
        txtSaleDealerOrderItemNo.setText(" ------------------");
        txtSaleDealerOrderItemQtyorderd.setText(" ------------------");
        txtSaleDealerOrderItemRemaning.setText(" ------------------");
        txtSaleDealerOrderItemPurchasingQty.setText("");
        txtSaleDealerOrderItemDiscount.setText("");
        txtSaleDealerOrderItemPrice.setText("0.00");
        txtSaleDealerOrderItemFinalDiscount.setText("0.00");
        txtSaleDealerOrderItemDiscountedPrice.setText("0.00");
    }//GEN-LAST:event_btnSaleDealerOrderItemClearActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowActivated

    private void tblSaleDealerInvoiceItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSaleDealerInvoiceItemMouseClicked
        // TODO add your handling code here:
        int row = tblSaleDealerInvoiceItem.getSelectedRow();
        if(tblSaleDealerInvoiceItem.getRowCount()>0)
        {
            int i = JOptionPane.showConfirmDialog(this, "Are you sure to remove this item from Invoice","Warning",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
            if(i==0)
            {
                int selectedQuantity = Integer.parseInt(tblSaleDealerInvoiceItem.getValueAt(row, 2).toString());
                double selecttedPrice = Double.parseDouble(tblSaleDealerInvoiceItem.getValueAt(row, 3).toString());
                double selectedDiscount = Double.parseDouble(tblSaleDealerInvoiceItem.getValueAt(row, 4).toString());
                double selectedNetAmount = Double.parseDouble(tblSaleDealerInvoiceItem.getValueAt(row, 5).toString());
                double billPrice = Double.parseDouble(txtSaleDealerOrderFinalAmount.getText());
                double billDiscount = Double.parseDouble(txtSaleDealerOrderFinalDiscount.getText());
                double billNetAmount = Double.parseDouble(txtSaleDealerOrderFinalNetTotal.getText());
                billPrice = billPrice - (selecttedPrice*selectedQuantity);
                billDiscount = billDiscount - selectedDiscount;
                billNetAmount = billNetAmount - selectedNetAmount;
                DecimalFormat df = new DecimalFormat("0.00");
                txtSaleDealerOrderFinalNetTotal.setText(df.format(billNetAmount));
                txtSaleDealerOrderFinalDiscount.setText(df.format(billDiscount));
                txtSaleDealerOrderFinalAmount.setText(df.format(billPrice));
                
                DefaultTableModel tmodel = (DefaultTableModel)tblSaleDealerInvoiceItem.getModel();
                tmodel.removeRow(row);
            }
        }
        
    }//GEN-LAST:event_tblSaleDealerInvoiceItemMouseClicked

    private void btnSaleDealerCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleDealerCancelActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(this, "Are you sure to reset bill details? The Invoice no longer available","Warning",JOptionPane.WARNING_MESSAGE,JOptionPane.YES_NO_OPTION);
        if(i==0)
        {
            this.setVisible(false);
            dispose();
            new SaleDealerOrder().setVisible(true);
        }
    }//GEN-LAST:event_btnSaleDealerCancelActionPerformed

    private void txtSaleDealerPaymentCreditPeriodKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaleDealerPaymentCreditPeriodKeyReleased
        // TODO add your handling code here:
        Pattern creditPeriod = Pattern.compile("^[0-9]*$");
        Matcher creditPeriodMatcher = creditPeriod.matcher(txtSaleDealerPaymentCreditPeriod.getText());
        
        if(creditPeriodMatcher.matches()==false)
        {
            JOptionPane.showMessageDialog(this, "Credit Period Cannot have Letter or Sysmbols","Warning",JOptionPane.WARNING_MESSAGE);
            txtSaleDealerPaymentCreditPeriod.setText("");
        }
        else
        {
            if(txtSaleDealerPaymentCreditPeriod.getText().equals(""))
            {
                txtSaleDealerPaymentCreditEndDate.setText(" ------------------------------------");
            }
            else
            {
                int days = Integer.parseInt(txtSaleDealerPaymentCreditPeriod.getText());
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
                Calendar c = Calendar.getInstance();
                c.setTime(new Date()); // Using today's date
                c.add(Calendar.DATE, days); // Adding 5 days
                String output = sdf.format(c.getTime());
                txtSaleDealerPaymentCreditEndDate.setText(output);
            }
        }
    }//GEN-LAST:event_txtSaleDealerPaymentCreditPeriodKeyReleased

    private void btnSaleDealerSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleDealerSaleActionPerformed
        // TODO add your handling code here:
        Pattern dateRegex = Pattern.compile("^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$");
        Matcher dateR = dateRegex.matcher(txtSaleDealerPaymentBankChequeDate.getText());
        Pattern chequeNo = Pattern.compile("^[0-9]*$");
        Matcher chequeNumberMatacher = chequeNo.matcher(txtSaleDealerPaymentBankChequeNo.getText());
        Pattern accNo = Pattern.compile("^[0-9]*$");
        Matcher accNumberMatcher = accNo.matcher(txtSaleDealerPaymentBankAccountNo.getText());
        Pattern creditPattern = Pattern.compile("^[0-9]*$");
        Matcher creditMatcher = creditPattern.matcher(txtSaleDealerPaymentCreditPeriod.getText());
        
        
        if(txtSaleDealerInvoiceBillTo.getText().equals("-----------------------"))
        {
            JOptionPane.showMessageDialog(this, "Selet Dealer to Bill","No Dealer Selected",JOptionPane.WARNING_MESSAGE);
        }
        else if(txtSaleDealerInvoiceOrderNo.getText().equals("-----------------------"))
        {
            JOptionPane.showMessageDialog(this, "Selet Dealer Order to Bill","No Dealer Selected",JOptionPane.WARNING_MESSAGE);
        }
        else if(tblSaleDealerInvoiceItem.getRowCount()<=0)
        {
            JOptionPane.showMessageDialog(this, "No Item In Invoice Cannot Complete Bill","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else if(CmbSaleDealerPaymentType.getSelectedIndex()==0 && txtSaleDealerPaymentBankName.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Bank Name Cannot be Empty","Bank Payment",JOptionPane.WARNING_MESSAGE);           
        }
        else if(CmbSaleDealerPaymentType.getSelectedIndex()==0 && !txtSaleDealerPaymentBankChequeNo.getText().isEmpty() && chequeNumberMatacher.matches()==false)
        {
            JOptionPane.showMessageDialog(this, "Cheque Number Must Contain Only Numbers","Invalied Cheque Number",JOptionPane.WARNING_MESSAGE);
        }
        else if(CmbSaleDealerPaymentType.getSelectedIndex()==0 && !txtSaleDealerPaymentBankChequeNo.getText().isEmpty() && txtSaleDealerPaymentBankChequeDate.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Cheque Date Cannot Be Blank","Enter Cheque Date",JOptionPane.WARNING_MESSAGE);
        }
        else if(CmbSaleDealerPaymentType.getSelectedIndex()==0 && !txtSaleDealerPaymentBankChequeDate.getText().isEmpty() && dateR.matches()==false)
        {
            JOptionPane.showMessageDialog(this, "Check the date format (YYYY-MM-DD)","Error",JOptionPane.ERROR_MESSAGE);              
        }
        else if(CmbSaleDealerPaymentType.getSelectedIndex()==0 && !txtSaleDealerPaymentBankChequeDate.getText().isEmpty() && txtSaleDealerPaymentBankChequeNo.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Check Number Cannot Be Blank","Error",JOptionPane.ERROR_MESSAGE);              
        }
        else if(CmbSaleDealerPaymentType.getSelectedIndex()==0 && !txtSaleDealerPaymentBankAccountNo.getText().isEmpty() && accNumberMatcher.matches()==false)
        {
            JOptionPane.showMessageDialog(this, "Bank Account Number Must Contain Only Numbers","Invalied Account Number",JOptionPane.WARNING_MESSAGE);
        }
        else if(CmbSaleDealerPaymentType.getSelectedIndex()==1 && txtSaleDealerPaymentCreditPeriod.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Enter Credit period","Credit Payment",JOptionPane.WARNING_MESSAGE);
        }
        else if(CmbSaleDealerPaymentType.getSelectedIndex()==1 && txtSaleDealerPaymentCreditEndDate.getText().equals(" ------------------------------------"))
        {
            JOptionPane.showMessageDialog(this, "Enter Credit period","Credit Payment",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Invoice i = new Invoice();
            int c = i.newInvoice(txtSaleDealerOrderFinalAmount.getText(), txtSaleDealerOrderFinalNetTotal.getText(), txtSaleDealerOrderFinalDiscount.getText(), "Dealer", txtSaleDealerInvoiceDate.getText());
            if(c==1)
            {
                for(int c1=0;c1<tblSaleDealerInvoiceItem.getRowCount();c1++)
                {
                    String ino = tblSaleDealerInvoiceItem.getValueAt(c1, 0).toString();
                    String qtyPurchased = tblSaleDealerInvoiceItem.getValueAt(c1, 2).toString();
                    String amount = tblSaleDealerInvoiceItem.getValueAt(c1, 3).toString();
                    String discount = tblSaleDealerInvoiceItem.getValueAt(c1, 4).toString();
                    String netAmount = tblSaleDealerInvoiceItem.getValueAt(c1, 5).toString();
                    i.addItemsInInvoice(ino, txtSaleDealerInvoiceNo.getText(), qtyPurchased, amount, discount, netAmount);

                    int updatingQty = 0;
                    int olditemqty = 0;
                    int purchasingQty = Integer.parseInt(qtyPurchased);
                    Database db = new Database();
                    ResultSet rs = db.selectData("select * from tb_item where INO = '"+ino+"'");
                    try {
                        while(rs.next())
                        {
                            olditemqty = rs.getInt("QtyInHand");
                        }
                    } catch (SQLException ex) {
                        //Logger.getLogger(SaleCustomerOrder.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    updatingQty=olditemqty-purchasingQty;
                    int x = db.insertUpdateDelete("UPDATE `tb_item` SET `Qtyinhand` = '"+updatingQty+"' WHERE `tb_item`.`INO` = '"+ino+"'");
                    if(x!=1)
                    {
                        JOptionPane.showMessageDialog(this, "Item Stock Not Updated Contact Manager","Error",JOptionPane.ERROR_MESSAGE);
                    }
                }
                String paymentType = "";
                if(CmbSaleDealerPaymentType.getSelectedIndex()==0)
                {
                    paymentType="Bank";
                }
                if(CmbSaleDealerPaymentType.getSelectedIndex()==1)
                {
                    paymentType="Credit";
                }
                if(CmbSaleDealerPaymentType.getSelectedIndex()==2)
                {
                    paymentType="Cash";
                }
                Payment p = new Payment();
                int c2 = p.makePayment(txtSaleDealerInvoiceNo.getText(), txtSaleDealerOrderFinalNetTotal.getText(), txtSaleDealerInvoiceDate.getText(), paymentType);
                if(c2>0)
                {
                    int c3=0;
                    if(paymentType.equals("Bank"))
                    {
                        String date = txtSaleDealerPaymentBankChequeDate.getText();
                        if(txtSaleDealerPaymentBankChequeDate.getText().equals(""))
                        {
                            Date now = new Date();
                            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                            date=df.format(now);
                        }
                        c3 = p.makePayment(""+c2, txtSaleDealerPaymentBankName.getText(), txtSaleDealerPaymentBankAccountNo.getText(), txtSaleDealerPaymentBankChequeNo.getText(), date, txtSaleDealerPaymentBankRemark.getText());
                    }
                    if(paymentType.equals("Credit"))
                    {
                        c3 = p.makePayment(""+c2, txtSaleDealerPaymentCreditPeriod.getText());
                    }
                    if(paymentType.equals("Cash"))
                    {
                        c3 = p.makePayment(""+c2);
                    }

                    if(c3==1)
                    {
                        DealerOrder d = new DealerOrder();
                        int c4 = d.updateOrderStatus(txtSaleDealerInvoiceOrderNo.getText(), "Placed", txtSaleDealerInvoiceNo.getText());
                        if(c4==1)
                        {
                            String dealerID[] = txtSaleDealerInvoiceBillTo.getText().split("-");
                            double totSale = 0.0;
                            Database db = new Database();
                            ResultSet rs = db.selectData("select * from tb_dealer where DID = '"+dealerID[1]+"'");
                            try {
                                while(rs.next())
                                {
                                    double tSale = rs.getDouble("totalSale");
                                    if(tSale!=0)
                                    {
                                        double netTot = Double.parseDouble(txtSaleDealerOrderFinalNetTotal.getText());
                                        totSale = netTot+tSale;
                                    }
                                    else
                                    {
                                        double netTot = Double.parseDouble(txtSaleDealerOrderFinalNetTotal.getText());
                                        totSale = netTot;
                                    }
                                }
                            } catch (SQLException ex) {

                            }
                            int c5 = db.insertUpdateDelete("UPDATE `tb_dealer` SET `TotalSale` = '"+totSale+"' WHERE `tb_dealer`.`DID` = "+dealerID[1]+"");
                            if(c5==1)
                            {
                                JOptionPane.showMessageDialog(this, "The Order Palced Successfully\nInvoice will print soon","Done..!",JOptionPane.INFORMATION_MESSAGE);
                                DefaultTableModel tmodel = (DefaultTableModel)tblSaleDealerInvoiceItem.getModel();
                                if(tmodel.getRowCount()==0)
                                {
                                    JOptionPane.showMessageDialog(this, "Cannot Print Empty Invoice","Error",JOptionPane.ERROR_MESSAGE);
                                }
                                else
                                {
                                    printInvoice();
                                }
                            }

                        }
                    }
                }
            }
        }        
    }//GEN-LAST:event_btnSaleDealerSaleActionPerformed

    private void btnSaleDealerPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleDealerPrintActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel)tblSaleDealerInvoiceItem.getModel();
        if(tmodel.getRowCount()==0)
        {
            JOptionPane.showMessageDialog(this, "Cannot Print Empty Invoice","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            printInvoice();
        }
    }//GEN-LAST:event_btnSaleDealerPrintActionPerformed

    private void txtSaleDealerOrderSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaleDealerOrderSearchKeyReleased
        // TODO add your handling code here:
        if(txtSaleDealerOrderSearch.getText()==null){
            btnSaleDealerOrderSearch.setEnabled(false);
        }else{
            btnSaleDealerOrderSearch.setEnabled(true);
        }
        
    }//GEN-LAST:event_txtSaleDealerOrderSearchKeyReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Database db = new Database();
        ResultSet rs = db.selectData("select max(InvoiceNO) as invNo from tb_invoice");
        try {
            while(rs.next())
            {
                int invNo = rs.getInt("invNo");
                if(invNo<=0)
                {
                    invNo=1;
                }
                else
                {
                    invNo = invNo+1;
                }
                txtSaleDealerInvoiceNo.setText(""+invNo);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Invoice Number Not Loaded Correctly Try to reopen this menu","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        Date now = new Date();
        SimpleDateFormat df = new SimpleDateFormat("yyyy/MM/dd");
        txtSaleDealerInvoiceDate.setText(df.format(now));
    }//GEN-LAST:event_formWindowOpened

    private void txtSaleDealerPaymentBankAccountNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaleDealerPaymentBankAccountNoKeyReleased
        // TODO add your handling code here:
        Pattern numberRegex = Pattern.compile("^[0-9]*$");
        Matcher number = numberRegex.matcher(txtSaleDealerPaymentBankAccountNo.getText());
        if(number.matches()==false)
        {
            JOptionPane.showMessageDialog(this, "Account Numebr Cannot have Letter or Symbols","Error",JOptionPane.ERROR_MESSAGE);
            txtSaleDealerPaymentBankAccountNo.setText("");
        }
    }//GEN-LAST:event_txtSaleDealerPaymentBankAccountNoKeyReleased

    private void txtSaleDealerPaymentBankChequeNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaleDealerPaymentBankChequeNoKeyReleased
        // TODO add your handling code here:
        Pattern numberRegex = Pattern.compile("^[0-9]*$");
        Matcher number = numberRegex.matcher(txtSaleDealerPaymentBankChequeNo.getText());
        if(number.matches()==false)
        {
            JOptionPane.showMessageDialog(this, "Cheque Numebr Cannot have Letter or Symbols","Error",JOptionPane.ERROR_MESSAGE);
            txtSaleDealerPaymentBankChequeNo.setText("");
        }
    }//GEN-LAST:event_txtSaleDealerPaymentBankChequeNoKeyReleased

    private void txtSaleDealerPaymentBankChequeDateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaleDealerPaymentBankChequeDateKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtSaleDealerPaymentBankChequeDateKeyReleased

    private void printInvoice()
    {
        String billHeader = "<html>\n" +
                            "    <body>\n" +
                            "        <table>\n" +
                            "            <tr><td style=\"color: #0406FA; font-size: 15px;\">Multi Engineering Services Lanka Private Limited</td><td></td><td></td><td style=\"font-size: 10px; align-content: center; color: #0406FA;\">INVOICE</td></tr>\n" +
                            "            <tr><td>Maintanance Services and Civil Constructions</td><td></td><td>Date : </td><td>"+txtSaleDealerInvoiceDate.getText()+"</td></tr>\n" +
                            "            <tr><td>No.466/7A</td><td></td><td>Invoice No : </td><td>"+txtSaleDealerInvoiceNo.getText()+"<!--Inv No here--></td></tr>\n" +
                            "            <tr><td>Thapowanaya Road</td></tr>\n" +
                            "            <tr><td>Aggona</td></tr>\n" +
                            "            <tr><td>Sri Lanka</td></tr>\n" +
                            "            <tr><td>Tel : 0112 794 959 | 0114 558 559</td></tr>\n" +
                            "        </table>\n" +
                            "        <br>";
        String dealer[] = txtSaleDealerInvoiceBillTo.getText().split("-");
        String dName = null;
        String adNo = null;
        String adL1 = null;
        String adL2 = null;
        String city = null;
        String tele = null;
        
        Database db = new Database();
        ResultSet rs = db.selectData("select * from tb_dealer where DID = '"+dealer[1]+"'");
        try {
            while(rs.next())
            {
                dName = rs.getString("DName");
                adNo = rs.getString("AddressNo");
                adL1 = rs.getString("AddressLine01");
                adL2 = rs.getString("AddressLine02");
                city = rs.getString("City");
                tele = String.valueOf(rs.getInt("Telephone"));
            }
        } catch (SQLException ex) {
            //Logger.getLogger(SaleDealerOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
        String billTo = "<!--Bill To Table Starts here -->\n" +
                        "        <table>\n" +
                        "            <tr><td style=\"background-color: #0406FA; color: #FFFFFF;\" colspan=\"2\">Bill To : </td></tr>\n" +
                        "            <tr><td>Name : </td><td>"+dName+"<!--Name Comes Here--></td></tr>\n" +
                        "            <tr><td>Address : </td><td>"+adNo+", "+adL1+"<!--Address no and line 1 comes here--></td></tr>\n" +
                        "            <tr><td></td><td>"+adL2+"<!--line 2 comes here--></td></tr>\n" +
                        "            <tr><td></td><td>"+city+"<!--city comes here--></td></tr>\n" +
                        "            <tr><td>Telephone : </td><td>"+tele+"<!--telephone comes here--></td></tr>\n" +
                        "        </table>\n" +
                        "        <!--Bill to Table Ends Here -->\n" +
                        "        <br>";
        String items = "";
        
        for(int c=0; c<tblSaleDealerInvoiceItem.getRowCount();c++)
        {
            String itemName = tblSaleDealerInvoiceItem.getValueAt(c, 1).toString();
            String qty = tblSaleDealerInvoiceItem.getValueAt(c, 2).toString();
            String price = tblSaleDealerInvoiceItem.getValueAt(c, 3).toString();
            String discount = tblSaleDealerInvoiceItem.getValueAt(c, 4).toString();
            String amount = tblSaleDealerInvoiceItem.getValueAt(c, 5).toString();
            if(items.equals(""))
            {
                items = "<tr><td>"+itemName+"</td><td>"+qty+"</td><td>"+price+"</td><td>"+discount+"</td><td>"+amount+"</td></tr>";
            }
            else
            {
                items = items + "\n" + "<tr><td>"+itemName+"<!--Item Description--></td><td>"+qty+"<!--item Qty--></td><td>"+price+"<!--item price--></td><td>"+discount+"<!--item discount--></td><td>"+amount+"<!--item amount--></td></tr>";
            }
            //items = items+"\n"+"<tr><td>"+itemName+"<!--Item Description--></td><td>"+qty+"<!--item Qty--></td><td>"+price+"<!--item price--></td><td>"+discount+"<!--item discount--></td><td>"+amount+"<!--item amount--></td></tr>";
        }
        String itemTable ="<!--item table starts here-->\n" +
                            "        <table style=\"border: 2px #0000;\">\n" +
                            "            <tr style=\"background-color: #0406FA; color: #FFFFFF;\"><td>Description</td><td>Quantity</td><td>Price</td><td>Discount</td><td>Amount</td></tr>\n" +
                            "            <!--Fill Items to here -->\n" +
                            "            "+items+"\n" +
                            "            <!--Fill final price details here-->\n" +
                            "            <tr><td colspan=\"3\">Other Comments</td><td>Sub Total : </td><td>"+txtSaleDealerOrderFinalAmount.getText()+"<!--sub total comes here--></td></tr>\n" +
                            "            <tr><td colspan=\"3\">* To Return any Item Make sure to Bring Invoice<td>Discount : </td></td><td>"+txtSaleDealerOrderFinalDiscount.getText()+"<!--discount comes here--></td></tr>\n" +
                            "            <tr><td colspan=\"3\">* Some Items dosen't have warrenties check you item before you buy it</td><td>Total : </td><td>"+txtSaleDealerOrderFinalNetTotal.getText()+"<!--total comes here--></td></tr>\n" +
                            "            <tr><td colspan=\"5\" rowspan=\"3\">Notes : </td></tr>\n" +
                            "            <tr></tr>\n" +
                            "            <tr></tr>\n" +
                            "            <tr></tr>\n" +
                            "        </table>\n" +
                            "        <br>\n" +
                            "        <!--Item table ends here-->";
        String paymentType="";
        if(CmbSaleDealerPaymentType.getSelectedIndex()==0)//bank
        {
            paymentType = "<table>\n" +
                            "            <tr style=\"background-color: #0406FA; color: #ffffff;\"><td>Payment Type</td><Td>Cheque</Td></tr>\n" +
                            "            <tr><td>Bank Name : </td><td>"+txtSaleDealerPaymentBankName.getText()+"<!--Bank Name Comes Here--></td></tr>\n" +
                            "            <tr><td>Account No : </td><td>"+txtSaleDealerPaymentBankAccountNo.getText()+"<!--account no Comes Here--></td></tr>\n" +
                            "            <tr><td>Cheque No : </td><td>"+txtSaleDealerPaymentBankChequeNo.getText()+"<!--Cheque no Comes Here--></td></tr>\n" +
                            "            <tr><td>Cheque Date : </td><td>"+txtSaleDealerPaymentBankChequeDate.getText()+"<!--cheque date Comes Here--></td></tr>\n" +
                            "            <tr><td>Remark : </td><td>"+txtSaleDealerPaymentBankRemark.getText()+"<!--Remark Comes Here--></td></tr>\n" +
                            "        </table>";
        }
        if(CmbSaleDealerPaymentType.getSelectedIndex()==1)//credit
        {
            paymentType="<table>\n" +
                        "            <tr style = \"background-color: #0406FA; color: #FFFFFF;\"><td>Payment type</td><td>Credit</td></tr>\n" +
                        "            <tr><td>Credit Period</td><td>"+txtSaleDealerPaymentCreditPeriod.getText()+"<!--credit period comes here--></td></tr>\n" +
                        "            <tr><td>Pay Before</td><td>"+txtSaleDealerPaymentCreditEndDate.getText()+"<!--credit period comes here--></td></tr>\n"+
                        "        </table>";
        }
        if(CmbSaleDealerPaymentType.getSelectedIndex()==2)//cash
        {
            paymentType="<table>\n" +
                        "            <tr style = \"background-color: #0406FA; color: #FFFFFF;\"><td>Payment type</td><td>Cash</td></tr>\n" +
                        "        </table>";
        }
        
        String end = "<br>\n" +
                        "        <p style=\"align-content: center; font-style: italic;\">If you have any inquiry regarding this Invoice, <br>Please Contact<Br>Multi Engineering Sevices Lanka Private Limited</p>\n" +
                        "    </body>\n" +
                        "</html>";
        
        JTextPane jtp = new JTextPane();
        jtp.setContentType("text/html");
        jtp.setText(billHeader+billTo+itemTable+paymentType+end);
        try {
            jtp.print();
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(this, "Invoice Not Printed","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaleDealerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaleDealerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaleDealerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaleDealerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaleDealerOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddItemPanel;
    private javax.swing.JComboBox<String> CmbSaleDealerPaymentType;
    private javax.swing.JPanel NetAmountPanel;
    private javax.swing.JPanel PanelBank;
    private javax.swing.JPanel PanelCash;
    private javax.swing.JPanel PanelCredit;
    private javax.swing.JPanel PanelPayment;
    private javax.swing.JPanel PanelTotal;
    private javax.swing.JButton btnSaleDealerCancel;
    private javax.swing.JLabel btnSaleDealerOrderAddtoInvoice;
    private javax.swing.JButton btnSaleDealerOrderItemAdd;
    private javax.swing.JButton btnSaleDealerOrderItemClear;
    private javax.swing.JButton btnSaleDealerOrderSearch;
    private javax.swing.JButton btnSaleDealerOrderSearchAll;
    private javax.swing.JButton btnSaleDealerOrderSearchClear;
    private javax.swing.JButton btnSaleDealerPrint;
    private javax.swing.JButton btnSaleDealerSale;
    private javax.swing.JComboBox<String> cmbSaleDealerOrderSearch;
    private javax.swing.JLabel jLabel147;
    private javax.swing.JLabel jLabel149;
    private javax.swing.JLabel jLabel151;
    private javax.swing.JLabel jLabel152;
    private javax.swing.JLabel jLabel153;
    private javax.swing.JLabel jLabel154;
    private javax.swing.JLabel jLabel155;
    private javax.swing.JLabel jLabel159;
    private javax.swing.JLabel jLabel160;
    private javax.swing.JLabel jLabel161;
    private javax.swing.JLabel jLabel162;
    private javax.swing.JLabel jLabel166;
    private javax.swing.JLabel jLabel167;
    private javax.swing.JLabel jLabel168;
    private javax.swing.JLabel jLabel170;
    private javax.swing.JLabel jLabel171;
    private javax.swing.JLabel jLabel172;
    private javax.swing.JLabel jLabel173;
    private javax.swing.JLabel jLabel174;
    private javax.swing.JLabel jLabel176;
    private javax.swing.JLabel jLabel178;
    private javax.swing.JLabel jLabel179;
    private javax.swing.JLabel jLabel180;
    private javax.swing.JLabel jLabel181;
    private javax.swing.JLabel jLabel182;
    private javax.swing.JLabel jLabel183;
    private javax.swing.JLabel jLabel184;
    private javax.swing.JLabel jLabel185;
    private javax.swing.JLabel jLabel186;
    private javax.swing.JLabel jLabel190;
    private javax.swing.JLabel jLabel191;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblSaleDealerInvoiceItem;
    private javax.swing.JTable tblSaleDealerOrder;
    private javax.swing.JTable tblSaleDealerOrderItem;
    private javax.swing.JLabel txtSaleDealerInvoiceBillTo;
    private javax.swing.JLabel txtSaleDealerInvoiceDate;
    private javax.swing.JLabel txtSaleDealerInvoiceNo;
    private javax.swing.JLabel txtSaleDealerInvoiceOrderNo;
    private javax.swing.JLabel txtSaleDealerOrderFinalAmount;
    private javax.swing.JLabel txtSaleDealerOrderFinalDiscount;
    private javax.swing.JLabel txtSaleDealerOrderFinalNetTotal;
    private javax.swing.JTextField txtSaleDealerOrderItemDiscount;
    private javax.swing.JLabel txtSaleDealerOrderItemDiscountedPrice;
    private javax.swing.JLabel txtSaleDealerOrderItemFinalDiscount;
    private javax.swing.JLabel txtSaleDealerOrderItemNo;
    private javax.swing.JLabel txtSaleDealerOrderItemPrice;
    private javax.swing.JTextField txtSaleDealerOrderItemPurchasingQty;
    private javax.swing.JLabel txtSaleDealerOrderItemQtyorderd;
    private javax.swing.JLabel txtSaleDealerOrderItemRemaning;
    private javax.swing.JTextField txtSaleDealerOrderSearch;
    private javax.swing.JTextField txtSaleDealerPaymentBankAccountNo;
    private javax.swing.JTextField txtSaleDealerPaymentBankChequeDate;
    private javax.swing.JTextField txtSaleDealerPaymentBankChequeNo;
    private javax.swing.JTextField txtSaleDealerPaymentBankName;
    private javax.swing.JTextField txtSaleDealerPaymentBankRemark;
    private javax.swing.JLabel txtSaleDealerPaymentCreditEndDate;
    private javax.swing.JTextField txtSaleDealerPaymentCreditPeriod;
    // End of variables declaration//GEN-END:variables
}
